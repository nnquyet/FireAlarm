

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Jun 20 12:41:30 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16LF877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202                           
   203                           	psect	strings
   204  0800                     __pstrings:
   205  0800                     stringtab:
   206  0800                     __stringtab:
   207                           
   208                           ;	String table - string pointers are 1 byte each
   209  0800  1BFF               	btfsc	btemp+1,7
   210  0801  280A               	ljmp	stringcode
   211  0802  1383               	bcf	3,7
   212  0803  187F               	btfsc	btemp+1,0
   213  0804  1783               	bsf	3,7
   214  0805  0800               	movf	0,w
   215  0806  0A84               	incf	4,f
   216  0807  1903               	skipnz
   217  0808  0AFF               	incf	btemp+1,f
   218  0809  0008               	return
   219  080A                     stringcode:
   220  080A                     stringdir:
   221  080A  3008               	movlw	high stringdir
   222  080B  008A               	movwf	10
   223  080C  0804               	movf	4,w
   224  080D  0A84               	incf	4,f
   225  080E  0782               	addwf	2,f
   226  080F                     __stringbase:
   227  080F  3400               	retlw	0
   228  0810                     __end_of__stringtab:
   229  0810                     __powers_:
   230  0810  3400               	retlw	0
   231  0811  3400               	retlw	0
   232  0812  3480               	retlw	128
   233  0813  343F               	retlw	63
   234  0814  3400               	retlw	0
   235  0815  3400               	retlw	0
   236  0816  3420               	retlw	32
   237  0817  3441               	retlw	65
   238  0818  3400               	retlw	0
   239  0819  3400               	retlw	0
   240  081A  34C8               	retlw	200
   241  081B  3442               	retlw	66
   242  081C  3400               	retlw	0
   243  081D  3400               	retlw	0
   244  081E  347A               	retlw	122
   245  081F  3444               	retlw	68
   246  0820  3400               	retlw	0
   247  0821  3440               	retlw	64
   248  0822  341C               	retlw	28
   249  0823  3446               	retlw	70
   250  0824  3400               	retlw	0
   251  0825  3450               	retlw	80
   252  0826  34C3               	retlw	195
   253  0827  3447               	retlw	71
   254  0828  3400               	retlw	0
   255  0829  3424               	retlw	36
   256  082A  3474               	retlw	116
   257  082B  3449               	retlw	73
   258  082C  3480               	retlw	128
   259  082D  3496               	retlw	150
   260  082E  3418               	retlw	24
   261  082F  344B               	retlw	75
   262  0830  3420               	retlw	32
   263  0831  34BC               	retlw	188
   264  0832  34BE               	retlw	190
   265  0833  344C               	retlw	76
   266  0834  3428               	retlw	40
   267  0835  346B               	retlw	107
   268  0836  346E               	retlw	110
   269  0837  344E               	retlw	78
   270  0838  34F9               	retlw	249
   271  0839  3402               	retlw	2
   272  083A  3415               	retlw	21
   273  083B  3450               	retlw	80
   274  083C  34EC               	retlw	236
   275  083D  3478               	retlw	120
   276  083E  34AD               	retlw	173
   277  083F  3460               	retlw	96
   278  0840  34CA               	retlw	202
   279  0841  34F2               	retlw	242
   280  0842  3449               	retlw	73
   281  0843  3471               	retlw	113
   282  0844                     __end_of__powers_:
   283  0844                     __npowers_:
   284  0844  3400               	retlw	0
   285  0845  3400               	retlw	0
   286  0846  3480               	retlw	128
   287  0847  343F               	retlw	63
   288  0848  34CD               	retlw	205
   289  0849  34CC               	retlw	204
   290  084A  34CC               	retlw	204
   291  084B  343D               	retlw	61
   292  084C  340A               	retlw	10
   293  084D  34D7               	retlw	215
   294  084E  3423               	retlw	35
   295  084F  343C               	retlw	60
   296  0850  346F               	retlw	111
   297  0851  3412               	retlw	18
   298  0852  3483               	retlw	131
   299  0853  343A               	retlw	58
   300  0854  3417               	retlw	23
   301  0855  34B7               	retlw	183
   302  0856  34D1               	retlw	209
   303  0857  3438               	retlw	56
   304  0858  34AC               	retlw	172
   305  0859  34C5               	retlw	197
   306  085A  3427               	retlw	39
   307  085B  3437               	retlw	55
   308  085C  34BD               	retlw	189
   309  085D  3437               	retlw	55
   310  085E  3486               	retlw	134
   311  085F  3435               	retlw	53
   312  0860  3495               	retlw	149
   313  0861  34BF               	retlw	191
   314  0862  34D6               	retlw	214
   315  0863  3433               	retlw	51
   316  0864  3477               	retlw	119
   317  0865  34CC               	retlw	204
   318  0866  342B               	retlw	43
   319  0867  3432               	retlw	50
   320  0868  345F               	retlw	95
   321  0869  3470               	retlw	112
   322  086A  3489               	retlw	137
   323  086B  3430               	retlw	48
   324  086C  34FF               	retlw	255
   325  086D  34E6               	retlw	230
   326  086E  34DB               	retlw	219
   327  086F  342E               	retlw	46
   328  0870  3408               	retlw	8
   329  0871  34E5               	retlw	229
   330  0872  343C               	retlw	60
   331  0873  341E               	retlw	30
   332  0874  3460               	retlw	96
   333  0875  3442               	retlw	66
   334  0876  34A2               	retlw	162
   335  0877  340D               	retlw	13
   336  0878                     __end_of__npowers_:
   337  0878                     _dpowers:
   338  0878  3401               	retlw	1
   339  0879  3400               	retlw	0
   340  087A  3400               	retlw	0
   341  087B  3400               	retlw	0
   342  087C  340A               	retlw	10
   343  087D  3400               	retlw	0
   344  087E  3400               	retlw	0
   345  087F  3400               	retlw	0
   346  0880  3464               	retlw	100
   347  0881  3400               	retlw	0
   348  0882  3400               	retlw	0
   349  0883  3400               	retlw	0
   350  0884  34E8               	retlw	232
   351  0885  3403               	retlw	3
   352  0886  3400               	retlw	0
   353  0887  3400               	retlw	0
   354  0888  3410               	retlw	16
   355  0889  3427               	retlw	39
   356  088A  3400               	retlw	0
   357  088B  3400               	retlw	0
   358  088C  34A0               	retlw	160
   359  088D  3486               	retlw	134
   360  088E  3401               	retlw	1
   361  088F  3400               	retlw	0
   362  0890  3440               	retlw	64
   363  0891  3442               	retlw	66
   364  0892  340F               	retlw	15
   365  0893  3400               	retlw	0
   366  0894  3480               	retlw	128
   367  0895  3496               	retlw	150
   368  0896  3498               	retlw	152
   369  0897  3400               	retlw	0
   370  0898  3400               	retlw	0
   371  0899  34E1               	retlw	225
   372  089A  34F5               	retlw	245
   373  089B  3405               	retlw	5
   374  089C  3400               	retlw	0
   375  089D  34CA               	retlw	202
   376  089E  349A               	retlw	154
   377  089F  343B               	retlw	59
   378  08A0                     __end_of_dpowers:
   379  001E                     _ADRESH	set	30
   380  001F                     _ADCON0bits	set	31
   381  0019                     _TXREG	set	25
   382  001A                     _RCREG	set	26
   383  0033                     _RB3	set	51
   384  0032                     _RB2	set	50
   385  0031                     _RB1	set	49
   386  0028                     _RA0	set	40
   387  0043                     _RD3	set	67
   388  0042                     _RD2	set	66
   389  0047                     _RD7	set	71
   390  0046                     _RD6	set	70
   391  0045                     _RD5	set	69
   392  0044                     _RD4	set	68
   393  0065                     _RCIF	set	101
   394  005F                     _GIE	set	95
   395  005E                     _PEIE	set	94
   396  00C4                     _CREN	set	196
   397  00C7                     _SPEN	set	199
   398  009E                     _ADRESL	set	158
   399  009F                     _ADCON1bits	set	159
   400  0088                     _TRISD	set	136
   401  0099                     _SPBRG	set	153
   402  0433                     _TRISB3	set	1075
   403  0432                     _TRISB2	set	1074
   404  0431                     _TRISB1	set	1073
   405  0430                     _TRISB0	set	1072
   406  0428                     _TRISA0	set	1064
   407  04C1                     _TRMT	set	1217
   408  0465                     _RCIE	set	1125
   409  04C5                     _TXEN	set	1221
   410  043F                     _TRISC7	set	1087
   411  043E                     _TRISC6	set	1086
   412  04C4                     _SYNC	set	1220
   413  04C2                     _BRGH	set	1218
   414  08A0                     STR_5:
   415  08A0  3420               	retlw	32	;' '
   416  08A1  3420               	retlw	32	;' '
   417  08A2  3420               	retlw	32	;' '
   418  08A3  3420               	retlw	32	;' '
   419  08A4  3420               	retlw	32	;' '
   420  08A5  3420               	retlw	32	;' '
   421  08A6  3420               	retlw	32	;' '
   422  08A7  3420               	retlw	32	;' '
   423  08A8  3420               	retlw	32	;' '
   424  08A9  3420               	retlw	32	;' '
   425  08AA  3420               	retlw	32	;' '
   426  08AB  3420               	retlw	32	;' '
   427  08AC  3420               	retlw	32	;' '
   428  08AD  3420               	retlw	32	;' '
   429  08AE  3420               	retlw	32	;' '
   430  08AF  3420               	retlw	32	;' '
   431  08B0  3400               	retlw	0
   432  08B1                     STR_3:
   433  08B1  344E               	retlw	78	;'N'
   434  08B2  3448               	retlw	72	;'H'
   435  08B3  3449               	retlw	73	;'I'
   436  08B4  3445               	retlw	69	;'E'
   437  08B5  3454               	retlw	84	;'T'
   438  08B6  3420               	retlw	32	;' '
   439  08B7  3444               	retlw	68	;'D'
   440  08B8  344F               	retlw	79	;'O'
   441  08B9  3420               	retlw	32	;' '
   442  08BA  3443               	retlw	67	;'C'
   443  08BB  3441               	retlw	65	;'A'
   444  08BC  344F               	retlw	79	;'O'
   445  08BD  3421               	retlw	33	;'!'
   446  08BE  340A               	retlw	10
   447  08BF  340D               	retlw	13
   448  08C0  3400               	retlw	0
   449  08C1                     STR_2:
   450  08C1  344E               	retlw	78	;'N'
   451  08C2  3448               	retlw	72	;'H'
   452  08C3  3449               	retlw	73	;'I'
   453  08C4  3445               	retlw	69	;'E'
   454  08C5  3454               	retlw	84	;'T'
   455  08C6  3420               	retlw	32	;' '
   456  08C7  3444               	retlw	68	;'D'
   457  08C8  344F               	retlw	79	;'O'
   458  08C9  3420               	retlw	32	;' '
   459  08CA  343D               	retlw	61	;'='
   460  08CB  3420               	retlw	32	;' '
   461  08CC  3425               	retlw	37	;'%'
   462  08CD  3466               	retlw	102	;'f'
   463  08CE  340A               	retlw	10
   464  08CF  340D               	retlw	13
   465  08D0  3400               	retlw	0
   466  08D1                     STR_4:
   467  08D1  344E               	retlw	78	;'N'
   468  08D2  3448               	retlw	72	;'H'
   469  08D3  3449               	retlw	73	;'I'
   470  08D4  3445               	retlw	69	;'E'
   471  08D5  3454               	retlw	84	;'T'
   472  08D6  3420               	retlw	32	;' '
   473  08D7  3444               	retlw	68	;'D'
   474  08D8  344F               	retlw	79	;'O'
   475  08D9  3420               	retlw	32	;' '
   476  08DA  3443               	retlw	67	;'C'
   477  08DB  3441               	retlw	65	;'A'
   478  08DC  344F               	retlw	79	;'O'
   479  08DD  3421               	retlw	33	;'!'
   480  08DE  3400               	retlw	0
   481  08DF                     STR_1:
   482  08DF  344D               	retlw	77	;'M'
   483  08E0  3461               	retlw	97	;'a'
   484  08E1  3463               	retlw	99	;'c'
   485  08E2  3468               	retlw	104	;'h'
   486  08E3  3420               	retlw	32	;' '
   487  08E4  3442               	retlw	66	;'B'
   488  08E5  3461               	retlw	97	;'a'
   489  08E6  346F               	retlw	111	;'o'
   490  08E7  3420               	retlw	32	;' '
   491  08E8  3443               	retlw	67	;'C'
   492  08E9  3468               	retlw	104	;'h'
   493  08EA  3461               	retlw	97	;'a'
   494  08EB  3479               	retlw	121	;'y'
   495  08EC  3400               	retlw	0
   496                           
   497                           	psect	cinit
   498  07F3                     start_initialization:	
   499                           ; #config settings
   500                           
   501  07F3                     __initialization:
   502                           
   503                           ; Clear objects allocated to BANK1
   504  07F3  1383               	bcf	3,7	;select IRP bank0
   505  07F4  30CF               	movlw	low __pbssBANK1
   506  07F5  0084               	movwf	4
   507  07F6  30ED               	movlw	low (__pbssBANK1+30)
   508  07F7  160A  118A  2001  120A  118A  	fcall	clear_ram0
   509  07FC                     end_of_initialization:	
   510                           ;End of C runtime variable initialization code
   511                           
   512  07FC                     __end_of__initialization:
   513  07FC  0183               	clrf	3
   514  07FD  160A  118A  2BC7   	ljmp	_main	;jump to C main() function
   515                           
   516                           	psect	bssBANK1
   517  00CF                     __pbssBANK1:
   518  00CF                     _f:
   519  00CF                     	ds	4
   520  00D3                     _q:
   521  00D3                     	ds	2
   522  00D5                     _voltage:
   523  00D5                     	ds	2
   524  00D7                     _s:
   525  00D7                     	ds	20
   526  00EB                     _ADCvalue:
   527  00EB                     	ds	2
   528                           
   529                           	psect	clrtext
   530  1001                     clear_ram0:	
   531                           ;	Called with FSR containing the base address, and
   532                           ;	W with the last address+1
   533                           
   534  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
   535  1002                     clrloop0:
   536  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
   537  1003  0A84               	incf	4,f	;increment pointer
   538  1004  0604               	xorwf	4,w	;XOR with final address
   539  1005  1903               	btfsc	3,2	;have we reached the end yet?
   540  1006  3400               	retlw	0	;all done for this memory range, return
   541  1007  0604               	xorwf	4,w	;XOR again to restore value
   542  1008  2802               	goto	clrloop0	;do the next byte
   543                           
   544                           	psect	cstackBANK1
   545  00A0                     __pcstackBANK1:
   546  00A0                     ?___flsub:
   547  00A0                     ___flsub@a:	
   548                           ; 4 bytes @ 0x0
   549                           
   550                           
   551                           ; 4 bytes @ 0x0
   552  00A0                     	ds	4
   553  00A4                     ___flsub@b:
   554                           
   555                           ; 4 bytes @ 0x4
   556  00A4                     	ds	4
   557  00A8                     ?_sprintf:
   558  00A8                     sprintf@f:	
   559                           ; 2 bytes @ 0x8
   560                           
   561                           
   562                           ; 1 bytes @ 0x8
   563  00A8                     	ds	5
   564  00AD                     ??_sprintf:
   565                           
   566                           ; 1 bytes @ 0xD
   567  00AD                     	ds	5
   568  00B2                     _sprintf$938:
   569                           
   570                           ; 4 bytes @ 0x12
   571  00B2                     	ds	4
   572  00B6                     sprintf@ap:
   573                           
   574                           ; 1 bytes @ 0x16
   575  00B6                     	ds	1
   576  00B7                     sprintf@flag:
   577                           
   578                           ; 2 bytes @ 0x17
   579  00B7                     	ds	2
   580  00B9                     sprintf@prec:
   581                           
   582                           ; 2 bytes @ 0x19
   583  00B9                     	ds	2
   584  00BB                     sprintf@val:
   585                           
   586                           ; 4 bytes @ 0x1B
   587  00BB                     	ds	4
   588  00BF                     sprintf@eexp:
   589                           
   590                           ; 2 bytes @ 0x1F
   591  00BF                     	ds	2
   592  00C1                     sprintf@tmpval:
   593                           
   594                           ; 4 bytes @ 0x21
   595  00C1                     	ds	4
   596  00C5                     sprintf@sp:
   597                           
   598                           ; 1 bytes @ 0x25
   599  00C5                     	ds	1
   600  00C6                     sprintf@fval:
   601                           
   602                           ; 4 bytes @ 0x26
   603  00C6                     	ds	4
   604  00CA                     sprintf@c:
   605                           
   606                           ; 1 bytes @ 0x2A
   607  00CA                     	ds	1
   608  00CB                     ??_main:
   609                           
   610                           ; 1 bytes @ 0x2B
   611  00CB                     	ds	4
   612                           
   613                           	psect	cstackCOMMON
   614  0070                     __pcstackCOMMON:
   615  0070                     ?___fleq:
   616  0070                     ?___flge:	
   617                           ; 1 bit 
   618                           
   619  0070                     ?_ADCinit:	
   620                           ; 1 bit 
   621                           
   622  0070                     ??_ADCinit:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_UART_Init:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_UART_Write:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_UART_Write:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_Lcd_Port:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_Lcd_Port:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_Lcd_Cmd:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_Lcd_Init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_Lcd_Write_Char:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_ReadADC:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?__Umul8_16:	
   656                           ; 2 bytes @ 0x0
   657                           
   658  0070                     ?_Lcd_Clear:	
   659                           ; 2 bytes @ 0x0
   660                           
   661  0070                     ?___wmul:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0070                     ?___awmod:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0070                     ?___lwmod:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0070                     ?__tdiv_to_l_:	
   671                           ; 2 bytes @ 0x0
   672                           
   673  0070                     ?__div_to_l_:	
   674                           ; 4 bytes @ 0x0
   675                           
   676  0070                     ?___lldiv:	
   677                           ; 4 bytes @ 0x0
   678                           
   679  0070                     ?___flneg:	
   680                           ; 4 bytes @ 0x0
   681                           
   682  0070                     ?___llmod:	
   683                           ; 4 bytes @ 0x0
   684                           
   685  0070                     UART_Write@data:	
   686                           ; 4 bytes @ 0x0
   687                           
   688  0070                     Lcd_Port@a:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     __Umul8_16@multiplicand:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ___wmul@multiplier:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ___awmod@divisor:	
   698                           ; 2 bytes @ 0x0
   699                           
   700  0070                     ___lwmod@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703  0070                     UART_Init@baudrate:	
   704                           ; 2 bytes @ 0x0
   705                           
   706  0070                     ___lldiv@divisor:	
   707                           ; 4 bytes @ 0x0
   708                           
   709  0070                     __div_to_l_@f1:	
   710                           ; 4 bytes @ 0x0
   711                           
   712  0070                     ___fleq@ff1:	
   713                           ; 4 bytes @ 0x0
   714                           
   715  0070                     ___flge@ff1:	
   716                           ; 4 bytes @ 0x0
   717                           
   718  0070                     ___flneg@f1:	
   719                           ; 4 bytes @ 0x0
   720                           
   721  0070                     __tdiv_to_l_@f1:	
   722                           ; 4 bytes @ 0x0
   723                           
   724  0070                     ___llmod@divisor:	
   725                           ; 4 bytes @ 0x0
   726                           
   727                           
   728                           ; 4 bytes @ 0x0
   729  0070                     	ds	1
   730  0071                     ?_UART_Write_Text:
   731  0071                     ??_Lcd_Cmd:	
   732                           ; 1 bytes @ 0x1
   733                           
   734  0071                     ??_Lcd_Write_Char:	
   735                           ; 1 bytes @ 0x1
   736                           
   737  0071                     UART_Write_Text@text:	
   738                           ; 1 bytes @ 0x1
   739                           
   740                           
   741                           ; 2 bytes @ 0x1
   742  0071                     	ds	1
   743  0072                     ??_ReadADC:
   744  0072                     ??__Umul8_16:	
   745                           ; 1 bytes @ 0x2
   746                           
   747  0072                     Lcd_Write_Char@temp:	
   748                           ; 1 bytes @ 0x2
   749                           
   750  0072                     ReadADC@TempValue:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0072                     ___wmul@multiplicand:	
   754                           ; 2 bytes @ 0x2
   755                           
   756  0072                     ___awmod@dividend:	
   757                           ; 2 bytes @ 0x2
   758                           
   759  0072                     ___lwmod@dividend:	
   760                           ; 2 bytes @ 0x2
   761                           
   762                           
   763                           ; 2 bytes @ 0x2
   764  0072                     	ds	1
   765  0073                     ??_UART_Write_Text:
   766  0073                     Lcd_Cmd@a:	
   767                           ; 1 bytes @ 0x3
   768                           
   769  0073                     Lcd_Write_Char@y:	
   770                           ; 1 bytes @ 0x3
   771                           
   772                           
   773                           ; 1 bytes @ 0x3
   774  0073                     	ds	1
   775  0074                     ??_UART_Init:
   776  0074                     ??_Lcd_Clear:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     ?_Lcd_Set_Cursor:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0074                     ??_Lcd_Init:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     ??___wmul:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     ??___awmod:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0074                     ??___flneg:	
   792                           ; 1 bytes @ 0x4
   793                           
   794  0074                     ??___lwmod:	
   795                           ; 1 bytes @ 0x4
   796                           
   797  0074                     Lcd_Set_Cursor@b:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0074                     Lcd_Write_Char@a:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     ___wmul@product:	
   804                           ; 1 bytes @ 0x4
   805                           
   806  0074                     __Umul8_16@product:	
   807                           ; 2 bytes @ 0x4
   808                           
   809  0074                     ___lldiv@dividend:	
   810                           ; 2 bytes @ 0x4
   811                           
   812  0074                     __div_to_l_@f2:	
   813                           ; 4 bytes @ 0x4
   814                           
   815  0074                     ___fleq@ff2:	
   816                           ; 4 bytes @ 0x4
   817                           
   818  0074                     ___flge@ff2:	
   819                           ; 4 bytes @ 0x4
   820                           
   821  0074                     __tdiv_to_l_@f2:	
   822                           ; 4 bytes @ 0x4
   823                           
   824  0074                     ___llmod@dividend:	
   825                           ; 4 bytes @ 0x4
   826                           
   827                           
   828                           ; 4 bytes @ 0x4
   829  0074                     	ds	1
   830  0075                     ??_Lcd_Set_Cursor:
   831  0075                     ?_Lcd_Write_String:	
   832                           ; 1 bytes @ 0x5
   833                           
   834  0075                     ___awmod@counter:	
   835                           ; 1 bytes @ 0x5
   836                           
   837  0075                     ___lwmod@counter:	
   838                           ; 1 bytes @ 0x5
   839                           
   840  0075                     Lcd_Write_String@a:	
   841                           ; 1 bytes @ 0x5
   842                           
   843                           
   844                           ; 2 bytes @ 0x5
   845  0075                     	ds	1
   846  0076                     ?___lwdiv:
   847  0076                     ___awmod@sign:	
   848                           ; 2 bytes @ 0x6
   849                           
   850  0076                     UART_Write_Text@i:	
   851                           ; 1 bytes @ 0x6
   852                           
   853  0076                     ___lwdiv@divisor:	
   854                           ; 2 bytes @ 0x6
   855                           
   856  0076                     __Umul8_16@word_mpld:	
   857                           ; 2 bytes @ 0x6
   858                           
   859                           
   860                           ; 2 bytes @ 0x6
   861  0076                     	ds	1
   862  0077                     ??_Lcd_Write_String:
   863  0077                     ?___awdiv:	
   864                           ; 1 bytes @ 0x7
   865                           
   866  0077                     Lcd_Set_Cursor@a:	
   867                           ; 2 bytes @ 0x7
   868                           
   869  0077                     ___awdiv@divisor:	
   870                           ; 1 bytes @ 0x7
   871                           
   872                           
   873                           ; 2 bytes @ 0x7
   874  0077                     	ds	1
   875  0078                     ??__tdiv_to_l_:
   876  0078                     ??__div_to_l_:	
   877                           ; 1 bytes @ 0x8
   878                           
   879  0078                     ??___lldiv:	
   880                           ; 1 bytes @ 0x8
   881                           
   882  0078                     ??___fleq:	
   883                           ; 1 bytes @ 0x8
   884                           
   885  0078                     ??___flge:	
   886                           ; 1 bytes @ 0x8
   887                           
   888  0078                     ??___llmod:	
   889                           ; 1 bytes @ 0x8
   890                           
   891  0078                     Lcd_Set_Cursor@z:	
   892                           ; 1 bytes @ 0x8
   893                           
   894  0078                     __Umul8_16@multiplier:	
   895                           ; 1 bytes @ 0x8
   896                           
   897  0078                     ___lwdiv@dividend:	
   898                           ; 1 bytes @ 0x8
   899                           
   900                           
   901                           ; 2 bytes @ 0x8
   902  0078                     	ds	1
   903  0079                     Lcd_Set_Cursor@y:
   904  0079                     ___llmod@counter:	
   905                           ; 1 bytes @ 0x9
   906                           
   907  0079                     ___awdiv@dividend:	
   908                           ; 1 bytes @ 0x9
   909                           
   910  0079                     ___lldiv@quotient:	
   911                           ; 2 bytes @ 0x9
   912                           
   913                           
   914                           ; 4 bytes @ 0x9
   915  0079                     	ds	1
   916  007A                     ??___lwdiv:
   917  007A                     Lcd_Set_Cursor@temp:	
   918                           ; 1 bytes @ 0xA
   919                           
   920  007A                     Lcd_Write_String@i:	
   921                           ; 1 bytes @ 0xA
   922                           
   923                           
   924                           ; 2 bytes @ 0xA
   925  007A                     	ds	1
   926  007B                     ??___awdiv:
   927  007B                     ___lwdiv@quotient:	
   928                           ; 1 bytes @ 0xB
   929                           
   930                           
   931                           ; 2 bytes @ 0xB
   932  007B                     	ds	2
   933  007D                     ___lldiv@counter:
   934  007D                     ___lwdiv@counter:	
   935                           ; 1 bytes @ 0xD
   936                           
   937                           
   938                           ; 1 bytes @ 0xD
   939  007D                     	ds	1
   940  007E                     ??___flsub:
   941                           
   942                           	psect	cstackBANK0
   943  0020                     __pcstackBANK0:	
   944                           ; 1 bytes @ 0xE
   945                           
   946  0020                     ?___xxtofl:
   947  0020                     ___awdiv@counter:	
   948                           ; 4 bytes @ 0x0
   949                           
   950  0020                     __div_to_l_@quot:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0020                     __tdiv_to_l_@quot:	
   954                           ; 4 bytes @ 0x0
   955                           
   956  0020                     ___xxtofl@val:	
   957                           ; 4 bytes @ 0x0
   958                           
   959                           
   960                           ; 4 bytes @ 0x0
   961  0020                     	ds	1
   962  0021                     ___awdiv@sign:
   963                           
   964                           ; 1 bytes @ 0x1
   965  0021                     	ds	1
   966  0022                     ___awdiv@quotient:
   967                           
   968                           ; 2 bytes @ 0x2
   969  0022                     	ds	2
   970  0024                     ??___xxtofl:
   971  0024                     __div_to_l_@cntr:	
   972                           ; 1 bytes @ 0x4
   973                           
   974  0024                     __tdiv_to_l_@cntr:	
   975                           ; 1 bytes @ 0x4
   976                           
   977                           
   978                           ; 1 bytes @ 0x4
   979  0024                     	ds	1
   980  0025                     __div_to_l_@exp1:
   981  0025                     __tdiv_to_l_@exp1:	
   982                           ; 1 bytes @ 0x5
   983                           
   984                           
   985                           ; 1 bytes @ 0x5
   986  0025                     	ds	3
   987  0028                     ___xxtofl@sign:
   988                           
   989                           ; 1 bytes @ 0x8
   990  0028                     	ds	1
   991  0029                     ___xxtofl@exp:
   992                           
   993                           ; 1 bytes @ 0x9
   994  0029                     	ds	1
   995  002A                     ___xxtofl@arg:
   996                           
   997                           ; 4 bytes @ 0xA
   998  002A                     	ds	4
   999  002E                     ?___flmul:
  1000  002E                     ___flmul@b:	
  1001                           ; 4 bytes @ 0xE
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0xE
  1005  002E                     	ds	4
  1006  0032                     ___flmul@a:
  1007                           
  1008                           ; 4 bytes @ 0x12
  1009  0032                     	ds	4
  1010  0036                     ??___flmul:
  1011                           
  1012                           ; 1 bytes @ 0x16
  1013  0036                     	ds	5
  1014  003B                     ___flmul@sign:
  1015                           
  1016                           ; 1 bytes @ 0x1B
  1017  003B                     	ds	1
  1018  003C                     ___flmul@grs:
  1019                           
  1020                           ; 4 bytes @ 0x1C
  1021  003C                     	ds	4
  1022  0040                     ___flmul@aexp:
  1023                           
  1024                           ; 1 bytes @ 0x20
  1025  0040                     	ds	1
  1026  0041                     ___flmul@bexp:
  1027                           
  1028                           ; 1 bytes @ 0x21
  1029  0041                     	ds	1
  1030  0042                     ___flmul@prod:
  1031                           
  1032                           ; 4 bytes @ 0x22
  1033  0042                     	ds	4
  1034  0046                     ___flmul@temp:
  1035                           
  1036                           ; 2 bytes @ 0x26
  1037  0046                     	ds	2
  1038  0048                     ?_fround:
  1039  0048                     ?_scale:	
  1040                           ; 4 bytes @ 0x28
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0x28
  1044  0048                     	ds	4
  1045  004C                     ??_fround:
  1046  004C                     ??_scale:	
  1047                           ; 1 bytes @ 0x2C
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0x2C
  1051  004C                     	ds	7
  1052  0053                     _fround$936:
  1053                           
  1054                           ; 4 bytes @ 0x33
  1055  0053                     	ds	3
  1056  0056                     _scale$937:
  1057                           
  1058                           ; 4 bytes @ 0x36
  1059  0056                     	ds	1
  1060  0057                     _fround$935:
  1061                           
  1062                           ; 4 bytes @ 0x37
  1063  0057                     	ds	3
  1064  005A                     scale@scl:
  1065                           
  1066                           ; 1 bytes @ 0x3A
  1067  005A                     	ds	1
  1068  005B                     ?___fltol:
  1069  005B                     fround@prec:	
  1070                           ; 4 bytes @ 0x3B
  1071                           
  1072  005B                     ___fltol@f1:	
  1073                           ; 1 bytes @ 0x3B
  1074                           
  1075                           
  1076                           ; 4 bytes @ 0x3B
  1077  005B                     	ds	1
  1078  005C                     ?___fladd:
  1079  005C                     ___fladd@b:	
  1080                           ; 4 bytes @ 0x3C
  1081                           
  1082                           
  1083                           ; 4 bytes @ 0x3C
  1084  005C                     	ds	3
  1085  005F                     ??___fltol:
  1086                           
  1087                           ; 1 bytes @ 0x3F
  1088  005F                     	ds	1
  1089  0060                     ___fladd@a:
  1090                           
  1091                           ; 4 bytes @ 0x40
  1092  0060                     	ds	4
  1093  0064                     ??___fladd:
  1094  0064                     ___fltol@sign1:	
  1095                           ; 1 bytes @ 0x44
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x44
  1099  0064                     	ds	1
  1100  0065                     ___fltol@exp1:
  1101                           
  1102                           ; 1 bytes @ 0x45
  1103  0065                     	ds	7
  1104  006C                     ___fladd@signs:
  1105                           
  1106                           ; 1 bytes @ 0x4C
  1107  006C                     	ds	1
  1108  006D                     ___fladd@aexp:
  1109                           
  1110                           ; 1 bytes @ 0x4D
  1111  006D                     	ds	1
  1112  006E                     ___fladd@bexp:
  1113                           
  1114                           ; 1 bytes @ 0x4E
  1115  006E                     	ds	1
  1116  006F                     ___fladd@grs:
  1117                           
  1118                           ; 1 bytes @ 0x4F
  1119  006F                     	ds	1
  1120                           
  1121                           	psect	maintext
  1122  13C7                     __pmaintext:	
  1123 ;;
  1124 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1125 ;;
  1126 ;; *************** function _main *****************
  1127 ;; Defined at:
  1128 ;;		line 33 in file "newmain.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : B00/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0
  1144 ;;      Temps:          0       0       4       0       0
  1145 ;;      Totals:         0       0       4       0       0
  1146 ;;Total ram usage:        4 bytes
  1147 ;; Hardware stack levels required when called:    4
  1148 ;; This function calls:
  1149 ;;		_ADCinit
  1150 ;;		_Lcd_Clear
  1151 ;;		_Lcd_Init
  1152 ;;		_Lcd_Set_Cursor
  1153 ;;		_Lcd_Write_String
  1154 ;;		_ReadADC
  1155 ;;		_UART_Init
  1156 ;;		_UART_Write_Text
  1157 ;;		___fleq
  1158 ;;		___flge
  1159 ;;		___flmul
  1160 ;;		___fltol
  1161 ;;		___lwdiv
  1162 ;;		___xxtofl
  1163 ;;		_sprintf
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _main
  1171  13C7                     _main:
  1172  13C7                     l3293:	
  1173                           ;incstack = 0
  1174                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1175                           
  1176                           
  1177                           ;newmain.c: 34:         f = voltage / 10;
  1178  13C7  160A  158A  242C  160A  118A  	fcall	_ADCinit
  1179  13CC                     l3295:
  1180                           
  1181                           ;newmain.c: 35:         sprintf(s, "NHIET DO = %f\n\r", f);
  1182  13CC  3000               	movlw	0
  1183  13CD  00F3               	movwf	UART_Init@baudrate+3
  1184  13CE  3000               	movlw	0
  1185  13CF  00F2               	movwf	UART_Init@baudrate+2
  1186  13D0  3025               	movlw	37
  1187  13D1  00F1               	movwf	UART_Init@baudrate+1
  1188  13D2  3080               	movlw	128
  1189  13D3  00F0               	movwf	UART_Init@baudrate
  1190  13D4  160A  158A  2441  160A  118A  	fcall	_UART_Init
  1191  13D9                     l3297:
  1192                           
  1193                           ;newmain.c: 37:            UART_Write_Text(s);
  1194  13D9  1283               	bcf	3,5	;RP0=0, select bank0
  1195  13DA  1303               	bcf	3,6	;RP1=0, select bank0
  1196  13DB  1405               	bsf	5,0	;volatile
  1197  13DC                     l3299:
  1198                           
  1199                           ;newmain.c: 38:         }
  1200  13DC  1683               	bsf	3,5	;RP0=1, select bank1
  1201  13DD  1303               	bcf	3,6	;RP1=0, select bank1
  1202  13DE  1405               	bsf	5,0	;volatile
  1203  13DF                     l3301:
  1204                           
  1205                           ;newmain.c: 39: 
  1206  13DF  1406               	bsf	6,0	;volatile
  1207  13E0                     l3303:
  1208                           
  1209                           ;newmain.c: 40:          Lcd_Set_Cursor(2,1);
  1210  13E0  1086               	bcf	6,1	;volatile
  1211  13E1                     l3305:
  1212                           
  1213                           ;newmain.c: 41:          Lcd_Write_String(s);
  1214  13E1  1106               	bcf	6,2	;volatile
  1215  13E2                     l3307:
  1216                           
  1217                           ;newmain.c: 42:          _delay((unsigned long)((1000)*(4000000/4000.0)));
  1218  13E2  1186               	bcf	6,3	;volatile
  1219  13E3                     l3309:
  1220                           
  1221                           ;newmain.c: 43:          if(q == 0) {
  1222  13E3  0188               	clrf	8	;volatile
  1223  13E4                     l3311:
  1224                           
  1225                           ;newmain.c: 44:                 _delay((unsigned long)((5000)*(4000000/4000.0)));
  1226  13E4  160A  158A  273D  160A  118A  	fcall	_Lcd_Init
  1227  13E9                     l3313:
  1228                           
  1229                           ;newmain.c: 45:                 q++;
  1230  13E9  01F4               	clrf	Lcd_Set_Cursor@b
  1231  13EA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1232  13EB  3001               	movlw	1
  1233  13EC  120A  158A  20EE  160A  118A  	fcall	_Lcd_Set_Cursor
  1234  13F1                     l3315:
  1235                           
  1236                           ;newmain.c: 46:             }
  1237  13F1  30D0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1238  13F2  00F5               	movwf	Lcd_Write_String@a
  1239  13F3  3080               	movlw	128
  1240  13F4  00F6               	movwf	Lcd_Write_String@a+1
  1241  13F5  160A  158A  252A  160A  118A  	fcall	_Lcd_Write_String
  1242  13FA                     l3317:
  1243                           
  1244                           ;newmain.c: 47: 
  1245  13FA  3006               	movlw	6
  1246  13FB  1683               	bsf	3,5	;RP0=1, select bank1
  1247  13FC  1303               	bcf	3,6	;RP1=0, select bank1
  1248  13FD  00CD               	movwf	(??_main^(0+128)+2)
  1249  13FE  3013               	movlw	19
  1250  13FF  00CC               	movwf	(??_main^(0+128)+1)
  1251  1400  30AD               	movlw	173
  1252  1401  00CB               	movwf	??_main^(0+128)
  1253  1402                     u5397:
  1254  1402  0BCB               	decfsz	??_main^(0+128),f
  1255  1403  2C02               	goto	u5397
  1256  1404  0BCC               	decfsz	(??_main^(0+128)+1),f
  1257  1405  2C02               	goto	u5397
  1258  1406  0BCD               	decfsz	(??_main^(0+128)+2),f
  1259  1407  2C02               	goto	u5397
  1260  1408                     l3319:
  1261                           
  1262                           ;newmain.c: 48:         if(f>59){
  1263  1408  160A  158A  240D  160A  118A  	fcall	_Lcd_Clear
  1264  140D                     l3321:
  1265                           
  1266                           ;newmain.c: 52:             UART_Write_Text("NHIET DO CAO!\n\r");
  1267  140D  1283               	bcf	3,5	;RP0=0, select bank0
  1268  140E  1303               	bcf	3,6	;RP1=0, select bank0
  1269  140F  1086               	bcf	6,1	;volatile
  1270  1410                     l3323:
  1271                           
  1272                           ;newmain.c: 53:             Lcd_Set_Cursor(1,1);
  1273  1410  1106               	bcf	6,2	;volatile
  1274  1411                     l3325:
  1275                           
  1276                           ;newmain.c: 54:             Lcd_Write_String("NHIET DO CAO!");
  1277  1411  1186               	bcf	6,3	;volatile
  1278  1412                     l3327:
  1279                           
  1280                           ;newmain.c: 55:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  1281  1412  160A  158A  241A  160A  118A  	fcall	_ReadADC
  1282  1417  0871               	movf	?_ReadADC+1,w
  1283  1418  1683               	bsf	3,5	;RP0=1, select bank1
  1284  1419  1303               	bcf	3,6	;RP1=0, select bank1
  1285  141A  00EC               	movwf	(_ADCvalue+1)^(0+128)
  1286  141B  0870               	movf	?_ReadADC,w
  1287  141C  00EB               	movwf	_ADCvalue^(0+128)
  1288  141D                     l3329:
  1289                           
  1290                           ;newmain.c: 56:             Lcd_Set_Cursor(1,1);
  1291  141D  086B               	movf	_ADCvalue^(0+128),w
  1292  141E  1283               	bcf	3,5	;RP0=0, select bank0
  1293  141F  1303               	bcf	3,6	;RP1=0, select bank0
  1294  1420  00A0               	movwf	___xxtofl@val
  1295  1421  1683               	bsf	3,5	;RP0=1, select bank1
  1296  1422  1303               	bcf	3,6	;RP1=0, select bank1
  1297  1423  086C               	movf	(_ADCvalue+1)^(0+128),w
  1298  1424  1283               	bcf	3,5	;RP0=0, select bank0
  1299  1425  1303               	bcf	3,6	;RP1=0, select bank0
  1300  1426  00A1               	movwf	___xxtofl@val+1
  1301  1427  01A2               	clrf	___xxtofl@val+2
  1302  1428  01A3               	clrf	___xxtofl@val+3
  1303  1429  3000               	movlw	0
  1304  142A  160A  118A  2190  160A  118A  	fcall	___xxtofl
  1305  142F  1283               	bcf	3,5	;RP0=0, select bank0
  1306  1430  1303               	bcf	3,6	;RP1=0, select bank0
  1307  1431  0823               	movf	?___xxtofl+3,w
  1308  1432  00B5               	movwf	___flmul@a+3
  1309  1433  0822               	movf	?___xxtofl+2,w
  1310  1434  00B4               	movwf	___flmul@a+2
  1311  1435  0821               	movf	?___xxtofl+1,w
  1312  1436  00B3               	movwf	___flmul@a+1
  1313  1437  0820               	movf	?___xxtofl,w
  1314  1438  00B2               	movwf	___flmul@a
  1315  1439  3040               	movlw	64
  1316  143A  00B1               	movwf	___flmul@b+3
  1317  143B  309C               	movlw	156
  1318  143C  00B0               	movwf	___flmul@b+2
  1319  143D  3067               	movlw	103
  1320  143E  00AF               	movwf	___flmul@b+1
  1321  143F  301A               	movlw	26
  1322  1440  00AE               	movwf	___flmul@b
  1323  1441  120A  158A  249F  160A  118A  	fcall	___flmul
  1324  1446  1283               	bcf	3,5	;RP0=0, select bank0
  1325  1447  1303               	bcf	3,6	;RP1=0, select bank0
  1326  1448  0831               	movf	?___flmul+3,w
  1327  1449  00DE               	movwf	___fltol@f1+3
  1328  144A  0830               	movf	?___flmul+2,w
  1329  144B  00DD               	movwf	___fltol@f1+2
  1330  144C  082F               	movf	?___flmul+1,w
  1331  144D  00DC               	movwf	___fltol@f1+1
  1332  144E  082E               	movf	?___flmul,w
  1333  144F  00DB               	movwf	___fltol@f1
  1334  1450  160A  118A  2072  160A  118A  	fcall	___fltol
  1335  1455  1283               	bcf	3,5	;RP0=0, select bank0
  1336  1456  1303               	bcf	3,6	;RP1=0, select bank0
  1337  1457  085C               	movf	?___fltol+1,w
  1338  1458  1683               	bsf	3,5	;RP0=1, select bank1
  1339  1459  1303               	bcf	3,6	;RP1=0, select bank1
  1340  145A  00D6               	movwf	(_voltage+1)^(0+128)
  1341  145B  1283               	bcf	3,5	;RP0=0, select bank0
  1342  145C  1303               	bcf	3,6	;RP1=0, select bank0
  1343  145D  085B               	movf	?___fltol,w
  1344  145E  1683               	bsf	3,5	;RP0=1, select bank1
  1345  145F  1303               	bcf	3,6	;RP1=0, select bank1
  1346  1460  00D5               	movwf	_voltage^(0+128)
  1347  1461                     l3331:
  1348                           
  1349                           ;newmain.c: 57:             Lcd_Write_String("                ");
  1350  1461  0856               	movf	(_voltage+1)^(0+128),w
  1351  1462  00F9               	movwf	___lwdiv@dividend+1
  1352  1463  0855               	movf	_voltage^(0+128),w
  1353  1464  00F8               	movwf	___lwdiv@dividend
  1354  1465  300A               	movlw	10
  1355  1466  00F6               	movwf	___lwdiv@divisor
  1356  1467  3000               	movlw	0
  1357  1468  00F7               	movwf	___lwdiv@divisor+1
  1358  1469  160A  158A  25AE  160A  118A  	fcall	___lwdiv
  1359  146E  0876               	movf	?___lwdiv,w
  1360  146F  1683               	bsf	3,5	;RP0=1, select bank1
  1361  1470  1303               	bcf	3,6	;RP1=0, select bank1
  1362  1471  00CB               	movwf	??_main^(0+128)
  1363  1472  0877               	movf	?___lwdiv+1,w
  1364  1473  00CC               	movwf	(??_main^(0+128)+1)
  1365  1474  01CD               	clrf	(??_main^(0+128)+2)
  1366  1475  01CE               	clrf	(??_main^(0+128)+3)
  1367  1476  084E               	movf	(??_main+3)^(0+128),w
  1368  1477  1283               	bcf	3,5	;RP0=0, select bank0
  1369  1478  1303               	bcf	3,6	;RP1=0, select bank0
  1370  1479  00A3               	movwf	___xxtofl@val+3
  1371  147A  1683               	bsf	3,5	;RP0=1, select bank1
  1372  147B  1303               	bcf	3,6	;RP1=0, select bank1
  1373  147C  084D               	movf	(??_main+2)^(0+128),w
  1374  147D  1283               	bcf	3,5	;RP0=0, select bank0
  1375  147E  1303               	bcf	3,6	;RP1=0, select bank0
  1376  147F  00A2               	movwf	___xxtofl@val+2
  1377  1480  1683               	bsf	3,5	;RP0=1, select bank1
  1378  1481  1303               	bcf	3,6	;RP1=0, select bank1
  1379  1482  084C               	movf	(??_main+1)^(0+128),w
  1380  1483  1283               	bcf	3,5	;RP0=0, select bank0
  1381  1484  1303               	bcf	3,6	;RP1=0, select bank0
  1382  1485  00A1               	movwf	___xxtofl@val+1
  1383  1486  1683               	bsf	3,5	;RP0=1, select bank1
  1384  1487  1303               	bcf	3,6	;RP1=0, select bank1
  1385  1488  084B               	movf	??_main^(0+128),w
  1386  1489  1283               	bcf	3,5	;RP0=0, select bank0
  1387  148A  1303               	bcf	3,6	;RP1=0, select bank0
  1388  148B  00A0               	movwf	___xxtofl@val
  1389  148C  3000               	movlw	0
  1390  148D  160A  118A  2190  160A  118A  	fcall	___xxtofl
  1391  1492  1283               	bcf	3,5	;RP0=0, select bank0
  1392  1493  1303               	bcf	3,6	;RP1=0, select bank0
  1393  1494  0823               	movf	?___xxtofl+3,w
  1394  1495  1683               	bsf	3,5	;RP0=1, select bank1
  1395  1496  1303               	bcf	3,6	;RP1=0, select bank1
  1396  1497  00D2               	movwf	(_f+3)^(0+128)
  1397  1498  1283               	bcf	3,5	;RP0=0, select bank0
  1398  1499  1303               	bcf	3,6	;RP1=0, select bank0
  1399  149A  0822               	movf	?___xxtofl+2,w
  1400  149B  1683               	bsf	3,5	;RP0=1, select bank1
  1401  149C  1303               	bcf	3,6	;RP1=0, select bank1
  1402  149D  00D1               	movwf	(_f+2)^(0+128)
  1403  149E  1283               	bcf	3,5	;RP0=0, select bank0
  1404  149F  1303               	bcf	3,6	;RP1=0, select bank0
  1405  14A0  0821               	movf	?___xxtofl+1,w
  1406  14A1  1683               	bsf	3,5	;RP0=1, select bank1
  1407  14A2  1303               	bcf	3,6	;RP1=0, select bank1
  1408  14A3  00D0               	movwf	(_f+1)^(0+128)
  1409  14A4  1283               	bcf	3,5	;RP0=0, select bank0
  1410  14A5  1303               	bcf	3,6	;RP1=0, select bank0
  1411  14A6  0820               	movf	?___xxtofl,w
  1412  14A7  1683               	bsf	3,5	;RP0=1, select bank1
  1413  14A8  1303               	bcf	3,6	;RP1=0, select bank1
  1414  14A9  00CF               	movwf	_f^(0+128)
  1415  14AA                     l3333:
  1416                           
  1417                           ;newmain.c: 58:         }
  1418  14AA  30B2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1419  14AB  00CB               	movwf	??_main^(0+128)
  1420  14AC  084B               	movf	??_main^(0+128),w
  1421  14AD  00A8               	movwf	sprintf@f^(0+128)
  1422  14AE  0852               	movf	(_f+3)^(0+128),w
  1423  14AF  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1424  14B0  0851               	movf	(_f+2)^(0+128),w
  1425  14B1  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1426  14B2  0850               	movf	(_f+1)^(0+128),w
  1427  14B3  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1428  14B4  084F               	movf	_f^(0+128),w
  1429  14B5  00A9               	movwf	(?_sprintf^(0+128)+1)
  1430  14B6  30D7               	movlw	(low (_s| 0))& (0+255)
  1431  14B7  120A  118A  223B  160A  118A  	fcall	_sprintf
  1432  14BC                     l3335:
  1433                           
  1434                           ;newmain.c: 59:     }
  1435  14BC  1683               	bsf	3,5	;RP0=1, select bank1
  1436  14BD  1303               	bcf	3,6	;RP1=0, select bank1
  1437  14BE  0852               	movf	(_f+3)^(0+128),w
  1438  14BF  00F3               	movwf	___fleq@ff1+3
  1439  14C0  0851               	movf	(_f+2)^(0+128),w
  1440  14C1  00F2               	movwf	___fleq@ff1+2
  1441  14C2  0850               	movf	(_f+1)^(0+128),w
  1442  14C3  00F1               	movwf	___fleq@ff1+1
  1443  14C4  084F               	movf	_f^(0+128),w
  1444  14C5  00F0               	movwf	___fleq@ff1
  1445  14C6  3000               	movlw	0
  1446  14C7  00F7               	movwf	___fleq@ff2+3
  1447  14C8  3000               	movlw	0
  1448  14C9  00F6               	movwf	___fleq@ff2+2
  1449  14CA  3000               	movlw	0
  1450  14CB  00F5               	movwf	___fleq@ff2+1
  1451  14CC  3000               	movlw	0
  1452  14CD  00F4               	movwf	___fleq@ff2
  1453  14CE  160A  158A  25F2  160A  118A  	fcall	___fleq
  1454  14D3  1803               	btfsc	3,0
  1455  14D4  2CD6               	goto	u5361
  1456  14D5  2CD7               	goto	u5360
  1457  14D6                     u5361:
  1458  14D6  2CE0               	goto	l3339
  1459  14D7                     u5360:
  1460  14D7                     l3337:
  1461                           
  1462                           ;newmain.c: 60: }
  1463  14D7  30D7               	movlw	(low (_s| 0))& (0+255)
  1464  14D8  00F1               	movwf	UART_Write_Text@text
  1465  14D9  3000               	movlw	0
  1466  14DA  00F2               	movwf	UART_Write_Text@text+1
  1467  14DB  160A  158A  256C  160A  118A  	fcall	_UART_Write_Text
  1468  14E0                     l3339:
  1469                           
  1470                           ;newmain.c: 63: 
  1471  14E0  01F4               	clrf	Lcd_Set_Cursor@b
  1472  14E1  0AF4               	incf	Lcd_Set_Cursor@b,f
  1473  14E2  3002               	movlw	2
  1474  14E3  120A  158A  20EE  160A  118A  	fcall	_Lcd_Set_Cursor
  1475  14E8                     l3341:
  1476                           
  1477                           ;newmain.c: 64:     ADCON1bits.ADCS2 = 0, ADCON0bits.ADCS1 = 0,ADCON0bits.ADCS0 = 1;
  1478  14E8  30D7               	movlw	(low (_s| 0))& (0+255)
  1479  14E9  00F5               	movwf	Lcd_Write_String@a
  1480  14EA  3000               	movlw	0
  1481  14EB  00F6               	movwf	Lcd_Write_String@a+1
  1482  14EC  160A  158A  252A  160A  118A  	fcall	_Lcd_Write_String
  1483  14F1                     l3343:
  1484                           
  1485                           ;newmain.c: 65: 
  1486  14F1  3006               	movlw	6
  1487  14F2  1683               	bsf	3,5	;RP0=1, select bank1
  1488  14F3  1303               	bcf	3,6	;RP1=0, select bank1
  1489  14F4  00CD               	movwf	(??_main^(0+128)+2)
  1490  14F5  3013               	movlw	19
  1491  14F6  00CC               	movwf	(??_main^(0+128)+1)
  1492  14F7  30AD               	movlw	173
  1493  14F8  00CB               	movwf	??_main^(0+128)
  1494  14F9                     u5407:
  1495  14F9  0BCB               	decfsz	??_main^(0+128),f
  1496  14FA  2CF9               	goto	u5407
  1497  14FB  0BCC               	decfsz	(??_main^(0+128)+1),f
  1498  14FC  2CF9               	goto	u5407
  1499  14FD  0BCD               	decfsz	(??_main^(0+128)+2),f
  1500  14FE  2CF9               	goto	u5407
  1501  14FF                     l3345:
  1502                           
  1503                           ;newmain.c: 66:     ADCON0bits.CHS2 = 0, ADCON0bits.CHS1 = 0, ADCON0bits.CHS0 = 0;
  1504  14FF  1683               	bsf	3,5	;RP0=1, select bank1
  1505  1500  1303               	bcf	3,6	;RP1=0, select bank1
  1506  1501  0853               	movf	_q^(0+128),w
  1507  1502  0454               	iorwf	(_q+1)^(0+128),w
  1508  1503  1D03               	btfss	3,2
  1509  1504  2D06               	goto	u5371
  1510  1505  2D07               	goto	u5370
  1511  1506                     u5371:
  1512  1506  2D1E               	goto	l3349
  1513  1507                     u5370:
  1514  1507                     l3347:
  1515                           
  1516                           ;newmain.c: 67: 
  1517  1507  301A               	movlw	26
  1518  1508  1683               	bsf	3,5	;RP0=1, select bank1
  1519  1509  1303               	bcf	3,6	;RP1=0, select bank1
  1520  150A  00CD               	movwf	(??_main^(0+128)+2)
  1521  150B  305E               	movlw	94
  1522  150C  00CC               	movwf	(??_main^(0+128)+1)
  1523  150D  306D               	movlw	109
  1524  150E  00CB               	movwf	??_main^(0+128)
  1525  150F                     u5417:
  1526  150F  0BCB               	decfsz	??_main^(0+128),f
  1527  1510  2D0F               	goto	u5417
  1528  1511  0BCC               	decfsz	(??_main^(0+128)+1),f
  1529  1512  2D0F               	goto	u5417
  1530  1513  0BCD               	decfsz	(??_main^(0+128)+2),f
  1531  1514  2D0F               	goto	u5417
  1532  1515  2D16               	nop2
  1533                           
  1534                           ;newmain.c: 68:     ADCON1bits.ADFM = 1;
  1535  1516  3001               	movlw	1
  1536  1517  1683               	bsf	3,5	;RP0=1, select bank1
  1537  1518  1303               	bcf	3,6	;RP1=0, select bank1
  1538  1519  07D3               	addwf	_q^(0+128),f
  1539  151A  1803               	skipnc
  1540  151B  0AD4               	incf	(_q+1)^(0+128),f
  1541  151C  3000               	movlw	0
  1542  151D  07D4               	addwf	(_q+1)^(0+128),f
  1543  151E                     l3349:
  1544                           
  1545                           ;newmain.c: 71: 
  1546  151E  3042               	movlw	66
  1547  151F  00F3               	movwf	___flge@ff1+3
  1548  1520  306C               	movlw	108
  1549  1521  00F2               	movwf	___flge@ff1+2
  1550  1522  3000               	movlw	0
  1551  1523  00F1               	movwf	___flge@ff1+1
  1552  1524  3000               	movlw	0
  1553  1525  00F0               	movwf	___flge@ff1
  1554  1526  0852               	movf	(_f+3)^(0+128),w
  1555  1527  00F7               	movwf	___flge@ff2+3
  1556  1528  0851               	movf	(_f+2)^(0+128),w
  1557  1529  00F6               	movwf	___flge@ff2+2
  1558  152A  0850               	movf	(_f+1)^(0+128),w
  1559  152B  00F5               	movwf	___flge@ff2+1
  1560  152C  084F               	movf	_f^(0+128),w
  1561  152D  00F4               	movwf	___flge@ff2
  1562  152E  160A  118A  20EE  160A  118A  	fcall	___flge
  1563  1533  1803               	btfsc	3,0
  1564  1534  2D36               	goto	u5381
  1565  1535  2D37               	goto	u5380
  1566  1536                     u5381:
  1567  1536  2C0D               	goto	l3321
  1568  1537                     u5380:
  1569  1537                     l3351:
  1570                           
  1571                           ;newmain.c: 73: }
  1572  1537  1283               	bcf	3,5	;RP0=0, select bank0
  1573  1538  1303               	bcf	3,6	;RP1=0, select bank0
  1574  1539  1486               	bsf	6,1	;volatile
  1575                           
  1576                           ;newmain.c: 74: unsigned int ReadADC (void)
  1577  153A  1506               	bsf	6,2	;volatile
  1578  153B                     l3353:
  1579                           
  1580                           ;newmain.c: 75: {
  1581  153B  30A2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1582  153C  00F1               	movwf	UART_Write_Text@text
  1583  153D  3080               	movlw	128
  1584  153E  00F2               	movwf	UART_Write_Text@text+1
  1585  153F  160A  158A  256C  160A  118A  	fcall	_UART_Write_Text
  1586  1544                     l3355:
  1587                           
  1588                           ;newmain.c: 76:     unsigned int TempValue = 0;
  1589  1544  01F4               	clrf	Lcd_Set_Cursor@b
  1590  1545  0AF4               	incf	Lcd_Set_Cursor@b,f
  1591  1546  3001               	movlw	1
  1592  1547  120A  158A  20EE  160A  118A  	fcall	_Lcd_Set_Cursor
  1593  154C                     l3357:
  1594                           
  1595                           ;newmain.c: 77:     ADCON0bits.GO_nDONE = 1;
  1596  154C  30C2               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1597  154D  00F5               	movwf	Lcd_Write_String@a
  1598  154E  3080               	movlw	128
  1599  154F  00F6               	movwf	Lcd_Write_String@a+1
  1600  1550  160A  158A  252A  160A  118A  	fcall	_Lcd_Write_String
  1601  1555                     l3359:
  1602                           
  1603                           ;newmain.c: 78:     while(ADCON0bits.GO_nDONE);
  1604  1555  3006               	movlw	6
  1605  1556  1683               	bsf	3,5	;RP0=1, select bank1
  1606  1557  1303               	bcf	3,6	;RP1=0, select bank1
  1607  1558  00CD               	movwf	(??_main^(0+128)+2)
  1608  1559  3013               	movlw	19
  1609  155A  00CC               	movwf	(??_main^(0+128)+1)
  1610  155B  30AD               	movlw	173
  1611  155C  00CB               	movwf	??_main^(0+128)
  1612  155D                     u5427:
  1613  155D  0BCB               	decfsz	??_main^(0+128),f
  1614  155E  2D5D               	goto	u5427
  1615  155F  0BCC               	decfsz	(??_main^(0+128)+1),f
  1616  1560  2D5D               	goto	u5427
  1617  1561  0BCD               	decfsz	(??_main^(0+128)+2),f
  1618  1562  2D5D               	goto	u5427
  1619  1563                     l3361:
  1620                           
  1621                           ;newmain.c: 79:     TempValue = ADRESH*256 + ADRESL;
  1622  1563  01F4               	clrf	Lcd_Set_Cursor@b
  1623  1564  0AF4               	incf	Lcd_Set_Cursor@b,f
  1624  1565  3001               	movlw	1
  1625  1566  120A  158A  20EE  160A  118A  	fcall	_Lcd_Set_Cursor
  1626  156B                     l3363:
  1627                           
  1628                           ;newmain.c: 80:     return (TempValue);
  1629  156B  3091               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1630  156C  00F5               	movwf	Lcd_Write_String@a
  1631  156D  3080               	movlw	128
  1632  156E  00F6               	movwf	Lcd_Write_String@a+1
  1633  156F  160A  158A  252A  160A  118A  	fcall	_Lcd_Write_String
  1634  1574  2C0D               	goto	l3321
  1635  1575  120A  118A  2800   	ljmp	start
  1636  1578                     __end_of_main:
  1637                           
  1638                           	psect	text1
  1639  023B                     __ptext1:	
  1640 ;; *************** function _sprintf *****************
  1641 ;; Defined at:
  1642 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  sp              1    wreg     PTR unsigned char 
  1645 ;;		 -> s(20), 
  1646 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1647 ;;		 -> STR_2(16), 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  sp              1   37[BANK1 ] PTR unsigned char 
  1650 ;;		 -> s(20), 
  1651 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1652 ;;  tmpval          4   33[BANK1 ] struct .
  1653 ;;  val             4   27[BANK1 ] unsigned long 
  1654 ;;  eexp            2   31[BANK1 ] int 
  1655 ;;  prec            2   25[BANK1 ] int 
  1656 ;;  flag            2   23[BANK1 ] unsigned short 
  1657 ;;  cp              2    0        PTR const unsigned char 
  1658 ;;  len             2    0        unsigned int 
  1659 ;;  width           2    0        int 
  1660 ;;  c               1   42[BANK1 ] unsigned char 
  1661 ;;  ap              1   22[BANK1 ] PTR void [1]
  1662 ;;		 -> ?_sprintf(2), 
  1663 ;;  d               1    0        unsigned char 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  2    8[BANK1 ] int 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       0       5       0       0
  1674 ;;      Locals:         0       0      25       0       0
  1675 ;;      Temps:          0       0       5       0       0
  1676 ;;      Totals:         0       0      35       0       0
  1677 ;;Total ram usage:       35 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    3
  1680 ;; This function calls:
  1681 ;;		___awdiv
  1682 ;;		___fladd
  1683 ;;		___fleq
  1684 ;;		___flge
  1685 ;;		___flmul
  1686 ;;		___flneg
  1687 ;;		___flsub
  1688 ;;		___fltol
  1689 ;;		___lldiv
  1690 ;;		___llmod
  1691 ;;		___wmul
  1692 ;;		___xxtofl
  1693 ;;		__div_to_l_
  1694 ;;		__tdiv_to_l_
  1695 ;;		_fround
  1696 ;;		_scale
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function _sprintf
  1704  023B                     _sprintf:
  1705                           
  1706                           ;incstack = 0
  1707                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1708                           ;sprintf@sp stored from wreg
  1709  023B  1683               	bsf	3,5	;RP0=1, select bank1
  1710  023C  1303               	bcf	3,6	;RP1=0, select bank1
  1711  023D  00C5               	movwf	sprintf@sp^(0+128)
  1712  023E                     l3117:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1715  023E  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1716  023F  00AD               	movwf	??_sprintf^(0+128)
  1717  0240  082D               	movf	??_sprintf^(0+128),w
  1718  0241  00B6               	movwf	sprintf@ap^(0+128)
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1721  0242  2FDC               	goto	l3277
  1722  0243                     l3119:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1725  0243  3025               	movlw	37
  1726  0244  064A               	xorwf	sprintf@c^(0+128),w
  1727  0245  1903               	btfsc	3,2
  1728  0246  2A48               	goto	u5091
  1729  0247  2A49               	goto	u5090
  1730  0248                     u5091:
  1731  0248  2A55               	goto	l3125
  1732  0249                     u5090:
  1733  0249                     l3121:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1736  0249  084A               	movf	sprintf@c^(0+128),w
  1737  024A  00AD               	movwf	??_sprintf^(0+128)
  1738  024B  0845               	movf	sprintf@sp^(0+128),w
  1739  024C  0084               	movwf	4
  1740  024D  082D               	movf	??_sprintf^(0+128),w
  1741  024E  1383               	bcf	3,7	;select IRP bank0
  1742  024F  0080               	movwf	0
  1743  0250                     l3123:
  1744  0250  3001               	movlw	1
  1745  0251  00AD               	movwf	??_sprintf^(0+128)
  1746  0252  082D               	movf	??_sprintf^(0+128),w
  1747  0253  07C5               	addwf	sprintf@sp^(0+128),f
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 559:    continue;
  1750  0254  2FDC               	goto	l3277
  1751  0255                     l3125:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1754  0255  01B7               	clrf	sprintf@flag^(0+128)
  1755  0256  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1758  0257  2A5A               	goto	l3129
  1759  0258                     l303:	
  1760                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1761                           
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1764  0258  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 690:    break;
  1767  0259  2A74               	goto	l3131
  1768  025A                     l3129:
  1769  025A  3001               	movlw	1
  1770  025B  07A8               	addwf	sprintf@f^(0+128),f
  1771  025C  30FF               	movlw	-1
  1772  025D  0728               	addwf	sprintf@f^(0+128),w
  1773  025E  0084               	movwf	4
  1774  025F  120A  158A  200A  120A  118A  	fcall	stringdir
  1775  0264  00CA               	movwf	sprintf@c^(0+128)
  1776  0265  00AD               	movwf	??_sprintf^(0+128)
  1777  0266  01AE               	clrf	(??_sprintf^(0+128)+1)
  1778                           
  1779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1780                           ; Switch size 1, requested type "simple"
  1781                           ; Number of cases is 1, Range of values is 0 to 0
  1782                           ; switch strategies available:
  1783                           ; Name         Instructions Cycles
  1784                           ; simple_byte            4     3 (average)
  1785                           ; direct_byte           11     8 (fixed)
  1786                           ; jumptable            260     6 (fixed)
  1787                           ;	Chosen strategy is simple_byte
  1788  0267  082E               	movf	(??_sprintf+1)^(0+128),w
  1789  0268  3A00               	xorlw	0	; case 0
  1790  0269  1903               	skipnz
  1791  026A  2A6C               	goto	l3395
  1792  026B  2FDC               	goto	l3277
  1793  026C                     l3395:
  1794                           
  1795                           ; Switch size 1, requested type "simple"
  1796                           ; Number of cases is 2, Range of values is 0 to 102
  1797                           ; switch strategies available:
  1798                           ; Name         Instructions Cycles
  1799                           ; simple_byte            7     4 (average)
  1800                           ; jumptable            260     6 (fixed)
  1801                           ;	Chosen strategy is simple_byte
  1802  026C  082D               	movf	??_sprintf^(0+128),w
  1803  026D  3A00               	xorlw	0	; case 0
  1804  026E  1903               	skipnz
  1805  026F  2FEE               	goto	l3279
  1806  0270  3A66               	xorlw	102	; case 102
  1807  0271  1903               	skipnz
  1808  0272  2A58               	goto	l303
  1809  0273  2FDC               	goto	l3277
  1810  0274                     l3131:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1813  0274  3000               	movlw	0
  1814  0275  0537               	andwf	sprintf@flag^(0+128),w
  1815  0276  00AD               	movwf	??_sprintf^(0+128)
  1816  0277  3007               	movlw	7
  1817  0278  0538               	andwf	(sprintf@flag+1)^(0+128),w
  1818  0279  00AE               	movwf	(??_sprintf+1)^(0+128)
  1819  027A  082D               	movf	??_sprintf^(0+128),w
  1820  027B  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1821  027C  1903               	btfsc	3,2
  1822  027D  2A7F               	goto	u5101
  1823  027E  2A80               	goto	u5100
  1824  027F                     u5101:
  1825  027F  2FC8               	goto	l3271
  1826  0280                     u5100:
  1827  0280                     l3133:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1830  0280  3006               	movlw	6
  1831  0281  00B9               	movwf	sprintf@prec^(0+128)
  1832  0282  3000               	movlw	0
  1833  0283  00BA               	movwf	(sprintf@prec^(0+128)+1)
  1834  0284                     l3135:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1837  0284  0836               	movf	sprintf@ap^(0+128),w
  1838  0285  0084               	movwf	4
  1839  0286  1383               	bcf	3,7	;select IRP bank0
  1840  0287  0800               	movf	0,w
  1841  0288  00C6               	movwf	sprintf@fval^(0+128)
  1842  0289  0A84               	incf	4,f
  1843  028A  0800               	movf	0,w
  1844  028B  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1845  028C  0A84               	incf	4,f
  1846  028D  0800               	movf	0,w
  1847  028E  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1848  028F  0A84               	incf	4,f
  1849  0290  0800               	movf	0,w
  1850  0291  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1851  0292                     l3137:
  1852  0292  3004               	movlw	4
  1853  0293  00AD               	movwf	??_sprintf^(0+128)
  1854  0294  082D               	movf	??_sprintf^(0+128),w
  1855  0295  07B6               	addwf	sprintf@ap^(0+128),f
  1856  0296                     l3139:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1859  0296  0849               	movf	(sprintf@fval+3)^(0+128),w
  1860  0297  00F3               	movwf	___flge@ff1+3
  1861  0298  0848               	movf	(sprintf@fval+2)^(0+128),w
  1862  0299  00F2               	movwf	___flge@ff1+2
  1863  029A  0847               	movf	(sprintf@fval+1)^(0+128),w
  1864  029B  00F1               	movwf	___flge@ff1+1
  1865  029C  0846               	movf	sprintf@fval^(0+128),w
  1866  029D  00F0               	movwf	___flge@ff1
  1867  029E  3000               	movlw	0
  1868  029F  00F7               	movwf	___flge@ff2+3
  1869  02A0  3000               	movlw	0
  1870  02A1  00F6               	movwf	___flge@ff2+2
  1871  02A2  3000               	movlw	0
  1872  02A3  00F5               	movwf	___flge@ff2+1
  1873  02A4  3000               	movlw	0
  1874  02A5  00F4               	movwf	___flge@ff2
  1875  02A6  160A  118A  20EE  120A  118A  	fcall	___flge
  1876  02AB  1803               	btfsc	3,0
  1877  02AC  2AAE               	goto	u5111
  1878  02AD  2AAF               	goto	u5110
  1879  02AE                     u5111:
  1880  02AE  2ACC               	goto	l3145
  1881  02AF                     u5110:
  1882  02AF                     l3141:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1885  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  1886  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  1887  02B1  0849               	movf	(sprintf@fval+3)^(0+128),w
  1888  02B2  00F3               	movwf	___flneg@f1+3
  1889  02B3  0848               	movf	(sprintf@fval+2)^(0+128),w
  1890  02B4  00F2               	movwf	___flneg@f1+2
  1891  02B5  0847               	movf	(sprintf@fval+1)^(0+128),w
  1892  02B6  00F1               	movwf	___flneg@f1+1
  1893  02B7  0846               	movf	sprintf@fval^(0+128),w
  1894  02B8  00F0               	movwf	___flneg@f1
  1895  02B9  160A  158A  23F6  120A  118A  	fcall	___flneg
  1896  02BE  0873               	movf	?___flneg+3,w
  1897  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1898  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1899  02C1  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1900  02C2  0872               	movf	?___flneg+2,w
  1901  02C3  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1902  02C4  0871               	movf	?___flneg+1,w
  1903  02C5  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1904  02C6  0870               	movf	?___flneg,w
  1905  02C7  00C6               	movwf	sprintf@fval^(0+128)
  1906  02C8                     l3143:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1909  02C8  3003               	movlw	3
  1910  02C9  04B7               	iorwf	sprintf@flag^(0+128),f
  1911  02CA  3000               	movlw	0
  1912  02CB  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  1913  02CC                     l3145:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1916  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  1917  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  1918  02CE  01BF               	clrf	sprintf@eexp^(0+128)
  1919  02CF  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  1920  02D0                     l3147:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1923  02D0  0849               	movf	(sprintf@fval+3)^(0+128),w
  1924  02D1  00F3               	movwf	___fleq@ff1+3
  1925  02D2  0848               	movf	(sprintf@fval+2)^(0+128),w
  1926  02D3  00F2               	movwf	___fleq@ff1+2
  1927  02D4  0847               	movf	(sprintf@fval+1)^(0+128),w
  1928  02D5  00F1               	movwf	___fleq@ff1+1
  1929  02D6  0846               	movf	sprintf@fval^(0+128),w
  1930  02D7  00F0               	movwf	___fleq@ff1
  1931  02D8  3000               	movlw	0
  1932  02D9  00F7               	movwf	___fleq@ff2+3
  1933  02DA  3000               	movlw	0
  1934  02DB  00F6               	movwf	___fleq@ff2+2
  1935  02DC  3000               	movlw	0
  1936  02DD  00F5               	movwf	___fleq@ff2+1
  1937  02DE  3000               	movlw	0
  1938  02DF  00F4               	movwf	___fleq@ff2
  1939  02E0  160A  158A  25F2  120A  118A  	fcall	___fleq
  1940  02E5  1803               	btfsc	3,0
  1941  02E6  2AE8               	goto	u5121
  1942  02E7  2AE9               	goto	u5120
  1943  02E8                     u5121:
  1944  02E8  2BD9               	goto	l3173
  1945  02E9                     u5120:
  1946  02E9                     l3149:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1949  02E9  1003               	clrc
  1950  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  1951  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  1952  02EC  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  1953  02ED  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  1954  02EE  3E82               	addlw	130
  1955  02EF  00BF               	movwf	sprintf@eexp^(0+128)
  1956  02F0  30FF               	movlw	255
  1957  02F1  1803               	skipnc
  1958  02F2  3000               	movlw	0
  1959  02F3  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  1960  02F4                     l3151:
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1963  02F4  30FF               	movlw	255
  1964  02F5  07BF               	addwf	sprintf@eexp^(0+128),f
  1965  02F6  1803               	skipnc
  1966  02F7  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  1967  02F8  30FF               	movlw	255
  1968  02F9  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  1969  02FA                     l3153:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1972  02FA  3003               	movlw	3
  1973  02FB  00F0               	movwf	___wmul@multiplier
  1974  02FC  3000               	movlw	0
  1975  02FD  00F1               	movwf	___wmul@multiplier+1
  1976  02FE  0840               	movf	(sprintf@eexp+1)^(0+128),w
  1977  02FF  00F3               	movwf	___wmul@multiplicand+1
  1978  0300  083F               	movf	sprintf@eexp^(0+128),w
  1979  0301  00F2               	movwf	___wmul@multiplicand
  1980  0302  160A  158A  2494  120A  118A  	fcall	___wmul
  1981  0307  0871               	movf	?___wmul+1,w
  1982  0308  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0309  1303               	bcf	3,6	;RP1=0, select bank1
  1984  030A  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  1985  030B  0870               	movf	?___wmul,w
  1986  030C  00BF               	movwf	sprintf@eexp^(0+128)
  1987  030D                     l3155:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1990  030D  300A               	movlw	10
  1991  030E  00F7               	movwf	___awdiv@divisor
  1992  030F  3000               	movlw	0
  1993  0310  00F8               	movwf	___awdiv@divisor+1
  1994  0311  0840               	movf	(sprintf@eexp+1)^(0+128),w
  1995  0312  00FA               	movwf	___awdiv@dividend+1
  1996  0313  083F               	movf	sprintf@eexp^(0+128),w
  1997  0314  00F9               	movwf	___awdiv@dividend
  1998  0315  160A  118A  2009  120A  118A  	fcall	___awdiv
  1999  031A  0878               	movf	?___awdiv+1,w
  2000  031B  1683               	bsf	3,5	;RP0=1, select bank1
  2001  031C  1303               	bcf	3,6	;RP1=0, select bank1
  2002  031D  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2003  031E  0877               	movf	?___awdiv,w
  2004  031F  00BF               	movwf	sprintf@eexp^(0+128)
  2005  0320                     l3157:
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2008  0320  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  2009  0321  2B23               	goto	u5131
  2010  0322  2B24               	goto	u5130
  2011  0323                     u5131:
  2012  0323  2B2A               	goto	l3161
  2013  0324                     u5130:
  2014  0324                     l3159:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2017  0324  30FF               	movlw	255
  2018  0325  07BF               	addwf	sprintf@eexp^(0+128),f
  2019  0326  1803               	skipnc
  2020  0327  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2021  0328  30FF               	movlw	255
  2022  0329  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2023  032A                     l3161:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2026  032A  033F               	decf	sprintf@eexp^(0+128),w
  2027  032B  3AFF               	xorlw	255
  2028  032C  120A  158A  2140  120A  118A  	fcall	_scale
  2029  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0333  084B               	movf	?_scale+3,w
  2032  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0336  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2035  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0339  084A               	movf	?_scale+2,w
  2038  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2039  033B  1303               	bcf	3,6	;RP1=0, select bank1
  2040  033C  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2041  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2042  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2043  033F  0849               	movf	?_scale+1,w
  2044  0340  1683               	bsf	3,5	;RP0=1, select bank1
  2045  0341  1303               	bcf	3,6	;RP1=0, select bank1
  2046  0342  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2047  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0345  0848               	movf	?_scale,w
  2050  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2051  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2052  0348  00C1               	movwf	sprintf@tmpval^(0+128)
  2053  0349                     l3163:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2056  0349  0849               	movf	(sprintf@fval+3)^(0+128),w
  2057  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2058  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2059  034C  00B1               	movwf	___flmul@b+3
  2060  034D  1683               	bsf	3,5	;RP0=1, select bank1
  2061  034E  1303               	bcf	3,6	;RP1=0, select bank1
  2062  034F  0848               	movf	(sprintf@fval+2)^(0+128),w
  2063  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0352  00B0               	movwf	___flmul@b+2
  2066  0353  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0354  1303               	bcf	3,6	;RP1=0, select bank1
  2068  0355  0847               	movf	(sprintf@fval+1)^(0+128),w
  2069  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0358  00AF               	movwf	___flmul@b+1
  2072  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2073  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2074  035B  0846               	movf	sprintf@fval^(0+128),w
  2075  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2076  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2077  035E  00AE               	movwf	___flmul@b
  2078  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0361  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2081  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0364  00B5               	movwf	___flmul@a+3
  2084  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0366  1303               	bcf	3,6	;RP1=0, select bank1
  2086  0367  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2087  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2089  036A  00B4               	movwf	___flmul@a+2
  2090  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2091  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2092  036D  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2093  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2094  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0370  00B3               	movwf	___flmul@a+1
  2096  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0372  1303               	bcf	3,6	;RP1=0, select bank1
  2098  0373  0841               	movf	sprintf@tmpval^(0+128),w
  2099  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0376  00B2               	movwf	___flmul@a
  2102  0377  120A  158A  249F  120A  118A  	fcall	___flmul
  2103  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2104  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2105  037E  0831               	movf	?___flmul+3,w
  2106  037F  1683               	bsf	3,5	;RP0=1, select bank1
  2107  0380  1303               	bcf	3,6	;RP1=0, select bank1
  2108  0381  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2109  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0384  0830               	movf	?___flmul+2,w
  2112  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2113  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2114  0387  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2115  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2117  038A  082F               	movf	?___flmul+1,w
  2118  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2119  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2120  038D  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2121  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2122  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0390  082E               	movf	?___flmul,w
  2124  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0393  00C1               	movwf	sprintf@tmpval^(0+128)
  2127  0394                     l3165:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2130  0394  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2131  0395  00F3               	movwf	___flge@ff1+3
  2132  0396  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2133  0397  00F2               	movwf	___flge@ff1+2
  2134  0398  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2135  0399  00F1               	movwf	___flge@ff1+1
  2136  039A  0841               	movf	sprintf@tmpval^(0+128),w
  2137  039B  00F0               	movwf	___flge@ff1
  2138  039C  303F               	movlw	63
  2139  039D  00F7               	movwf	___flge@ff2+3
  2140  039E  3080               	movlw	128
  2141  039F  00F6               	movwf	___flge@ff2+2
  2142  03A0  3000               	movlw	0
  2143  03A1  00F5               	movwf	___flge@ff2+1
  2144  03A2  3000               	movlw	0
  2145  03A3  00F4               	movwf	___flge@ff2
  2146  03A4  160A  118A  20EE  120A  118A  	fcall	___flge
  2147  03A9  1803               	btfsc	3,0
  2148  03AA  2BAC               	goto	u5141
  2149  03AB  2BAD               	goto	u5140
  2150  03AC                     u5141:
  2151  03AC  2BB6               	goto	l3169
  2152  03AD                     u5140:
  2153  03AD                     l3167:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2156  03AD  30FF               	movlw	255
  2157  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2158  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2159  03B0  07BF               	addwf	sprintf@eexp^(0+128),f
  2160  03B1  1803               	skipnc
  2161  03B2  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2162  03B3  30FF               	movlw	255
  2163  03B4  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2164  03B5  2BD9               	goto	l3173
  2165  03B6                     l3169:
  2166  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2167  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2168  03B8  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2169  03B9  00F3               	movwf	___flge@ff1+3
  2170  03BA  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2171  03BB  00F2               	movwf	___flge@ff1+2
  2172  03BC  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2173  03BD  00F1               	movwf	___flge@ff1+1
  2174  03BE  0841               	movf	sprintf@tmpval^(0+128),w
  2175  03BF  00F0               	movwf	___flge@ff1
  2176  03C0  3041               	movlw	65
  2177  03C1  00F7               	movwf	___flge@ff2+3
  2178  03C2  3020               	movlw	32
  2179  03C3  00F6               	movwf	___flge@ff2+2
  2180  03C4  3000               	movlw	0
  2181  03C5  00F5               	movwf	___flge@ff2+1
  2182  03C6  3000               	movlw	0
  2183  03C7  00F4               	movwf	___flge@ff2
  2184  03C8  160A  118A  20EE  120A  118A  	fcall	___flge
  2185  03CD  1C03               	btfss	3,0
  2186  03CE  2BD0               	goto	u5151
  2187  03CF  2BD1               	goto	u5150
  2188  03D0                     u5151:
  2189  03D0  2BD9               	goto	l3173
  2190  03D1                     u5150:
  2191  03D1                     l3171:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2194  03D1  3001               	movlw	1
  2195  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2196  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2197  03D4  07BF               	addwf	sprintf@eexp^(0+128),f
  2198  03D5  1803               	skipnc
  2199  03D6  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2200  03D7  3000               	movlw	0
  2201  03D8  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2202  03D9                     l3173:
  2203  03D9                     l3175:	
  2204                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2205                           
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2208  03D9  3006               	movlw	6
  2209  03DA  120A  118A  2030  120A  118A  	fcall	_fround
  2210  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2211  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2212  03E1  084B               	movf	?_fround+3,w
  2213  03E2  00DF               	movwf	___fladd@b+3
  2214  03E3  084A               	movf	?_fround+2,w
  2215  03E4  00DE               	movwf	___fladd@b+2
  2216  03E5  0849               	movf	?_fround+1,w
  2217  03E6  00DD               	movwf	___fladd@b+1
  2218  03E7  0848               	movf	?_fround,w
  2219  03E8  00DC               	movwf	___fladd@b
  2220  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2221  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  2222  03EB  0849               	movf	(sprintf@fval+3)^(0+128),w
  2223  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2224  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2225  03EE  00E3               	movwf	___fladd@a+3
  2226  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2227  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2228  03F1  0848               	movf	(sprintf@fval+2)^(0+128),w
  2229  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2230  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2231  03F4  00E2               	movwf	___fladd@a+2
  2232  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2233  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2234  03F7  0847               	movf	(sprintf@fval+1)^(0+128),w
  2235  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2236  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2237  03FA  00E1               	movwf	___fladd@a+1
  2238  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2239  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2240  03FD  0846               	movf	sprintf@fval^(0+128),w
  2241  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2242  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0400  00E0               	movwf	___fladd@a
  2244  0401  160A  118A  2578  120A  118A  	fcall	___fladd
  2245  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0408  085F               	movf	?___fladd+3,w
  2248  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2249  040A  1303               	bcf	3,6	;RP1=0, select bank1
  2250  040B  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2251  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2252  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2253  040E  085E               	movf	?___fladd+2,w
  2254  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0411  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2257  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0414  085D               	movf	?___fladd+1,w
  2260  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2261  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2262  0417  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2263  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2265  041A  085C               	movf	?___fladd,w
  2266  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2267  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2268  041D  00C6               	movwf	sprintf@fval^(0+128)
  2269  041E                     l3177:
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2272  041E  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2273  041F  3A80               	xorlw	128
  2274  0420  00FF               	movwf	btemp+1
  2275  0421  3080               	movlw	128
  2276  0422  027F               	subwf	btemp+1,w
  2277  0423  1D03               	skipz
  2278  0424  2C27               	goto	u5165
  2279  0425  300A               	movlw	10
  2280  0426  023F               	subwf	sprintf@eexp^(0+128),w
  2281  0427                     u5165:
  2282  0427  1803               	skipnc
  2283  0428  2C2A               	goto	u5161
  2284  0429  2C2B               	goto	u5160
  2285  042A                     u5161:
  2286  042A  2C7C               	goto	l3185
  2287  042B                     u5160:
  2288  042B                     l3179:
  2289  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2290  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2291  042D  0849               	movf	(sprintf@fval+3)^(0+128),w
  2292  042E  00F3               	movwf	___fleq@ff1+3
  2293  042F  0848               	movf	(sprintf@fval+2)^(0+128),w
  2294  0430  00F2               	movwf	___fleq@ff1+2
  2295  0431  0847               	movf	(sprintf@fval+1)^(0+128),w
  2296  0432  00F1               	movwf	___fleq@ff1+1
  2297  0433  0846               	movf	sprintf@fval^(0+128),w
  2298  0434  00F0               	movwf	___fleq@ff1
  2299  0435  3000               	movlw	0
  2300  0436  00F7               	movwf	___fleq@ff2+3
  2301  0437  3000               	movlw	0
  2302  0438  00F6               	movwf	___fleq@ff2+2
  2303  0439  3000               	movlw	0
  2304  043A  00F5               	movwf	___fleq@ff2+1
  2305  043B  3000               	movlw	0
  2306  043C  00F4               	movwf	___fleq@ff2
  2307  043D  160A  158A  25F2  120A  118A  	fcall	___fleq
  2308  0442  1803               	btfsc	3,0
  2309  0443  2C45               	goto	u5171
  2310  0444  2C46               	goto	u5170
  2311  0445                     u5171:
  2312  0445  2CEE               	goto	l3199
  2313  0446                     u5170:
  2314  0446                     l3181:
  2315  0446  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0447  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0448  0849               	movf	(sprintf@fval+3)^(0+128),w
  2318  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2319  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2320  044B  00DE               	movwf	___fltol@f1+3
  2321  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2322  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2323  044E  0848               	movf	(sprintf@fval+2)^(0+128),w
  2324  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0451  00DD               	movwf	___fltol@f1+2
  2327  0452  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0453  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0454  0847               	movf	(sprintf@fval+1)^(0+128),w
  2330  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2331  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2332  0457  00DC               	movwf	___fltol@f1+1
  2333  0458  1683               	bsf	3,5	;RP0=1, select bank1
  2334  0459  1303               	bcf	3,6	;RP1=0, select bank1
  2335  045A  0846               	movf	sprintf@fval^(0+128),w
  2336  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2337  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2338  045D  00DB               	movwf	___fltol@f1
  2339  045E  160A  118A  2072  120A  118A  	fcall	___fltol
  2340  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0465  085E               	movf	?___fltol+3,w
  2343  0466  045D               	iorwf	?___fltol+2,w
  2344  0467  045C               	iorwf	?___fltol+1,w
  2345  0468  045B               	iorwf	?___fltol,w
  2346  0469  1D03               	skipz
  2347  046A  2C6C               	goto	u5181
  2348  046B  2C6D               	goto	u5180
  2349  046C                     u5181:
  2350  046C  2CEE               	goto	l3199
  2351  046D                     u5180:
  2352  046D                     l3183:
  2353  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2354  046E  1303               	bcf	3,6	;RP1=0, select bank1
  2355  046F  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2356  0470  3A80               	xorlw	128
  2357  0471  00FF               	movwf	btemp+1
  2358  0472  3080               	movlw	128
  2359  0473  027F               	subwf	btemp+1,w
  2360  0474  1D03               	skipz
  2361  0475  2C78               	goto	u5195
  2362  0476  3002               	movlw	2
  2363  0477  023F               	subwf	sprintf@eexp^(0+128),w
  2364  0478                     u5195:
  2365  0478  1C03               	skipc
  2366  0479  2C7B               	goto	u5191
  2367  047A  2C7C               	goto	u5190
  2368  047B                     u5191:
  2369  047B  2CEE               	goto	l3199
  2370  047C                     u5190:
  2371  047C                     l3185:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2374  047C  1683               	bsf	3,5	;RP0=1, select bank1
  2375  047D  1303               	bcf	3,6	;RP1=0, select bank1
  2376  047E  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2377  047F  00F3               	movwf	___flge@ff1+3
  2378  0480  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2379  0481  00F2               	movwf	___flge@ff1+2
  2380  0482  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2381  0483  00F1               	movwf	___flge@ff1+1
  2382  0484  0841               	movf	sprintf@tmpval^(0+128),w
  2383  0485  00F0               	movwf	___flge@ff1
  2384  0486  3040               	movlw	64
  2385  0487  00F7               	movwf	___flge@ff2+3
  2386  0488  3089               	movlw	137
  2387  0489  00F6               	movwf	___flge@ff2+2
  2388  048A  3070               	movlw	112
  2389  048B  00F5               	movwf	___flge@ff2+1
  2390  048C  305F               	movlw	95
  2391  048D  00F4               	movwf	___flge@ff2
  2392  048E  160A  118A  20EE  120A  118A  	fcall	___flge
  2393  0493  1803               	btfsc	3,0
  2394  0494  2C96               	goto	u5201
  2395  0495  2C97               	goto	u5200
  2396  0496                     u5201:
  2397  0496  2CA0               	goto	l3189
  2398  0497                     u5200:
  2399  0497                     l3187:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2402  0497  30F7               	movlw	247
  2403  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2404  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2405  049A  07BF               	addwf	sprintf@eexp^(0+128),f
  2406  049B  1803               	skipnc
  2407  049C  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2408  049D  30FF               	movlw	255
  2409  049E  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2412  049F  2CA8               	goto	l3191
  2413  04A0                     l3189:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2416  04A0  30F8               	movlw	248
  2417  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2418  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2419  04A3  07BF               	addwf	sprintf@eexp^(0+128),f
  2420  04A4  1803               	skipnc
  2421  04A5  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2422  04A6  30FF               	movlw	255
  2423  04A7  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2424  04A8                     l3191:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2427  04A8  083F               	movf	sprintf@eexp^(0+128),w
  2428  04A9  120A  158A  2140  120A  118A  	fcall	_scale
  2429  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2430  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2431  04B0  084B               	movf	?_scale+3,w
  2432  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2433  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2434  04B3  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2435  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2436  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2437  04B6  084A               	movf	?_scale+2,w
  2438  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2439  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  2440  04B9  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2441  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2442  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2443  04BC  0849               	movf	?_scale+1,w
  2444  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  2445  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  2446  04BF  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2447  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2448  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2449  04C2  0848               	movf	?_scale,w
  2450  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2451  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2452  04C5  00C1               	movwf	sprintf@tmpval^(0+128)
  2453  04C6                     l3193:
  2454  04C6  0849               	movf	(sprintf@fval+3)^(0+128),w
  2455  04C7  00F3               	movwf	__div_to_l_@f1+3
  2456  04C8  0848               	movf	(sprintf@fval+2)^(0+128),w
  2457  04C9  00F2               	movwf	__div_to_l_@f1+2
  2458  04CA  0847               	movf	(sprintf@fval+1)^(0+128),w
  2459  04CB  00F1               	movwf	__div_to_l_@f1+1
  2460  04CC  0846               	movf	sprintf@fval^(0+128),w
  2461  04CD  00F0               	movwf	__div_to_l_@f1
  2462  04CE  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2463  04CF  00F7               	movwf	__div_to_l_@f2+3
  2464  04D0  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2465  04D1  00F6               	movwf	__div_to_l_@f2+2
  2466  04D2  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2467  04D3  00F5               	movwf	__div_to_l_@f2+1
  2468  04D4  0841               	movf	sprintf@tmpval^(0+128),w
  2469  04D5  00F4               	movwf	__div_to_l_@f2
  2470  04D6  160A  118A  2309  120A  118A  	fcall	__div_to_l_
  2471  04DB  0873               	movf	?__div_to_l_+3,w
  2472  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  2473  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  2474  04DE  00BE               	movwf	(sprintf@val+3)^(0+128)
  2475  04DF  0872               	movf	?__div_to_l_+2,w
  2476  04E0  00BD               	movwf	(sprintf@val+2)^(0+128)
  2477  04E1  0871               	movf	?__div_to_l_+1,w
  2478  04E2  00BC               	movwf	(sprintf@val+1)^(0+128)
  2479  04E3  0870               	movf	?__div_to_l_,w
  2480  04E4  00BB               	movwf	sprintf@val^(0+128)
  2481  04E5                     l3197:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2484  04E5  3000               	movlw	0
  2485  04E6  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2486  04E7  3000               	movlw	0
  2487  04E8  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2488  04E9  3000               	movlw	0
  2489  04EA  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2490  04EB  3000               	movlw	0
  2491  04EC  00C6               	movwf	sprintf@fval^(0+128)
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2494  04ED  2D70               	goto	l3205
  2495  04EE                     l3199:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2498  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2499  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2500  04F0  0849               	movf	(sprintf@fval+3)^(0+128),w
  2501  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2502  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2503  04F3  00DE               	movwf	___fltol@f1+3
  2504  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2505  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2506  04F6  0848               	movf	(sprintf@fval+2)^(0+128),w
  2507  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2508  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2509  04F9  00DD               	movwf	___fltol@f1+2
  2510  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2511  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2512  04FC  0847               	movf	(sprintf@fval+1)^(0+128),w
  2513  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2514  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2515  04FF  00DC               	movwf	___fltol@f1+1
  2516  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0502  0846               	movf	sprintf@fval^(0+128),w
  2519  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0505  00DB               	movwf	___fltol@f1
  2522  0506  160A  118A  2072  120A  118A  	fcall	___fltol
  2523  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2524  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2525  050D  085E               	movf	?___fltol+3,w
  2526  050E  1683               	bsf	3,5	;RP0=1, select bank1
  2527  050F  1303               	bcf	3,6	;RP1=0, select bank1
  2528  0510  00BE               	movwf	(sprintf@val+3)^(0+128)
  2529  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0512  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0513  085D               	movf	?___fltol+2,w
  2532  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0516  00BD               	movwf	(sprintf@val+2)^(0+128)
  2535  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0519  085C               	movf	?___fltol+1,w
  2538  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2539  051B  1303               	bcf	3,6	;RP1=0, select bank1
  2540  051C  00BC               	movwf	(sprintf@val+1)^(0+128)
  2541  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2542  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2543  051F  085B               	movf	?___fltol,w
  2544  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2545  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2546  0522  00BB               	movwf	sprintf@val^(0+128)
  2547  0523                     l3201:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2550  0523  083E               	movf	(sprintf@val+3)^(0+128),w
  2551  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0525  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0526  00A3               	movwf	___xxtofl@val+3
  2554  0527  1683               	bsf	3,5	;RP0=1, select bank1
  2555  0528  1303               	bcf	3,6	;RP1=0, select bank1
  2556  0529  083D               	movf	(sprintf@val+2)^(0+128),w
  2557  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2558  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2559  052C  00A2               	movwf	___xxtofl@val+2
  2560  052D  1683               	bsf	3,5	;RP0=1, select bank1
  2561  052E  1303               	bcf	3,6	;RP1=0, select bank1
  2562  052F  083C               	movf	(sprintf@val+1)^(0+128),w
  2563  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2564  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2565  0532  00A1               	movwf	___xxtofl@val+1
  2566  0533  1683               	bsf	3,5	;RP0=1, select bank1
  2567  0534  1303               	bcf	3,6	;RP1=0, select bank1
  2568  0535  083B               	movf	sprintf@val^(0+128),w
  2569  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0538  00A0               	movwf	___xxtofl@val
  2572  0539  3000               	movlw	0
  2573  053A  160A  118A  2190  120A  118A  	fcall	___xxtofl
  2574  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0541  0823               	movf	?___xxtofl+3,w
  2577  0542  1683               	bsf	3,5	;RP0=1, select bank1
  2578  0543  1303               	bcf	3,6	;RP1=0, select bank1
  2579  0544  00A3               	movwf	(___flsub@a+3)^(0+128)
  2580  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0547  0822               	movf	?___xxtofl+2,w
  2583  0548  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0549  1303               	bcf	3,6	;RP1=0, select bank1
  2585  054A  00A2               	movwf	(___flsub@a+2)^(0+128)
  2586  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2587  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2588  054D  0821               	movf	?___xxtofl+1,w
  2589  054E  1683               	bsf	3,5	;RP0=1, select bank1
  2590  054F  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0550  00A1               	movwf	(___flsub@a+1)^(0+128)
  2592  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2593  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2594  0553  0820               	movf	?___xxtofl,w
  2595  0554  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0555  1303               	bcf	3,6	;RP1=0, select bank1
  2597  0556  00A0               	movwf	___flsub@a^(0+128)
  2598  0557  0849               	movf	(sprintf@fval+3)^(0+128),w
  2599  0558  00A7               	movwf	(___flsub@b+3)^(0+128)
  2600  0559  0848               	movf	(sprintf@fval+2)^(0+128),w
  2601  055A  00A6               	movwf	(___flsub@b+2)^(0+128)
  2602  055B  0847               	movf	(sprintf@fval+1)^(0+128),w
  2603  055C  00A5               	movwf	(___flsub@b+1)^(0+128)
  2604  055D  0846               	movf	sprintf@fval^(0+128),w
  2605  055E  00A4               	movwf	___flsub@b^(0+128)
  2606  055F  160A  158A  2640  120A  118A  	fcall	___flsub
  2607  0564  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0565  1303               	bcf	3,6	;RP1=0, select bank1
  2609  0566  0823               	movf	(?___flsub+3)^(0+128),w
  2610  0567  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2611  0568  0822               	movf	(?___flsub+2)^(0+128),w
  2612  0569  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2613  056A  0821               	movf	(?___flsub+1)^(0+128),w
  2614  056B  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2615  056C  0820               	movf	?___flsub^(0+128),w
  2616  056D  00C6               	movwf	sprintf@fval^(0+128)
  2617  056E                     l3203:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2620  056E  01BF               	clrf	sprintf@eexp^(0+128)
  2621  056F  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2622  0570                     l3205:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2625  0570  01CA               	clrf	sprintf@c^(0+128)
  2626  0571  0ACA               	incf	sprintf@c^(0+128),f
  2627  0572                     l3211:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2630  0572  084A               	movf	sprintf@c^(0+128),w
  2631  0573  00AD               	movwf	??_sprintf^(0+128)
  2632  0574  3001               	movlw	1
  2633  0575                     u5215:
  2634  0575  1003               	clrc
  2635  0576  0DAD               	rlf	??_sprintf^(0+128),f
  2636  0577  3EFF               	addlw	-1
  2637  0578  1D03               	skipz
  2638  0579  2D75               	goto	u5215
  2639  057A  1003               	clrc
  2640  057B  0D2D               	rlf	??_sprintf^(0+128),w
  2641  057C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2642  057D  0084               	movwf	4
  2643  057E  120A  158A  200A  120A  118A  	fcall	stringdir
  2644  0583  00AE               	movwf	(??_sprintf+1)^(0+128)
  2645  0584  120A  158A  200A  120A  118A  	fcall	stringdir
  2646  0589  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  2647  058A  120A  158A  200A  120A  118A  	fcall	stringdir
  2648  058F  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  2649  0590  120A  158A  200A  120A  118A  	fcall	stringdir
  2650  0595  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  2651  0596  0831               	movf	(??_sprintf+4)^(0+128),w
  2652  0597  023E               	subwf	(sprintf@val+3)^(0+128),w
  2653  0598  1D03               	skipz
  2654  0599  2DA4               	goto	u5225
  2655  059A  0830               	movf	(??_sprintf+3)^(0+128),w
  2656  059B  023D               	subwf	(sprintf@val+2)^(0+128),w
  2657  059C  1D03               	skipz
  2658  059D  2DA4               	goto	u5225
  2659  059E  082F               	movf	(??_sprintf+2)^(0+128),w
  2660  059F  023C               	subwf	(sprintf@val+1)^(0+128),w
  2661  05A0  1D03               	skipz
  2662  05A1  2DA4               	goto	u5225
  2663  05A2  082E               	movf	(??_sprintf+1)^(0+128),w
  2664  05A3  023B               	subwf	sprintf@val^(0+128),w
  2665  05A4                     u5225:
  2666  05A4  1803               	skipnc
  2667  05A5  2DA7               	goto	u5221
  2668  05A6  2DA8               	goto	u5220
  2669  05A7                     u5221:
  2670  05A7  2DA9               	goto	l3215
  2671  05A8                     u5220:
  2672  05A8  2DB3               	goto	l3217
  2673  05A9                     l3215:
  2674  05A9  3001               	movlw	1
  2675  05AA  00AD               	movwf	??_sprintf^(0+128)
  2676  05AB  082D               	movf	??_sprintf^(0+128),w
  2677  05AC  07CA               	addwf	sprintf@c^(0+128),f
  2678  05AD  300A               	movlw	10
  2679  05AE  064A               	xorwf	sprintf@c^(0+128),w
  2680  05AF  1D03               	btfss	3,2
  2681  05B0  2DB2               	goto	u5231
  2682  05B1  2DB3               	goto	u5230
  2683  05B2                     u5231:
  2684  05B2  2D72               	goto	l3211
  2685  05B3                     u5230:
  2686  05B3                     l3217:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2689  05B3  3003               	movlw	3
  2690  05B4  0537               	andwf	sprintf@flag^(0+128),w
  2691  05B5  00AD               	movwf	??_sprintf^(0+128)
  2692  05B6  3000               	movlw	0
  2693  05B7  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2694  05B8  00AE               	movwf	(??_sprintf+1)^(0+128)
  2695  05B9  082D               	movf	??_sprintf^(0+128),w
  2696  05BA  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2697  05BB  1903               	btfsc	3,2
  2698  05BC  2DBE               	goto	u5241
  2699  05BD  2DBF               	goto	u5240
  2700  05BE                     u5241:
  2701  05BE  2E31               	goto	l328
  2702  05BF                     u5240:
  2703  05BF                     l3219:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2706  05BF  302D               	movlw	45
  2707  05C0  00AD               	movwf	??_sprintf^(0+128)
  2708  05C1  0845               	movf	sprintf@sp^(0+128),w
  2709  05C2  0084               	movwf	4
  2710  05C3  082D               	movf	??_sprintf^(0+128),w
  2711  05C4  1383               	bcf	3,7	;select IRP bank0
  2712  05C5  0080               	movwf	0
  2713  05C6                     l3221:
  2714  05C6  3001               	movlw	1
  2715  05C7  00AD               	movwf	??_sprintf^(0+128)
  2716  05C8  082D               	movf	??_sprintf^(0+128),w
  2717  05C9  07C5               	addwf	sprintf@sp^(0+128),f
  2718  05CA  2E31               	goto	l328
  2719  05CB                     l3223:
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2722  05CB  084A               	movf	sprintf@c^(0+128),w
  2723  05CC  00AD               	movwf	??_sprintf^(0+128)
  2724  05CD  3001               	movlw	1
  2725  05CE                     u5255:
  2726  05CE  1003               	clrc
  2727  05CF  0DAD               	rlf	??_sprintf^(0+128),f
  2728  05D0  3EFF               	addlw	-1
  2729  05D1  1D03               	skipz
  2730  05D2  2DCE               	goto	u5255
  2731  05D3  1003               	clrc
  2732  05D4  0D2D               	rlf	??_sprintf^(0+128),w
  2733  05D5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2734  05D6  0084               	movwf	4
  2735  05D7  120A  158A  200A  120A  118A  	fcall	stringdir
  2736  05DC  00F0               	movwf	___lldiv@divisor
  2737  05DD  120A  158A  200A  120A  118A  	fcall	stringdir
  2738  05E2  00F1               	movwf	___lldiv@divisor+1
  2739  05E3  120A  158A  200A  120A  118A  	fcall	stringdir
  2740  05E8  00F2               	movwf	___lldiv@divisor+2
  2741  05E9  120A  158A  200A  120A  118A  	fcall	stringdir
  2742  05EE  00F3               	movwf	___lldiv@divisor+3
  2743  05EF  083E               	movf	(sprintf@val+3)^(0+128),w
  2744  05F0  00F7               	movwf	___lldiv@dividend+3
  2745  05F1  083D               	movf	(sprintf@val+2)^(0+128),w
  2746  05F2  00F6               	movwf	___lldiv@dividend+2
  2747  05F3  083C               	movf	(sprintf@val+1)^(0+128),w
  2748  05F4  00F5               	movwf	___lldiv@dividend+1
  2749  05F5  083B               	movf	sprintf@val^(0+128),w
  2750  05F6  00F4               	movwf	___lldiv@dividend
  2751  05F7  160A  158A  279A  120A  118A  	fcall	___lldiv
  2752  05FC  0873               	movf	?___lldiv+3,w
  2753  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  2754  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  2755  05FF  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2756  0600  0872               	movf	?___lldiv+2,w
  2757  0601  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2758  0602  0871               	movf	?___lldiv+1,w
  2759  0603  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2760  0604  0870               	movf	?___lldiv,w
  2761  0605  00C1               	movwf	sprintf@tmpval^(0+128)
  2762  0606                     l3225:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2765  0606  3000               	movlw	0
  2766  0607  00F3               	movwf	___llmod@divisor+3
  2767  0608  3000               	movlw	0
  2768  0609  00F2               	movwf	___llmod@divisor+2
  2769  060A  3000               	movlw	0
  2770  060B  00F1               	movwf	___llmod@divisor+1
  2771  060C  300A               	movlw	10
  2772  060D  00F0               	movwf	___llmod@divisor
  2773  060E  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2774  060F  00F7               	movwf	___llmod@dividend+3
  2775  0610  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2776  0611  00F6               	movwf	___llmod@dividend+2
  2777  0612  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2778  0613  00F5               	movwf	___llmod@dividend+1
  2779  0614  0841               	movf	sprintf@tmpval^(0+128),w
  2780  0615  00F4               	movwf	___llmod@dividend
  2781  0616  160A  158A  2690  120A  118A  	fcall	___llmod
  2782  061B  0873               	movf	?___llmod+3,w
  2783  061C  1683               	bsf	3,5	;RP0=1, select bank1
  2784  061D  1303               	bcf	3,6	;RP1=0, select bank1
  2785  061E  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2786  061F  0872               	movf	?___llmod+2,w
  2787  0620  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2788  0621  0871               	movf	?___llmod+1,w
  2789  0622  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2790  0623  0870               	movf	?___llmod,w
  2791  0624  00C1               	movwf	sprintf@tmpval^(0+128)
  2792  0625                     l3227:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2795  0625  0841               	movf	sprintf@tmpval^(0+128),w
  2796  0626  3E30               	addlw	48
  2797  0627  00AD               	movwf	??_sprintf^(0+128)
  2798  0628  0845               	movf	sprintf@sp^(0+128),w
  2799  0629  0084               	movwf	4
  2800  062A  082D               	movf	??_sprintf^(0+128),w
  2801  062B  1383               	bcf	3,7	;select IRP bank0
  2802  062C  0080               	movwf	0
  2803  062D  3001               	movlw	1
  2804  062E  00AD               	movwf	??_sprintf^(0+128)
  2805  062F  082D               	movf	??_sprintf^(0+128),w
  2806  0630  07C5               	addwf	sprintf@sp^(0+128),f
  2807  0631                     l328:	
  2808                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1232:    }
  2809                           
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2812  0631  3001               	movlw	1
  2813  0632  02CA               	subwf	sprintf@c^(0+128),f
  2814  0633  0A4A               	incf	sprintf@c^(0+128),w
  2815  0634  1D03               	btfss	3,2
  2816  0635  2E37               	goto	u5261
  2817  0636  2E38               	goto	u5260
  2818  0637                     u5261:
  2819  0637  2DCB               	goto	l3223
  2820  0638                     u5260:
  2821  0638  2E4C               	goto	l3235
  2822  0639                     l3229:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2825  0639  3030               	movlw	48
  2826  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2827  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2828  063C  00AD               	movwf	??_sprintf^(0+128)
  2829  063D  0845               	movf	sprintf@sp^(0+128),w
  2830  063E  0084               	movwf	4
  2831  063F  082D               	movf	??_sprintf^(0+128),w
  2832  0640  1383               	bcf	3,7	;select IRP bank0
  2833  0641  0080               	movwf	0
  2834  0642                     l3231:
  2835  0642  3001               	movlw	1
  2836  0643  00AD               	movwf	??_sprintf^(0+128)
  2837  0644  082D               	movf	??_sprintf^(0+128),w
  2838  0645  07C5               	addwf	sprintf@sp^(0+128),f
  2839  0646                     l3233:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2842  0646  30FF               	movlw	255
  2843  0647  07BF               	addwf	sprintf@eexp^(0+128),f
  2844  0648  1803               	skipnc
  2845  0649  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2846  064A  30FF               	movlw	255
  2847  064B  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2848  064C                     l3235:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2851  064C  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2852  064D  3A80               	xorlw	128
  2853  064E  00FF               	movwf	btemp+1
  2854  064F  3080               	movlw	128
  2855  0650  027F               	subwf	btemp+1,w
  2856  0651  1D03               	skipz
  2857  0652  2E55               	goto	u5275
  2858  0653  3001               	movlw	1
  2859  0654  023F               	subwf	sprintf@eexp^(0+128),w
  2860  0655                     u5275:
  2861  0655  1803               	skipnc
  2862  0656  2E58               	goto	u5271
  2863  0657  2E59               	goto	u5270
  2864  0658                     u5271:
  2865  0658  2E39               	goto	l3229
  2866  0659                     u5270:
  2867  0659                     l3237:
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2870  0659  1683               	bsf	3,5	;RP0=1, select bank1
  2871  065A  1303               	bcf	3,6	;RP1=0, select bank1
  2872  065B  083A               	movf	(sprintf@prec+1)^(0+128),w
  2873  065C  3A80               	xorlw	128
  2874  065D  00FF               	movwf	btemp+1
  2875  065E  3080               	movlw	128
  2876  065F  027F               	subwf	btemp+1,w
  2877  0660  1D03               	skipz
  2878  0661  2E64               	goto	u5285
  2879  0662  3009               	movlw	9
  2880  0663  0239               	subwf	sprintf@prec^(0+128),w
  2881  0664                     u5285:
  2882  0664  1C03               	skipc
  2883  0665  2E67               	goto	u5281
  2884  0666  2E68               	goto	u5280
  2885  0667                     u5281:
  2886  0667  2E6F               	goto	l3241
  2887  0668                     u5280:
  2888  0668                     l3239:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2891  0668  3008               	movlw	8
  2892  0669  1683               	bsf	3,5	;RP0=1, select bank1
  2893  066A  1303               	bcf	3,6	;RP1=0, select bank1
  2894  066B  00AD               	movwf	??_sprintf^(0+128)
  2895  066C  082D               	movf	??_sprintf^(0+128),w
  2896  066D  00CA               	movwf	sprintf@c^(0+128)
  2897  066E  2E75               	goto	l335
  2898  066F                     l3241:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2901  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2902  0670  1303               	bcf	3,6	;RP1=0, select bank1
  2903  0671  0839               	movf	sprintf@prec^(0+128),w
  2904  0672  00AD               	movwf	??_sprintf^(0+128)
  2905  0673  082D               	movf	??_sprintf^(0+128),w
  2906  0674  00CA               	movwf	sprintf@c^(0+128)
  2907  0675                     l335:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2910  0675  084A               	movf	sprintf@c^(0+128),w
  2911  0676  00AD               	movwf	??_sprintf^(0+128)
  2912  0677  01AE               	clrf	(??_sprintf^(0+128)+1)
  2913  0678  082D               	movf	??_sprintf^(0+128),w
  2914  0679  02B9               	subwf	sprintf@prec^(0+128),f
  2915  067A  082E               	movf	(??_sprintf+1)^(0+128),w
  2916  067B  1C03               	skipc
  2917  067C  03BA               	decf	(sprintf@prec+1)^(0+128),f
  2918  067D  02BA               	subwf	(sprintf@prec+1)^(0+128),f
  2919  067E                     l3243:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2922  067E  084A               	movf	sprintf@c^(0+128),w
  2923  067F  1903               	btfsc	3,2
  2924  0680  2E82               	goto	u5291
  2925  0681  2E83               	goto	u5290
  2926  0682                     u5291:
  2927  0682  2E8E               	goto	l3249
  2928  0683                     u5290:
  2929  0683                     l3245:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2932  0683  302E               	movlw	46
  2933  0684  00AD               	movwf	??_sprintf^(0+128)
  2934  0685  0845               	movf	sprintf@sp^(0+128),w
  2935  0686  0084               	movwf	4
  2936  0687  082D               	movf	??_sprintf^(0+128),w
  2937  0688  1383               	bcf	3,7	;select IRP bank0
  2938  0689  0080               	movwf	0
  2939  068A                     l3247:
  2940  068A  3001               	movlw	1
  2941  068B  00AD               	movwf	??_sprintf^(0+128)
  2942  068C  082D               	movf	??_sprintf^(0+128),w
  2943  068D  07C5               	addwf	sprintf@sp^(0+128),f
  2944  068E                     l3249:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2947  068E  084A               	movf	sprintf@c^(0+128),w
  2948  068F  120A  158A  2140  120A  118A  	fcall	_scale
  2949  0694  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0695  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0696  084B               	movf	?_scale+3,w
  2952  0697  1683               	bsf	3,5	;RP0=1, select bank1
  2953  0698  1303               	bcf	3,6	;RP1=0, select bank1
  2954  0699  00B5               	movwf	(_sprintf$938+3)^(0+128)
  2955  069A  1283               	bcf	3,5	;RP0=0, select bank0
  2956  069B  1303               	bcf	3,6	;RP1=0, select bank0
  2957  069C  084A               	movf	?_scale+2,w
  2958  069D  1683               	bsf	3,5	;RP0=1, select bank1
  2959  069E  1303               	bcf	3,6	;RP1=0, select bank1
  2960  069F  00B4               	movwf	(_sprintf$938+2)^(0+128)
  2961  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2962  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2963  06A2  0849               	movf	?_scale+1,w
  2964  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  2965  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  2966  06A5  00B3               	movwf	(_sprintf$938+1)^(0+128)
  2967  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2968  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2969  06A8  0848               	movf	?_scale,w
  2970  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  2971  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  2972  06AB  00B2               	movwf	_sprintf$938^(0+128)
  2973  06AC                     l3251:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2976  06AC  0835               	movf	(_sprintf$938+3)^(0+128),w
  2977  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2978  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2979  06AF  00B5               	movwf	___flmul@a+3
  2980  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  2981  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  2982  06B2  0834               	movf	(_sprintf$938+2)^(0+128),w
  2983  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2984  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2985  06B5  00B4               	movwf	___flmul@a+2
  2986  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  2987  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  2988  06B8  0833               	movf	(_sprintf$938+1)^(0+128),w
  2989  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  2990  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  2991  06BB  00B3               	movwf	___flmul@a+1
  2992  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  2993  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  2994  06BE  0832               	movf	_sprintf$938^(0+128),w
  2995  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2996  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2997  06C1  00B2               	movwf	___flmul@a
  2998  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  2999  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  3000  06C4  0849               	movf	(sprintf@fval+3)^(0+128),w
  3001  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3002  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  3003  06C7  00B1               	movwf	___flmul@b+3
  3004  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  3005  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  3006  06CA  0848               	movf	(sprintf@fval+2)^(0+128),w
  3007  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3008  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3009  06CD  00B0               	movwf	___flmul@b+2
  3010  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  3011  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  3012  06D0  0847               	movf	(sprintf@fval+1)^(0+128),w
  3013  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3014  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3015  06D3  00AF               	movwf	___flmul@b+1
  3016  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  3017  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  3018  06D6  0846               	movf	sprintf@fval^(0+128),w
  3019  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3020  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3021  06D9  00AE               	movwf	___flmul@b
  3022  06DA  120A  158A  249F  120A  118A  	fcall	___flmul
  3023  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3024  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3025  06E1  0831               	movf	?___flmul+3,w
  3026  06E2  00DE               	movwf	___fltol@f1+3
  3027  06E3  0830               	movf	?___flmul+2,w
  3028  06E4  00DD               	movwf	___fltol@f1+2
  3029  06E5  082F               	movf	?___flmul+1,w
  3030  06E6  00DC               	movwf	___fltol@f1+1
  3031  06E7  082E               	movf	?___flmul,w
  3032  06E8  00DB               	movwf	___fltol@f1
  3033  06E9  160A  118A  2072  120A  118A  	fcall	___fltol
  3034  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  3035  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  3036  06F0  085E               	movf	?___fltol+3,w
  3037  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3038  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  3039  06F3  00BE               	movwf	(sprintf@val+3)^(0+128)
  3040  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  3041  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  3042  06F6  085D               	movf	?___fltol+2,w
  3043  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3044  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  3045  06F9  00BD               	movwf	(sprintf@val+2)^(0+128)
  3046  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3047  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3048  06FC  085C               	movf	?___fltol+1,w
  3049  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  3050  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  3051  06FF  00BC               	movwf	(sprintf@val+1)^(0+128)
  3052  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0702  085B               	movf	?___fltol,w
  3055  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0704  1303               	bcf	3,6	;RP1=0, select bank1
  3057  0705  00BB               	movwf	sprintf@val^(0+128)
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3060  0706  2FA8               	goto	l3261
  3061  0707                     l3253:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3064  0707  084A               	movf	sprintf@c^(0+128),w
  3065  0708  00AD               	movwf	??_sprintf^(0+128)
  3066  0709  3001               	movlw	1
  3067  070A                     u5305:
  3068  070A  1003               	clrc
  3069  070B  0DAD               	rlf	??_sprintf^(0+128),f
  3070  070C  3EFF               	addlw	-1
  3071  070D  1D03               	skipz
  3072  070E  2F0A               	goto	u5305
  3073  070F  1003               	clrc
  3074  0710  0D2D               	rlf	??_sprintf^(0+128),w
  3075  0711  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3076  0712  0084               	movwf	4
  3077  0713  120A  158A  200A  120A  118A  	fcall	stringdir
  3078  0718  00F0               	movwf	___lldiv@divisor
  3079  0719  120A  158A  200A  120A  118A  	fcall	stringdir
  3080  071E  00F1               	movwf	___lldiv@divisor+1
  3081  071F  120A  158A  200A  120A  118A  	fcall	stringdir
  3082  0724  00F2               	movwf	___lldiv@divisor+2
  3083  0725  120A  158A  200A  120A  118A  	fcall	stringdir
  3084  072A  00F3               	movwf	___lldiv@divisor+3
  3085  072B  083E               	movf	(sprintf@val+3)^(0+128),w
  3086  072C  00F7               	movwf	___lldiv@dividend+3
  3087  072D  083D               	movf	(sprintf@val+2)^(0+128),w
  3088  072E  00F6               	movwf	___lldiv@dividend+2
  3089  072F  083C               	movf	(sprintf@val+1)^(0+128),w
  3090  0730  00F5               	movwf	___lldiv@dividend+1
  3091  0731  083B               	movf	sprintf@val^(0+128),w
  3092  0732  00F4               	movwf	___lldiv@dividend
  3093  0733  160A  158A  279A  120A  118A  	fcall	___lldiv
  3094  0738  0873               	movf	?___lldiv+3,w
  3095  0739  1683               	bsf	3,5	;RP0=1, select bank1
  3096  073A  1303               	bcf	3,6	;RP1=0, select bank1
  3097  073B  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  3098  073C  0872               	movf	?___lldiv+2,w
  3099  073D  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  3100  073E  0871               	movf	?___lldiv+1,w
  3101  073F  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  3102  0740  0870               	movf	?___lldiv,w
  3103  0741  00C1               	movwf	sprintf@tmpval^(0+128)
  3104  0742                     l3255:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3107  0742  3000               	movlw	0
  3108  0743  00F3               	movwf	___llmod@divisor+3
  3109  0744  3000               	movlw	0
  3110  0745  00F2               	movwf	___llmod@divisor+2
  3111  0746  3000               	movlw	0
  3112  0747  00F1               	movwf	___llmod@divisor+1
  3113  0748  300A               	movlw	10
  3114  0749  00F0               	movwf	___llmod@divisor
  3115  074A  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  3116  074B  00F7               	movwf	___llmod@dividend+3
  3117  074C  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  3118  074D  00F6               	movwf	___llmod@dividend+2
  3119  074E  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  3120  074F  00F5               	movwf	___llmod@dividend+1
  3121  0750  0841               	movf	sprintf@tmpval^(0+128),w
  3122  0751  00F4               	movwf	___llmod@dividend
  3123  0752  160A  158A  2690  120A  118A  	fcall	___llmod
  3124  0757  0873               	movf	?___llmod+3,w
  3125  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3126  0759  1303               	bcf	3,6	;RP1=0, select bank1
  3127  075A  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  3128  075B  0872               	movf	?___llmod+2,w
  3129  075C  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  3130  075D  0871               	movf	?___llmod+1,w
  3131  075E  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  3132  075F  0870               	movf	?___llmod,w
  3133  0760  00C1               	movwf	sprintf@tmpval^(0+128)
  3134  0761                     l3257:
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3137  0761  0841               	movf	sprintf@tmpval^(0+128),w
  3138  0762  3E30               	addlw	48
  3139  0763  00AD               	movwf	??_sprintf^(0+128)
  3140  0764  0845               	movf	sprintf@sp^(0+128),w
  3141  0765  0084               	movwf	4
  3142  0766  082D               	movf	??_sprintf^(0+128),w
  3143  0767  1383               	bcf	3,7	;select IRP bank0
  3144  0768  0080               	movwf	0
  3145  0769  3001               	movlw	1
  3146  076A  00AD               	movwf	??_sprintf^(0+128)
  3147  076B  082D               	movf	??_sprintf^(0+128),w
  3148  076C  07C5               	addwf	sprintf@sp^(0+128),f
  3149  076D                     l3259:
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3152  076D  084A               	movf	sprintf@c^(0+128),w
  3153  076E  00AD               	movwf	??_sprintf^(0+128)
  3154  076F  3001               	movlw	1
  3155  0770                     u5315:
  3156  0770  1003               	clrc
  3157  0771  0DAD               	rlf	??_sprintf^(0+128),f
  3158  0772  3EFF               	addlw	-1
  3159  0773  1D03               	skipz
  3160  0774  2F70               	goto	u5315
  3161  0775  1003               	clrc
  3162  0776  0D2D               	rlf	??_sprintf^(0+128),w
  3163  0777  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3164  0778  0084               	movwf	4
  3165  0779  120A  158A  200A  120A  118A  	fcall	stringdir
  3166  077E  00F0               	movwf	___llmod@divisor
  3167  077F  120A  158A  200A  120A  118A  	fcall	stringdir
  3168  0784  00F1               	movwf	___llmod@divisor+1
  3169  0785  120A  158A  200A  120A  118A  	fcall	stringdir
  3170  078A  00F2               	movwf	___llmod@divisor+2
  3171  078B  120A  158A  200A  120A  118A  	fcall	stringdir
  3172  0790  00F3               	movwf	___llmod@divisor+3
  3173  0791  083E               	movf	(sprintf@val+3)^(0+128),w
  3174  0792  00F7               	movwf	___llmod@dividend+3
  3175  0793  083D               	movf	(sprintf@val+2)^(0+128),w
  3176  0794  00F6               	movwf	___llmod@dividend+2
  3177  0795  083C               	movf	(sprintf@val+1)^(0+128),w
  3178  0796  00F5               	movwf	___llmod@dividend+1
  3179  0797  083B               	movf	sprintf@val^(0+128),w
  3180  0798  00F4               	movwf	___llmod@dividend
  3181  0799  160A  158A  2690  120A  118A  	fcall	___llmod
  3182  079E  0873               	movf	?___llmod+3,w
  3183  079F  1683               	bsf	3,5	;RP0=1, select bank1
  3184  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  3185  07A1  00BE               	movwf	(sprintf@val+3)^(0+128)
  3186  07A2  0872               	movf	?___llmod+2,w
  3187  07A3  00BD               	movwf	(sprintf@val+2)^(0+128)
  3188  07A4  0871               	movf	?___llmod+1,w
  3189  07A5  00BC               	movwf	(sprintf@val+1)^(0+128)
  3190  07A6  0870               	movf	?___llmod,w
  3191  07A7  00BB               	movwf	sprintf@val^(0+128)
  3192  07A8                     l3261:
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3195  07A8  3001               	movlw	1
  3196  07A9  02CA               	subwf	sprintf@c^(0+128),f
  3197  07AA  0A4A               	incf	sprintf@c^(0+128),w
  3198  07AB  1D03               	btfss	3,2
  3199  07AC  2FAE               	goto	u5321
  3200  07AD  2FAF               	goto	u5320
  3201  07AE                     u5321:
  3202  07AE  2F07               	goto	l3253
  3203  07AF                     u5320:
  3204  07AF  2FC1               	goto	l3269
  3205  07B0                     l3263:
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3208  07B0  3030               	movlw	48
  3209  07B1  00AD               	movwf	??_sprintf^(0+128)
  3210  07B2  0845               	movf	sprintf@sp^(0+128),w
  3211  07B3  0084               	movwf	4
  3212  07B4  082D               	movf	??_sprintf^(0+128),w
  3213  07B5  1383               	bcf	3,7	;select IRP bank0
  3214  07B6  0080               	movwf	0
  3215  07B7                     l3265:
  3216  07B7  3001               	movlw	1
  3217  07B8  00AD               	movwf	??_sprintf^(0+128)
  3218  07B9  082D               	movf	??_sprintf^(0+128),w
  3219  07BA  07C5               	addwf	sprintf@sp^(0+128),f
  3220  07BB                     l3267:
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3223  07BB  30FF               	movlw	255
  3224  07BC  07B9               	addwf	sprintf@prec^(0+128),f
  3225  07BD  1803               	skipnc
  3226  07BE  0ABA               	incf	(sprintf@prec+1)^(0+128),f
  3227  07BF  30FF               	movlw	255
  3228  07C0  07BA               	addwf	(sprintf@prec+1)^(0+128),f
  3229  07C1                     l3269:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3232  07C1  0839               	movf	sprintf@prec^(0+128),w
  3233  07C2  043A               	iorwf	(sprintf@prec+1)^(0+128),w
  3234  07C3  1D03               	btfss	3,2
  3235  07C4  2FC6               	goto	u5331
  3236  07C5  2FC7               	goto	u5330
  3237  07C6                     u5331:
  3238  07C6  2FB0               	goto	l3263
  3239  07C7                     u5330:
  3240  07C7  2FDC               	goto	l3277
  3241  07C8                     l3271:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3244  07C8  3003               	movlw	3
  3245  07C9  0537               	andwf	sprintf@flag^(0+128),w
  3246  07CA  00AD               	movwf	??_sprintf^(0+128)
  3247  07CB  3000               	movlw	0
  3248  07CC  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3249  07CD  00AE               	movwf	(??_sprintf+1)^(0+128)
  3250  07CE  082D               	movf	??_sprintf^(0+128),w
  3251  07CF  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3252  07D0  1903               	btfsc	3,2
  3253  07D1  2FD3               	goto	u5341
  3254  07D2  2FD4               	goto	u5340
  3255  07D3                     u5341:
  3256  07D3  2FDC               	goto	l3277
  3257  07D4                     u5340:
  3258  07D4                     l3273:
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3261  07D4  302D               	movlw	45
  3262  07D5  00AD               	movwf	??_sprintf^(0+128)
  3263  07D6  0845               	movf	sprintf@sp^(0+128),w
  3264  07D7  0084               	movwf	4
  3265  07D8  082D               	movf	??_sprintf^(0+128),w
  3266  07D9  1383               	bcf	3,7	;select IRP bank0
  3267  07DA  0080               	movwf	0
  3268  07DB  2A50               	goto	l3123
  3269  07DC                     l3277:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3272  07DC  3001               	movlw	1
  3273  07DD  07A8               	addwf	sprintf@f^(0+128),f
  3274  07DE  30FF               	movlw	-1
  3275  07DF  0728               	addwf	sprintf@f^(0+128),w
  3276  07E0  0084               	movwf	4
  3277  07E1  120A  158A  200A  120A  118A  	fcall	stringdir
  3278  07E6  00AD               	movwf	??_sprintf^(0+128)
  3279  07E7  082D               	movf	??_sprintf^(0+128),w
  3280  07E8  00CA               	movwf	sprintf@c^(0+128)
  3281  07E9  084A               	movf	sprintf@c^(0+128),w
  3282  07EA  1D03               	btfss	3,2
  3283  07EB  2FED               	goto	u5351
  3284  07EC  2FEE               	goto	u5350
  3285  07ED                     u5351:
  3286  07ED  2A43               	goto	l3119
  3287  07EE                     u5350:
  3288  07EE                     l3279:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3291  07EE  0845               	movf	sprintf@sp^(0+128),w
  3292  07EF  0084               	movwf	4
  3293  07F0  1383               	bcf	3,7	;select IRP bank0
  3294  07F1  0180               	clrf	0
  3295  07F2                     l345:
  3296  07F2  0008               	return
  3297  07F3                     __end_of_sprintf:
  3298                           
  3299                           	psect	text2
  3300  0940                     __ptext2:	
  3301 ;; *************** function _scale *****************
  3302 ;; Defined at:
  3303 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  scl             1    wreg     char 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  scl             1   58[BANK0 ] char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  4   40[BANK0 ] char 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         0       4       0       0       0
  3318 ;;      Locals:         0       5       0       0       0
  3319 ;;      Temps:          0      10       0       0       0
  3320 ;;      Totals:         0      19       0       0       0
  3321 ;;Total ram usage:       19 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    2
  3324 ;; This function calls:
  3325 ;;		___awdiv
  3326 ;;		___awmod
  3327 ;;		___flmul
  3328 ;; This function is called by:
  3329 ;;		_sprintf
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _scale
  3335  0940                     _scale:
  3336                           
  3337                           ;incstack = 0
  3338                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3339                           ;scale@scl stored from wreg
  3340  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0942  00DA               	movwf	scale@scl
  3343  0943                     l2709:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3346  0943  1FDA               	btfss	scale@scl,7
  3347  0944  2946               	goto	u4031
  3348  0945  2947               	goto	u4030
  3349  0946                     u4031:
  3350  0946  2AF4               	goto	l2731
  3351  0947                     u4030:
  3352  0947                     l2711:
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3355  0947  09DA               	comf	scale@scl,f
  3356  0948  0ADA               	incf	scale@scl,f
  3357  0949                     l2713:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3360  0949  085A               	movf	scale@scl,w
  3361  094A  3A80               	xorlw	128
  3362  094B  3E12               	addlw	-238
  3363  094C  1C03               	skipc
  3364  094D  294F               	goto	u4041
  3365  094E  2950               	goto	u4040
  3366  094F                     u4041:
  3367  094F  2A38               	goto	l2721
  3368  0950                     u4040:
  3369  0950                     l2715:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3372  0950  300A               	movlw	10
  3373  0951  00F7               	movwf	___awdiv@divisor
  3374  0952  3000               	movlw	0
  3375  0953  00F8               	movwf	___awdiv@divisor+1
  3376  0954  085A               	movf	scale@scl,w
  3377  0955  00F2               	movwf	___awmod@dividend
  3378  0956  01F3               	clrf	___awmod@dividend+1
  3379  0957  1BF2               	btfsc	___awmod@dividend,7
  3380  0958  03F3               	decf	___awmod@dividend+1,f
  3381  0959  3064               	movlw	100
  3382  095A  00F0               	movwf	___awmod@divisor
  3383  095B  3000               	movlw	0
  3384  095C  00F1               	movwf	___awmod@divisor+1
  3385  095D  160A  158A  26E4  120A  158A  	fcall	___awmod
  3386  0962  0871               	movf	?___awmod+1,w
  3387  0963  00FA               	movwf	___awdiv@dividend+1
  3388  0964  0870               	movf	?___awmod,w
  3389  0965  00F9               	movwf	___awdiv@dividend
  3390  0966  160A  118A  2009  120A  158A  	fcall	___awdiv
  3391  096B  0877               	movf	?___awdiv,w
  3392  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3393  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3394  096E  00CC               	movwf	??_scale
  3395  096F  3001               	movlw	1
  3396  0970                     u4055:
  3397  0970  1003               	clrc
  3398  0971  0DCC               	rlf	??_scale,f
  3399  0972  3EFF               	addlw	-1
  3400  0973  1D03               	skipz
  3401  0974  2970               	goto	u4055
  3402  0975  1003               	clrc
  3403  0976  0D4C               	rlf	??_scale,w
  3404  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3405  0978  0084               	movwf	4
  3406  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  3407  097E  00CD               	movwf	??_scale+1
  3408  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  3409  0984  00CE               	movwf	??_scale+2
  3410  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  3411  098A  00CF               	movwf	??_scale+3
  3412  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  3413  0990  00D0               	movwf	??_scale+4
  3414  0991  0850               	movf	??_scale+4,w
  3415  0992  00B1               	movwf	___flmul@b+3
  3416  0993  084F               	movf	??_scale+3,w
  3417  0994  00B0               	movwf	___flmul@b+2
  3418  0995  084E               	movf	??_scale+2,w
  3419  0996  00AF               	movwf	___flmul@b+1
  3420  0997  084D               	movf	??_scale+1,w
  3421  0998  00AE               	movwf	___flmul@b
  3422  0999  3064               	movlw	100
  3423  099A  00F7               	movwf	___awdiv@divisor
  3424  099B  3000               	movlw	0
  3425  099C  00F8               	movwf	___awdiv@divisor+1
  3426  099D  085A               	movf	scale@scl,w
  3427  099E  00F9               	movwf	___awdiv@dividend
  3428  099F  01FA               	clrf	___awdiv@dividend+1
  3429  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3430  09A1  03FA               	decf	___awdiv@dividend+1,f
  3431  09A2  160A  118A  2009  120A  158A  	fcall	___awdiv
  3432  09A7  0877               	movf	?___awdiv,w
  3433  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3434  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3435  09AA  00D1               	movwf	??_scale+5
  3436  09AB  3001               	movlw	1
  3437  09AC                     u4065:
  3438  09AC  1003               	clrc
  3439  09AD  0DD1               	rlf	??_scale+5,f
  3440  09AE  3EFF               	addlw	-1
  3441  09AF  1D03               	skipz
  3442  09B0  29AC               	goto	u4065
  3443  09B1  1003               	clrc
  3444  09B2  0D51               	rlf	??_scale+5,w
  3445  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3446  09B4  0084               	movwf	4
  3447  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  3448  09BA  00D2               	movwf	??_scale+6
  3449  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  3450  09C0  00D3               	movwf	??_scale+7
  3451  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  3452  09C6  00D4               	movwf	??_scale+8
  3453  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  3454  09CC  00D5               	movwf	??_scale+9
  3455  09CD  0855               	movf	??_scale+9,w
  3456  09CE  00B5               	movwf	___flmul@a+3
  3457  09CF  0854               	movf	??_scale+8,w
  3458  09D0  00B4               	movwf	___flmul@a+2
  3459  09D1  0853               	movf	??_scale+7,w
  3460  09D2  00B3               	movwf	___flmul@a+1
  3461  09D3  0852               	movf	??_scale+6,w
  3462  09D4  00B2               	movwf	___flmul@a
  3463  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3464  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3465  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3466  09DC  0831               	movf	?___flmul+3,w
  3467  09DD  00D9               	movwf	_scale$937+3
  3468  09DE  0830               	movf	?___flmul+2,w
  3469  09DF  00D8               	movwf	_scale$937+2
  3470  09E0  082F               	movf	?___flmul+1,w
  3471  09E1  00D7               	movwf	_scale$937+1
  3472  09E2  082E               	movf	?___flmul,w
  3473  09E3  00D6               	movwf	_scale$937
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3476  09E4  300A               	movlw	10
  3477  09E5  00F0               	movwf	___awmod@divisor
  3478  09E6  3000               	movlw	0
  3479  09E7  00F1               	movwf	___awmod@divisor+1
  3480  09E8  085A               	movf	scale@scl,w
  3481  09E9  00F2               	movwf	___awmod@dividend
  3482  09EA  01F3               	clrf	___awmod@dividend+1
  3483  09EB  1BF2               	btfsc	___awmod@dividend,7
  3484  09EC  03F3               	decf	___awmod@dividend+1,f
  3485  09ED  160A  158A  26E4  120A  158A  	fcall	___awmod
  3486  09F2  0870               	movf	?___awmod,w
  3487  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3488  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3489  09F5  00CC               	movwf	??_scale
  3490  09F6  3001               	movlw	1
  3491  09F7                     u4075:
  3492  09F7  1003               	clrc
  3493  09F8  0DCC               	rlf	??_scale,f
  3494  09F9  3EFF               	addlw	-1
  3495  09FA  1D03               	skipz
  3496  09FB  29F7               	goto	u4075
  3497  09FC  1003               	clrc
  3498  09FD  0D4C               	rlf	??_scale,w
  3499  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3500  09FF  0084               	movwf	4
  3501  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  3502  0A05  00CD               	movwf	??_scale+1
  3503  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  3504  0A0B  00CE               	movwf	??_scale+2
  3505  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3506  0A11  00CF               	movwf	??_scale+3
  3507  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  3508  0A17  00D0               	movwf	??_scale+4
  3509  0A18  0850               	movf	??_scale+4,w
  3510  0A19  00B1               	movwf	___flmul@b+3
  3511  0A1A  084F               	movf	??_scale+3,w
  3512  0A1B  00B0               	movwf	___flmul@b+2
  3513  0A1C  084E               	movf	??_scale+2,w
  3514  0A1D  00AF               	movwf	___flmul@b+1
  3515  0A1E  084D               	movf	??_scale+1,w
  3516  0A1F  00AE               	movwf	___flmul@b
  3517  0A20  0859               	movf	_scale$937+3,w
  3518  0A21  00B5               	movwf	___flmul@a+3
  3519  0A22  0858               	movf	_scale$937+2,w
  3520  0A23  00B4               	movwf	___flmul@a+2
  3521  0A24  0857               	movf	_scale$937+1,w
  3522  0A25  00B3               	movwf	___flmul@a+1
  3523  0A26  0856               	movf	_scale$937,w
  3524  0A27  00B2               	movwf	___flmul@a
  3525  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3526  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0A2F  0831               	movf	?___flmul+3,w
  3529  0A30  00CB               	movwf	?_scale+3
  3530  0A31  0830               	movf	?___flmul+2,w
  3531  0A32  00CA               	movwf	?_scale+2
  3532  0A33  082F               	movf	?___flmul+1,w
  3533  0A34  00C9               	movwf	?_scale+1
  3534  0A35  082E               	movf	?___flmul,w
  3535  0A36  00C8               	movwf	?_scale
  3536  0A37  2C9E               	goto	l289
  3537  0A38                     l2721:
  3538  0A38  085A               	movf	scale@scl,w
  3539  0A39  3A80               	xorlw	128
  3540  0A3A  3E75               	addlw	-139
  3541  0A3B  1C03               	skipc
  3542  0A3C  2A3E               	goto	u4081
  3543  0A3D  2A3F               	goto	u4080
  3544  0A3E                     u4081:
  3545  0A3E  2AC7               	goto	l2727
  3546  0A3F                     u4080:
  3547  0A3F                     l2723:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3550  0A3F  300A               	movlw	10
  3551  0A40  00F0               	movwf	___awmod@divisor
  3552  0A41  3000               	movlw	0
  3553  0A42  00F1               	movwf	___awmod@divisor+1
  3554  0A43  085A               	movf	scale@scl,w
  3555  0A44  00F2               	movwf	___awmod@dividend
  3556  0A45  01F3               	clrf	___awmod@dividend+1
  3557  0A46  1BF2               	btfsc	___awmod@dividend,7
  3558  0A47  03F3               	decf	___awmod@dividend+1,f
  3559  0A48  160A  158A  26E4  120A  158A  	fcall	___awmod
  3560  0A4D  0870               	movf	?___awmod,w
  3561  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0A50  00CC               	movwf	??_scale
  3564  0A51  3001               	movlw	1
  3565  0A52                     u4095:
  3566  0A52  1003               	clrc
  3567  0A53  0DCC               	rlf	??_scale,f
  3568  0A54  3EFF               	addlw	-1
  3569  0A55  1D03               	skipz
  3570  0A56  2A52               	goto	u4095
  3571  0A57  1003               	clrc
  3572  0A58  0D4C               	rlf	??_scale,w
  3573  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3574  0A5A  0084               	movwf	4
  3575  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  3576  0A60  00CD               	movwf	??_scale+1
  3577  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  3578  0A66  00CE               	movwf	??_scale+2
  3579  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  3580  0A6C  00CF               	movwf	??_scale+3
  3581  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  3582  0A72  00D0               	movwf	??_scale+4
  3583  0A73  0850               	movf	??_scale+4,w
  3584  0A74  00B1               	movwf	___flmul@b+3
  3585  0A75  084F               	movf	??_scale+3,w
  3586  0A76  00B0               	movwf	___flmul@b+2
  3587  0A77  084E               	movf	??_scale+2,w
  3588  0A78  00AF               	movwf	___flmul@b+1
  3589  0A79  084D               	movf	??_scale+1,w
  3590  0A7A  00AE               	movwf	___flmul@b
  3591  0A7B  300A               	movlw	10
  3592  0A7C  00F7               	movwf	___awdiv@divisor
  3593  0A7D  3000               	movlw	0
  3594  0A7E  00F8               	movwf	___awdiv@divisor+1
  3595  0A7F  085A               	movf	scale@scl,w
  3596  0A80  00F9               	movwf	___awdiv@dividend
  3597  0A81  01FA               	clrf	___awdiv@dividend+1
  3598  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3599  0A83  03FA               	decf	___awdiv@dividend+1,f
  3600  0A84  160A  118A  2009  120A  158A  	fcall	___awdiv
  3601  0A89  0877               	movf	?___awdiv,w
  3602  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0A8C  00D1               	movwf	??_scale+5
  3605  0A8D  3001               	movlw	1
  3606  0A8E                     u4105:
  3607  0A8E  1003               	clrc
  3608  0A8F  0DD1               	rlf	??_scale+5,f
  3609  0A90  3EFF               	addlw	-1
  3610  0A91  1D03               	skipz
  3611  0A92  2A8E               	goto	u4105
  3612  0A93  1003               	clrc
  3613  0A94  0D51               	rlf	??_scale+5,w
  3614  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3615  0A96  0084               	movwf	4
  3616  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  3617  0A9C  00D2               	movwf	??_scale+6
  3618  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  3619  0AA2  00D3               	movwf	??_scale+7
  3620  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3621  0AA8  00D4               	movwf	??_scale+8
  3622  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3623  0AAE  00D5               	movwf	??_scale+9
  3624  0AAF  0855               	movf	??_scale+9,w
  3625  0AB0  00B5               	movwf	___flmul@a+3
  3626  0AB1  0854               	movf	??_scale+8,w
  3627  0AB2  00B4               	movwf	___flmul@a+2
  3628  0AB3  0853               	movf	??_scale+7,w
  3629  0AB4  00B3               	movwf	___flmul@a+1
  3630  0AB5  0852               	movf	??_scale+6,w
  3631  0AB6  00B2               	movwf	___flmul@a
  3632  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3633  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0ABE  0831               	movf	?___flmul+3,w
  3636  0ABF  00CB               	movwf	?_scale+3
  3637  0AC0  0830               	movf	?___flmul+2,w
  3638  0AC1  00CA               	movwf	?_scale+2
  3639  0AC2  082F               	movf	?___flmul+1,w
  3640  0AC3  00C9               	movwf	?_scale+1
  3641  0AC4  082E               	movf	?___flmul,w
  3642  0AC5  00C8               	movwf	?_scale
  3643  0AC6  2C9E               	goto	l289
  3644  0AC7                     l2727:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3647  0AC7  085A               	movf	scale@scl,w
  3648  0AC8  00CC               	movwf	??_scale
  3649  0AC9  3001               	movlw	1
  3650  0ACA                     u4115:
  3651  0ACA  1003               	clrc
  3652  0ACB  0DCC               	rlf	??_scale,f
  3653  0ACC  3EFF               	addlw	-1
  3654  0ACD  1D03               	skipz
  3655  0ACE  2ACA               	goto	u4115
  3656  0ACF  1003               	clrc
  3657  0AD0  0D4C               	rlf	??_scale,w
  3658  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3659  0AD2  0084               	movwf	4
  3660  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  3661  0AD8  00CD               	movwf	??_scale+1
  3662  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  3663  0ADE  00CE               	movwf	??_scale+2
  3664  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  3665  0AE4  00CF               	movwf	??_scale+3
  3666  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3667  0AEA  00D0               	movwf	??_scale+4
  3668  0AEB  0850               	movf	??_scale+4,w
  3669  0AEC  00CB               	movwf	?_scale+3
  3670  0AED  084F               	movf	??_scale+3,w
  3671  0AEE  00CA               	movwf	?_scale+2
  3672  0AEF  084E               	movf	??_scale+2,w
  3673  0AF0  00C9               	movwf	?_scale+1
  3674  0AF1  084D               	movf	??_scale+1,w
  3675  0AF2  00C8               	movwf	?_scale
  3676  0AF3  2C9E               	goto	l289
  3677  0AF4                     l2731:
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3680  0AF4  085A               	movf	scale@scl,w
  3681  0AF5  3A80               	xorlw	128
  3682  0AF6  3E12               	addlw	-238
  3683  0AF7  1C03               	skipc
  3684  0AF8  2AFA               	goto	u4121
  3685  0AF9  2AFB               	goto	u4120
  3686  0AFA                     u4121:
  3687  0AFA  2BE3               	goto	l2739
  3688  0AFB                     u4120:
  3689  0AFB                     l2733:
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3692  0AFB  300A               	movlw	10
  3693  0AFC  00F7               	movwf	___awdiv@divisor
  3694  0AFD  3000               	movlw	0
  3695  0AFE  00F8               	movwf	___awdiv@divisor+1
  3696  0AFF  085A               	movf	scale@scl,w
  3697  0B00  00F2               	movwf	___awmod@dividend
  3698  0B01  01F3               	clrf	___awmod@dividend+1
  3699  0B02  1BF2               	btfsc	___awmod@dividend,7
  3700  0B03  03F3               	decf	___awmod@dividend+1,f
  3701  0B04  3064               	movlw	100
  3702  0B05  00F0               	movwf	___awmod@divisor
  3703  0B06  3000               	movlw	0
  3704  0B07  00F1               	movwf	___awmod@divisor+1
  3705  0B08  160A  158A  26E4  120A  158A  	fcall	___awmod
  3706  0B0D  0871               	movf	?___awmod+1,w
  3707  0B0E  00FA               	movwf	___awdiv@dividend+1
  3708  0B0F  0870               	movf	?___awmod,w
  3709  0B10  00F9               	movwf	___awdiv@dividend
  3710  0B11  160A  118A  2009  120A  158A  	fcall	___awdiv
  3711  0B16  0877               	movf	?___awdiv,w
  3712  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3714  0B19  00CC               	movwf	??_scale
  3715  0B1A  3001               	movlw	1
  3716  0B1B                     u4135:
  3717  0B1B  1003               	clrc
  3718  0B1C  0DCC               	rlf	??_scale,f
  3719  0B1D  3EFF               	addlw	-1
  3720  0B1E  1D03               	skipz
  3721  0B1F  2B1B               	goto	u4135
  3722  0B20  1003               	clrc
  3723  0B21  0D4C               	rlf	??_scale,w
  3724  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3725  0B23  0084               	movwf	4
  3726  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  3727  0B29  00CD               	movwf	??_scale+1
  3728  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  3729  0B2F  00CE               	movwf	??_scale+2
  3730  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  3731  0B35  00CF               	movwf	??_scale+3
  3732  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  3733  0B3B  00D0               	movwf	??_scale+4
  3734  0B3C  0850               	movf	??_scale+4,w
  3735  0B3D  00B1               	movwf	___flmul@b+3
  3736  0B3E  084F               	movf	??_scale+3,w
  3737  0B3F  00B0               	movwf	___flmul@b+2
  3738  0B40  084E               	movf	??_scale+2,w
  3739  0B41  00AF               	movwf	___flmul@b+1
  3740  0B42  084D               	movf	??_scale+1,w
  3741  0B43  00AE               	movwf	___flmul@b
  3742  0B44  3064               	movlw	100
  3743  0B45  00F7               	movwf	___awdiv@divisor
  3744  0B46  3000               	movlw	0
  3745  0B47  00F8               	movwf	___awdiv@divisor+1
  3746  0B48  085A               	movf	scale@scl,w
  3747  0B49  00F9               	movwf	___awdiv@dividend
  3748  0B4A  01FA               	clrf	___awdiv@dividend+1
  3749  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3750  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3751  0B4D  160A  118A  2009  120A  158A  	fcall	___awdiv
  3752  0B52  0877               	movf	?___awdiv,w
  3753  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0B55  00D1               	movwf	??_scale+5
  3756  0B56  3001               	movlw	1
  3757  0B57                     u4145:
  3758  0B57  1003               	clrc
  3759  0B58  0DD1               	rlf	??_scale+5,f
  3760  0B59  3EFF               	addlw	-1
  3761  0B5A  1D03               	skipz
  3762  0B5B  2B57               	goto	u4145
  3763  0B5C  1003               	clrc
  3764  0B5D  0D51               	rlf	??_scale+5,w
  3765  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3766  0B5F  0084               	movwf	4
  3767  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  3768  0B65  00D2               	movwf	??_scale+6
  3769  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  3770  0B6B  00D3               	movwf	??_scale+7
  3771  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  3772  0B71  00D4               	movwf	??_scale+8
  3773  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  3774  0B77  00D5               	movwf	??_scale+9
  3775  0B78  0855               	movf	??_scale+9,w
  3776  0B79  00B5               	movwf	___flmul@a+3
  3777  0B7A  0854               	movf	??_scale+8,w
  3778  0B7B  00B4               	movwf	___flmul@a+2
  3779  0B7C  0853               	movf	??_scale+7,w
  3780  0B7D  00B3               	movwf	___flmul@a+1
  3781  0B7E  0852               	movf	??_scale+6,w
  3782  0B7F  00B2               	movwf	___flmul@a
  3783  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3784  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3786  0B87  0831               	movf	?___flmul+3,w
  3787  0B88  00D9               	movwf	_scale$937+3
  3788  0B89  0830               	movf	?___flmul+2,w
  3789  0B8A  00D8               	movwf	_scale$937+2
  3790  0B8B  082F               	movf	?___flmul+1,w
  3791  0B8C  00D7               	movwf	_scale$937+1
  3792  0B8D  082E               	movf	?___flmul,w
  3793  0B8E  00D6               	movwf	_scale$937
  3794                           
  3795                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3796  0B8F  300A               	movlw	10
  3797  0B90  00F0               	movwf	___awmod@divisor
  3798  0B91  3000               	movlw	0
  3799  0B92  00F1               	movwf	___awmod@divisor+1
  3800  0B93  085A               	movf	scale@scl,w
  3801  0B94  00F2               	movwf	___awmod@dividend
  3802  0B95  01F3               	clrf	___awmod@dividend+1
  3803  0B96  1BF2               	btfsc	___awmod@dividend,7
  3804  0B97  03F3               	decf	___awmod@dividend+1,f
  3805  0B98  160A  158A  26E4  120A  158A  	fcall	___awmod
  3806  0B9D  0870               	movf	?___awmod,w
  3807  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0BA0  00CC               	movwf	??_scale
  3810  0BA1  3001               	movlw	1
  3811  0BA2                     u4155:
  3812  0BA2  1003               	clrc
  3813  0BA3  0DCC               	rlf	??_scale,f
  3814  0BA4  3EFF               	addlw	-1
  3815  0BA5  1D03               	skipz
  3816  0BA6  2BA2               	goto	u4155
  3817  0BA7  1003               	clrc
  3818  0BA8  0D4C               	rlf	??_scale,w
  3819  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3820  0BAA  0084               	movwf	4
  3821  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  3822  0BB0  00CD               	movwf	??_scale+1
  3823  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  3824  0BB6  00CE               	movwf	??_scale+2
  3825  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  3826  0BBC  00CF               	movwf	??_scale+3
  3827  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  3828  0BC2  00D0               	movwf	??_scale+4
  3829  0BC3  0850               	movf	??_scale+4,w
  3830  0BC4  00B1               	movwf	___flmul@b+3
  3831  0BC5  084F               	movf	??_scale+3,w
  3832  0BC6  00B0               	movwf	___flmul@b+2
  3833  0BC7  084E               	movf	??_scale+2,w
  3834  0BC8  00AF               	movwf	___flmul@b+1
  3835  0BC9  084D               	movf	??_scale+1,w
  3836  0BCA  00AE               	movwf	___flmul@b
  3837  0BCB  0859               	movf	_scale$937+3,w
  3838  0BCC  00B5               	movwf	___flmul@a+3
  3839  0BCD  0858               	movf	_scale$937+2,w
  3840  0BCE  00B4               	movwf	___flmul@a+2
  3841  0BCF  0857               	movf	_scale$937+1,w
  3842  0BD0  00B3               	movwf	___flmul@a+1
  3843  0BD1  0856               	movf	_scale$937,w
  3844  0BD2  00B2               	movwf	___flmul@a
  3845  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3846  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0BDA  0831               	movf	?___flmul+3,w
  3849  0BDB  00CB               	movwf	?_scale+3
  3850  0BDC  0830               	movf	?___flmul+2,w
  3851  0BDD  00CA               	movwf	?_scale+2
  3852  0BDE  082F               	movf	?___flmul+1,w
  3853  0BDF  00C9               	movwf	?_scale+1
  3854  0BE0  082E               	movf	?___flmul,w
  3855  0BE1  00C8               	movwf	?_scale
  3856  0BE2  2C9E               	goto	l289
  3857  0BE3                     l2739:
  3858  0BE3  085A               	movf	scale@scl,w
  3859  0BE4  3A80               	xorlw	128
  3860  0BE5  3E75               	addlw	-139
  3861  0BE6  1C03               	skipc
  3862  0BE7  2BE9               	goto	u4161
  3863  0BE8  2BEA               	goto	u4160
  3864  0BE9                     u4161:
  3865  0BE9  2C72               	goto	l2745
  3866  0BEA                     u4160:
  3867  0BEA                     l2741:
  3868                           
  3869                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3870  0BEA  300A               	movlw	10
  3871  0BEB  00F0               	movwf	___awmod@divisor
  3872  0BEC  3000               	movlw	0
  3873  0BED  00F1               	movwf	___awmod@divisor+1
  3874  0BEE  085A               	movf	scale@scl,w
  3875  0BEF  00F2               	movwf	___awmod@dividend
  3876  0BF0  01F3               	clrf	___awmod@dividend+1
  3877  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3878  0BF2  03F3               	decf	___awmod@dividend+1,f
  3879  0BF3  160A  158A  26E4  120A  158A  	fcall	___awmod
  3880  0BF8  0870               	movf	?___awmod,w
  3881  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3882  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3883  0BFB  00CC               	movwf	??_scale
  3884  0BFC  3001               	movlw	1
  3885  0BFD                     u4175:
  3886  0BFD  1003               	clrc
  3887  0BFE  0DCC               	rlf	??_scale,f
  3888  0BFF  3EFF               	addlw	-1
  3889  0C00  1D03               	skipz
  3890  0C01  2BFD               	goto	u4175
  3891  0C02  1003               	clrc
  3892  0C03  0D4C               	rlf	??_scale,w
  3893  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3894  0C05  0084               	movwf	4
  3895  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  3896  0C0B  00CD               	movwf	??_scale+1
  3897  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3898  0C11  00CE               	movwf	??_scale+2
  3899  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  3900  0C17  00CF               	movwf	??_scale+3
  3901  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  3902  0C1D  00D0               	movwf	??_scale+4
  3903  0C1E  0850               	movf	??_scale+4,w
  3904  0C1F  00B1               	movwf	___flmul@b+3
  3905  0C20  084F               	movf	??_scale+3,w
  3906  0C21  00B0               	movwf	___flmul@b+2
  3907  0C22  084E               	movf	??_scale+2,w
  3908  0C23  00AF               	movwf	___flmul@b+1
  3909  0C24  084D               	movf	??_scale+1,w
  3910  0C25  00AE               	movwf	___flmul@b
  3911  0C26  300A               	movlw	10
  3912  0C27  00F7               	movwf	___awdiv@divisor
  3913  0C28  3000               	movlw	0
  3914  0C29  00F8               	movwf	___awdiv@divisor+1
  3915  0C2A  085A               	movf	scale@scl,w
  3916  0C2B  00F9               	movwf	___awdiv@dividend
  3917  0C2C  01FA               	clrf	___awdiv@dividend+1
  3918  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3919  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3920  0C2F  160A  118A  2009  120A  158A  	fcall	___awdiv
  3921  0C34  0877               	movf	?___awdiv,w
  3922  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3923  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3924  0C37  00D1               	movwf	??_scale+5
  3925  0C38  3001               	movlw	1
  3926  0C39                     u4185:
  3927  0C39  1003               	clrc
  3928  0C3A  0DD1               	rlf	??_scale+5,f
  3929  0C3B  3EFF               	addlw	-1
  3930  0C3C  1D03               	skipz
  3931  0C3D  2C39               	goto	u4185
  3932  0C3E  1003               	clrc
  3933  0C3F  0D51               	rlf	??_scale+5,w
  3934  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3935  0C41  0084               	movwf	4
  3936  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  3937  0C47  00D2               	movwf	??_scale+6
  3938  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  3939  0C4D  00D3               	movwf	??_scale+7
  3940  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  3941  0C53  00D4               	movwf	??_scale+8
  3942  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  3943  0C59  00D5               	movwf	??_scale+9
  3944  0C5A  0855               	movf	??_scale+9,w
  3945  0C5B  00B5               	movwf	___flmul@a+3
  3946  0C5C  0854               	movf	??_scale+8,w
  3947  0C5D  00B4               	movwf	___flmul@a+2
  3948  0C5E  0853               	movf	??_scale+7,w
  3949  0C5F  00B3               	movwf	___flmul@a+1
  3950  0C60  0852               	movf	??_scale+6,w
  3951  0C61  00B2               	movwf	___flmul@a
  3952  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3953  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0C69  0831               	movf	?___flmul+3,w
  3956  0C6A  00CB               	movwf	?_scale+3
  3957  0C6B  0830               	movf	?___flmul+2,w
  3958  0C6C  00CA               	movwf	?_scale+2
  3959  0C6D  082F               	movf	?___flmul+1,w
  3960  0C6E  00C9               	movwf	?_scale+1
  3961  0C6F  082E               	movf	?___flmul,w
  3962  0C70  00C8               	movwf	?_scale
  3963  0C71  2C9E               	goto	l289
  3964  0C72                     l2745:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3967  0C72  085A               	movf	scale@scl,w
  3968  0C73  00CC               	movwf	??_scale
  3969  0C74  3001               	movlw	1
  3970  0C75                     u4195:
  3971  0C75  1003               	clrc
  3972  0C76  0DCC               	rlf	??_scale,f
  3973  0C77  3EFF               	addlw	-1
  3974  0C78  1D03               	skipz
  3975  0C79  2C75               	goto	u4195
  3976  0C7A  1003               	clrc
  3977  0C7B  0D4C               	rlf	??_scale,w
  3978  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3979  0C7D  0084               	movwf	4
  3980  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  3981  0C83  00CD               	movwf	??_scale+1
  3982  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  3983  0C89  00CE               	movwf	??_scale+2
  3984  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  3985  0C8F  00CF               	movwf	??_scale+3
  3986  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  3987  0C95  00D0               	movwf	??_scale+4
  3988  0C96  0850               	movf	??_scale+4,w
  3989  0C97  00CB               	movwf	?_scale+3
  3990  0C98  084F               	movf	??_scale+3,w
  3991  0C99  00CA               	movwf	?_scale+2
  3992  0C9A  084E               	movf	??_scale+2,w
  3993  0C9B  00C9               	movwf	?_scale+1
  3994  0C9C  084D               	movf	??_scale+1,w
  3995  0C9D  00C8               	movwf	?_scale
  3996  0C9E                     l289:
  3997  0C9E  0008               	return
  3998  0C9F                     __end_of_scale:
  3999                           
  4000                           	psect	text3
  4001  1EE4                     __ptext3:	
  4002 ;; *************** function ___awmod *****************
  4003 ;; Defined at:
  4004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  divisor         2    0[COMMON] int 
  4007 ;;  dividend        2    2[COMMON] int 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  sign            1    6[COMMON] unsigned char 
  4010 ;;  counter         1    5[COMMON] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  2    0[COMMON] int 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4020 ;;      Params:         4       0       0       0       0
  4021 ;;      Locals:         2       0       0       0       0
  4022 ;;      Temps:          1       0       0       0       0
  4023 ;;      Totals:         7       0       0       0       0
  4024 ;;Total ram usage:        7 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_scale
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function ___awmod
  4035  1EE4                     ___awmod:
  4036  1EE4                     l2237:	
  4037                           ;incstack = 0
  4038                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4039                           
  4040  1EE4  01F6               	clrf	___awmod@sign
  4041  1EE5                     l2239:
  4042  1EE5  1FF3               	btfss	___awmod@dividend+1,7
  4043  1EE6  2EE8               	goto	u2881
  4044  1EE7  2EE9               	goto	u2880
  4045  1EE8                     u2881:
  4046  1EE8  2EF0               	goto	l2245
  4047  1EE9                     u2880:
  4048  1EE9                     l2241:
  4049  1EE9  09F2               	comf	___awmod@dividend,f
  4050  1EEA  09F3               	comf	___awmod@dividend+1,f
  4051  1EEB  0AF2               	incf	___awmod@dividend,f
  4052  1EEC  1903               	skipnz
  4053  1EED  0AF3               	incf	___awmod@dividend+1,f
  4054  1EEE                     l2243:
  4055  1EEE  01F6               	clrf	___awmod@sign
  4056  1EEF  0AF6               	incf	___awmod@sign,f
  4057  1EF0                     l2245:
  4058  1EF0  1FF1               	btfss	___awmod@divisor+1,7
  4059  1EF1  2EF3               	goto	u2891
  4060  1EF2  2EF4               	goto	u2890
  4061  1EF3                     u2891:
  4062  1EF3  2EF9               	goto	l2249
  4063  1EF4                     u2890:
  4064  1EF4                     l2247:
  4065  1EF4  09F0               	comf	___awmod@divisor,f
  4066  1EF5  09F1               	comf	___awmod@divisor+1,f
  4067  1EF6  0AF0               	incf	___awmod@divisor,f
  4068  1EF7  1903               	skipnz
  4069  1EF8  0AF1               	incf	___awmod@divisor+1,f
  4070  1EF9                     l2249:
  4071  1EF9  0870               	movf	___awmod@divisor,w
  4072  1EFA  0471               	iorwf	___awmod@divisor+1,w
  4073  1EFB  1903               	btfsc	3,2
  4074  1EFC  2EFE               	goto	u2901
  4075  1EFD  2EFF               	goto	u2900
  4076  1EFE                     u2901:
  4077  1EFE  2F2E               	goto	l2267
  4078  1EFF                     u2900:
  4079  1EFF                     l2251:
  4080  1EFF  01F5               	clrf	___awmod@counter
  4081  1F00  0AF5               	incf	___awmod@counter,f
  4082  1F01  2F0D               	goto	l2257
  4083  1F02                     l2253:
  4084  1F02  3001               	movlw	1
  4085  1F03                     u2915:
  4086  1F03  1003               	clrc
  4087  1F04  0DF0               	rlf	___awmod@divisor,f
  4088  1F05  0DF1               	rlf	___awmod@divisor+1,f
  4089  1F06  3EFF               	addlw	-1
  4090  1F07  1D03               	skipz
  4091  1F08  2F03               	goto	u2915
  4092  1F09                     l2255:
  4093  1F09  3001               	movlw	1
  4094  1F0A  00F4               	movwf	??___awmod
  4095  1F0B  0874               	movf	??___awmod,w
  4096  1F0C  07F5               	addwf	___awmod@counter,f
  4097  1F0D                     l2257:
  4098  1F0D  1FF1               	btfss	___awmod@divisor+1,7
  4099  1F0E  2F10               	goto	u2921
  4100  1F0F  2F11               	goto	u2920
  4101  1F10                     u2921:
  4102  1F10  2F02               	goto	l2253
  4103  1F11                     u2920:
  4104  1F11                     l2259:
  4105  1F11  0871               	movf	___awmod@divisor+1,w
  4106  1F12  0273               	subwf	___awmod@dividend+1,w
  4107  1F13  1D03               	skipz
  4108  1F14  2F17               	goto	u2935
  4109  1F15  0870               	movf	___awmod@divisor,w
  4110  1F16  0272               	subwf	___awmod@dividend,w
  4111  1F17                     u2935:
  4112  1F17  1C03               	skipc
  4113  1F18  2F1A               	goto	u2931
  4114  1F19  2F1B               	goto	u2930
  4115  1F1A                     u2931:
  4116  1F1A  2F21               	goto	l2263
  4117  1F1B                     u2930:
  4118  1F1B                     l2261:
  4119  1F1B  0870               	movf	___awmod@divisor,w
  4120  1F1C  02F2               	subwf	___awmod@dividend,f
  4121  1F1D  0871               	movf	___awmod@divisor+1,w
  4122  1F1E  1C03               	skipc
  4123  1F1F  03F3               	decf	___awmod@dividend+1,f
  4124  1F20  02F3               	subwf	___awmod@dividend+1,f
  4125  1F21                     l2263:
  4126  1F21  3001               	movlw	1
  4127  1F22                     u2945:
  4128  1F22  1003               	clrc
  4129  1F23  0CF1               	rrf	___awmod@divisor+1,f
  4130  1F24  0CF0               	rrf	___awmod@divisor,f
  4131  1F25  3EFF               	addlw	-1
  4132  1F26  1D03               	skipz
  4133  1F27  2F22               	goto	u2945
  4134  1F28                     l2265:
  4135  1F28  3001               	movlw	1
  4136  1F29  02F5               	subwf	___awmod@counter,f
  4137  1F2A  1D03               	btfss	3,2
  4138  1F2B  2F2D               	goto	u2951
  4139  1F2C  2F2E               	goto	u2950
  4140  1F2D                     u2951:
  4141  1F2D  2F11               	goto	l2259
  4142  1F2E                     u2950:
  4143  1F2E                     l2267:
  4144  1F2E  0876               	movf	___awmod@sign,w
  4145  1F2F  1903               	btfsc	3,2
  4146  1F30  2F32               	goto	u2961
  4147  1F31  2F33               	goto	u2960
  4148  1F32                     u2961:
  4149  1F32  2F38               	goto	l2271
  4150  1F33                     u2960:
  4151  1F33                     l2269:
  4152  1F33  09F2               	comf	___awmod@dividend,f
  4153  1F34  09F3               	comf	___awmod@dividend+1,f
  4154  1F35  0AF2               	incf	___awmod@dividend,f
  4155  1F36  1903               	skipnz
  4156  1F37  0AF3               	incf	___awmod@dividend+1,f
  4157  1F38                     l2271:
  4158  1F38  0873               	movf	___awmod@dividend+1,w
  4159  1F39  00F1               	movwf	?___awmod+1
  4160  1F3A  0872               	movf	___awmod@dividend,w
  4161  1F3B  00F0               	movwf	?___awmod
  4162  1F3C                     l515:
  4163  1F3C  0008               	return
  4164  1F3D                     __end_of___awmod:
  4165                           
  4166                           	psect	text4
  4167  1009                     __ptext4:	
  4168 ;; *************** function ___awdiv *****************
  4169 ;; Defined at:
  4170 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  divisor         2    7[COMMON] int 
  4173 ;;  dividend        2    9[COMMON] int 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  quotient        2    2[BANK0 ] int 
  4176 ;;  sign            1    1[BANK0 ] unsigned char 
  4177 ;;  counter         1    0[BANK0 ] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2    7[COMMON] int 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4187 ;;      Params:         4       0       0       0       0
  4188 ;;      Locals:         0       4       0       0       0
  4189 ;;      Temps:          1       0       0       0       0
  4190 ;;      Totals:         5       4       0       0       0
  4191 ;;Total ram usage:        9 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_scale
  4197 ;;		_sprintf
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function ___awdiv
  4203  1009                     ___awdiv:
  4204  1009                     l2193:	
  4205                           ;incstack = 0
  4206                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4207                           
  4208  1009  1283               	bcf	3,5	;RP0=0, select bank0
  4209  100A  1303               	bcf	3,6	;RP1=0, select bank0
  4210  100B  01A1               	clrf	___awdiv@sign
  4211  100C                     l2195:
  4212  100C  1FF8               	btfss	___awdiv@divisor+1,7
  4213  100D  280F               	goto	u2781
  4214  100E  2810               	goto	u2780
  4215  100F                     u2781:
  4216  100F  2817               	goto	l2201
  4217  1010                     u2780:
  4218  1010                     l2197:
  4219  1010  09F7               	comf	___awdiv@divisor,f
  4220  1011  09F8               	comf	___awdiv@divisor+1,f
  4221  1012  0AF7               	incf	___awdiv@divisor,f
  4222  1013  1903               	skipnz
  4223  1014  0AF8               	incf	___awdiv@divisor+1,f
  4224  1015                     l2199:
  4225  1015  01A1               	clrf	___awdiv@sign
  4226  1016  0AA1               	incf	___awdiv@sign,f
  4227  1017                     l2201:
  4228  1017  1FFA               	btfss	___awdiv@dividend+1,7
  4229  1018  281A               	goto	u2791
  4230  1019  281B               	goto	u2790
  4231  101A                     u2791:
  4232  101A  2824               	goto	l2207
  4233  101B                     u2790:
  4234  101B                     l2203:
  4235  101B  09F9               	comf	___awdiv@dividend,f
  4236  101C  09FA               	comf	___awdiv@dividend+1,f
  4237  101D  0AF9               	incf	___awdiv@dividend,f
  4238  101E  1903               	skipnz
  4239  101F  0AFA               	incf	___awdiv@dividend+1,f
  4240  1020                     l2205:
  4241  1020  3001               	movlw	1
  4242  1021  00FB               	movwf	??___awdiv
  4243  1022  087B               	movf	??___awdiv,w
  4244  1023  06A1               	xorwf	___awdiv@sign,f
  4245  1024                     l2207:
  4246  1024  01A2               	clrf	___awdiv@quotient
  4247  1025  01A3               	clrf	___awdiv@quotient+1
  4248  1026                     l2209:
  4249  1026  0877               	movf	___awdiv@divisor,w
  4250  1027  0478               	iorwf	___awdiv@divisor+1,w
  4251  1028  1903               	btfsc	3,2
  4252  1029  282B               	goto	u2801
  4253  102A  282C               	goto	u2800
  4254  102B                     u2801:
  4255  102B  2863               	goto	l2229
  4256  102C                     u2800:
  4257  102C                     l2211:
  4258  102C  01A0               	clrf	___awdiv@counter
  4259  102D  0AA0               	incf	___awdiv@counter,f
  4260  102E  283A               	goto	l2217
  4261  102F                     l2213:
  4262  102F  3001               	movlw	1
  4263  1030                     u2815:
  4264  1030  1003               	clrc
  4265  1031  0DF7               	rlf	___awdiv@divisor,f
  4266  1032  0DF8               	rlf	___awdiv@divisor+1,f
  4267  1033  3EFF               	addlw	-1
  4268  1034  1D03               	skipz
  4269  1035  2830               	goto	u2815
  4270  1036                     l2215:
  4271  1036  3001               	movlw	1
  4272  1037  00FB               	movwf	??___awdiv
  4273  1038  087B               	movf	??___awdiv,w
  4274  1039  07A0               	addwf	___awdiv@counter,f
  4275  103A                     l2217:
  4276  103A  1FF8               	btfss	___awdiv@divisor+1,7
  4277  103B  283D               	goto	u2821
  4278  103C  283E               	goto	u2820
  4279  103D                     u2821:
  4280  103D  282F               	goto	l2213
  4281  103E                     u2820:
  4282  103E                     l2219:
  4283  103E  3001               	movlw	1
  4284  103F                     u2835:
  4285  103F  1003               	clrc
  4286  1040  0DA2               	rlf	___awdiv@quotient,f
  4287  1041  0DA3               	rlf	___awdiv@quotient+1,f
  4288  1042  3EFF               	addlw	-1
  4289  1043  1D03               	skipz
  4290  1044  283F               	goto	u2835
  4291  1045  0878               	movf	___awdiv@divisor+1,w
  4292  1046  027A               	subwf	___awdiv@dividend+1,w
  4293  1047  1D03               	skipz
  4294  1048  284B               	goto	u2845
  4295  1049  0877               	movf	___awdiv@divisor,w
  4296  104A  0279               	subwf	___awdiv@dividend,w
  4297  104B                     u2845:
  4298  104B  1C03               	skipc
  4299  104C  284E               	goto	u2841
  4300  104D  284F               	goto	u2840
  4301  104E                     u2841:
  4302  104E  2856               	goto	l2225
  4303  104F                     u2840:
  4304  104F                     l2221:
  4305  104F  0877               	movf	___awdiv@divisor,w
  4306  1050  02F9               	subwf	___awdiv@dividend,f
  4307  1051  0878               	movf	___awdiv@divisor+1,w
  4308  1052  1C03               	skipc
  4309  1053  03FA               	decf	___awdiv@dividend+1,f
  4310  1054  02FA               	subwf	___awdiv@dividend+1,f
  4311  1055                     l2223:
  4312  1055  1422               	bsf	___awdiv@quotient,0
  4313  1056                     l2225:
  4314  1056  3001               	movlw	1
  4315  1057                     u2855:
  4316  1057  1003               	clrc
  4317  1058  0CF8               	rrf	___awdiv@divisor+1,f
  4318  1059  0CF7               	rrf	___awdiv@divisor,f
  4319  105A  3EFF               	addlw	-1
  4320  105B  1D03               	skipz
  4321  105C  2857               	goto	u2855
  4322  105D                     l2227:
  4323  105D  3001               	movlw	1
  4324  105E  02A0               	subwf	___awdiv@counter,f
  4325  105F  1D03               	btfss	3,2
  4326  1060  2862               	goto	u2861
  4327  1061  2863               	goto	u2860
  4328  1062                     u2861:
  4329  1062  283E               	goto	l2219
  4330  1063                     u2860:
  4331  1063                     l2229:
  4332  1063  0821               	movf	___awdiv@sign,w
  4333  1064  1903               	btfsc	3,2
  4334  1065  2867               	goto	u2871
  4335  1066  2868               	goto	u2870
  4336  1067                     u2871:
  4337  1067  286D               	goto	l2233
  4338  1068                     u2870:
  4339  1068                     l2231:
  4340  1068  09A2               	comf	___awdiv@quotient,f
  4341  1069  09A3               	comf	___awdiv@quotient+1,f
  4342  106A  0AA2               	incf	___awdiv@quotient,f
  4343  106B  1903               	skipnz
  4344  106C  0AA3               	incf	___awdiv@quotient+1,f
  4345  106D                     l2233:
  4346  106D  0823               	movf	___awdiv@quotient+1,w
  4347  106E  00F8               	movwf	?___awdiv+1
  4348  106F  0822               	movf	___awdiv@quotient,w
  4349  1070  00F7               	movwf	?___awdiv
  4350  1071                     l502:
  4351  1071  0008               	return
  4352  1072                     __end_of___awdiv:
  4353                           
  4354                           	psect	text5
  4355  0030                     __ptext5:	
  4356 ;; *************** function _fround *****************
  4357 ;; Defined at:
  4358 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  prec            1    wreg     unsigned char 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  prec            1   59[BANK0 ] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  4   40[BANK0 ] unsigned char 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4372 ;;      Params:         0       4       0       0       0
  4373 ;;      Locals:         0       9       0       0       0
  4374 ;;      Temps:          0       7       0       0       0
  4375 ;;      Totals:         0      20       0       0       0
  4376 ;;Total ram usage:       20 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    2
  4379 ;; This function calls:
  4380 ;;		___flmul
  4381 ;;		___lwdiv
  4382 ;;		___lwmod
  4383 ;; This function is called by:
  4384 ;;		_sprintf
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           
  4389                           ;psect for function _fround
  4390  0030                     _fround:
  4391                           
  4392                           ;incstack = 0
  4393                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4394                           ;fround@prec stored from wreg
  4395  0030  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0031  1303               	bcf	3,6	;RP1=0, select bank0
  4397  0032  00DB               	movwf	fround@prec
  4398  0033                     l2691:
  4399                           
  4400                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4401  0033  306E               	movlw	110
  4402  0034  025B               	subwf	fround@prec,w
  4403  0035  1C03               	skipc
  4404  0036  2838               	goto	u3951
  4405  0037  2839               	goto	u3950
  4406  0038                     u3951:
  4407  0038  2946               	goto	l2699
  4408  0039                     u3950:
  4409  0039                     l2693:
  4410                           
  4411                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4412  0039  303F               	movlw	63
  4413  003A  00B1               	movwf	___flmul@b+3
  4414  003B  3000               	movlw	0
  4415  003C  00B0               	movwf	___flmul@b+2
  4416  003D  3000               	movlw	0
  4417  003E  00AF               	movwf	___flmul@b+1
  4418  003F  3000               	movlw	0
  4419  0040  00AE               	movwf	___flmul@b
  4420  0041  3064               	movlw	100
  4421  0042  00F6               	movwf	___lwdiv@divisor
  4422  0043  3000               	movlw	0
  4423  0044  00F7               	movwf	___lwdiv@divisor+1
  4424  0045  085B               	movf	fround@prec,w
  4425  0046  00CC               	movwf	??_fround
  4426  0047  01CD               	clrf	??_fround+1
  4427  0048  084C               	movf	??_fround,w
  4428  0049  00F8               	movwf	___lwdiv@dividend
  4429  004A  084D               	movf	??_fround+1,w
  4430  004B  00F9               	movwf	___lwdiv@dividend+1
  4431  004C  160A  158A  25AE  120A  118A  	fcall	___lwdiv
  4432  0051  0876               	movf	?___lwdiv,w
  4433  0052  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0053  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0054  00CE               	movwf	??_fround+2
  4436  0055  3001               	movlw	1
  4437  0056                     u3965:
  4438  0056  1003               	clrc
  4439  0057  0DCE               	rlf	??_fround+2,f
  4440  0058  3EFF               	addlw	-1
  4441  0059  1D03               	skipz
  4442  005A  2856               	goto	u3965
  4443  005B  1003               	clrc
  4444  005C  0D4E               	rlf	??_fround+2,w
  4445  005D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4446  005E  0084               	movwf	4
  4447  005F  120A  158A  200A  120A  118A  	fcall	stringdir
  4448  0064  00CF               	movwf	??_fround+3
  4449  0065  120A  158A  200A  120A  118A  	fcall	stringdir
  4450  006A  00D0               	movwf	??_fround+4
  4451  006B  120A  158A  200A  120A  118A  	fcall	stringdir
  4452  0070  00D1               	movwf	??_fround+5
  4453  0071  120A  158A  200A  120A  118A  	fcall	stringdir
  4454  0076  00D2               	movwf	??_fround+6
  4455  0077  0852               	movf	??_fround+6,w
  4456  0078  00B5               	movwf	___flmul@a+3
  4457  0079  0851               	movf	??_fround+5,w
  4458  007A  00B4               	movwf	___flmul@a+2
  4459  007B  0850               	movf	??_fround+4,w
  4460  007C  00B3               	movwf	___flmul@a+1
  4461  007D  084F               	movf	??_fround+3,w
  4462  007E  00B2               	movwf	___flmul@a
  4463  007F  120A  158A  249F  120A  118A  	fcall	___flmul
  4464  0084  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0085  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0086  0831               	movf	?___flmul+3,w
  4467  0087  00DA               	movwf	_fround$935+3
  4468  0088  0830               	movf	?___flmul+2,w
  4469  0089  00D9               	movwf	_fround$935+2
  4470  008A  082F               	movf	?___flmul+1,w
  4471  008B  00D8               	movwf	_fround$935+1
  4472  008C  082E               	movf	?___flmul,w
  4473  008D  00D7               	movwf	_fround$935
  4474                           
  4475                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4476  008E  300A               	movlw	10
  4477  008F  00F6               	movwf	___lwdiv@divisor
  4478  0090  3000               	movlw	0
  4479  0091  00F7               	movwf	___lwdiv@divisor+1
  4480  0092  085B               	movf	fround@prec,w
  4481  0093  00CC               	movwf	??_fround
  4482  0094  01CD               	clrf	??_fround+1
  4483  0095  084C               	movf	??_fround,w
  4484  0096  00F2               	movwf	___lwmod@dividend
  4485  0097  084D               	movf	??_fround+1,w
  4486  0098  00F3               	movwf	___lwmod@dividend+1
  4487  0099  3064               	movlw	100
  4488  009A  00F0               	movwf	___lwmod@divisor
  4489  009B  3000               	movlw	0
  4490  009C  00F1               	movwf	___lwmod@divisor+1
  4491  009D  160A  158A  24F0  120A  118A  	fcall	___lwmod
  4492  00A2  0871               	movf	?___lwmod+1,w
  4493  00A3  00F9               	movwf	___lwdiv@dividend+1
  4494  00A4  0870               	movf	?___lwmod,w
  4495  00A5  00F8               	movwf	___lwdiv@dividend
  4496  00A6  160A  158A  25AE  120A  118A  	fcall	___lwdiv
  4497  00AB  0876               	movf	?___lwdiv,w
  4498  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  4499  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  4500  00AE  00CE               	movwf	??_fround+2
  4501  00AF  3001               	movlw	1
  4502  00B0                     u3975:
  4503  00B0  1003               	clrc
  4504  00B1  0DCE               	rlf	??_fround+2,f
  4505  00B2  3EFF               	addlw	-1
  4506  00B3  1D03               	skipz
  4507  00B4  28B0               	goto	u3975
  4508  00B5  1003               	clrc
  4509  00B6  0D4E               	rlf	??_fround+2,w
  4510  00B7  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4511  00B8  0084               	movwf	4
  4512  00B9  120A  158A  200A  120A  118A  	fcall	stringdir
  4513  00BE  00CF               	movwf	??_fround+3
  4514  00BF  120A  158A  200A  120A  118A  	fcall	stringdir
  4515  00C4  00D0               	movwf	??_fround+4
  4516  00C5  120A  158A  200A  120A  118A  	fcall	stringdir
  4517  00CA  00D1               	movwf	??_fround+5
  4518  00CB  120A  158A  200A  120A  118A  	fcall	stringdir
  4519  00D0  00D2               	movwf	??_fround+6
  4520  00D1  0852               	movf	??_fround+6,w
  4521  00D2  00B1               	movwf	___flmul@b+3
  4522  00D3  0851               	movf	??_fround+5,w
  4523  00D4  00B0               	movwf	___flmul@b+2
  4524  00D5  0850               	movf	??_fround+4,w
  4525  00D6  00AF               	movwf	___flmul@b+1
  4526  00D7  084F               	movf	??_fround+3,w
  4527  00D8  00AE               	movwf	___flmul@b
  4528  00D9  085A               	movf	_fround$935+3,w
  4529  00DA  00B5               	movwf	___flmul@a+3
  4530  00DB  0859               	movf	_fround$935+2,w
  4531  00DC  00B4               	movwf	___flmul@a+2
  4532  00DD  0858               	movf	_fround$935+1,w
  4533  00DE  00B3               	movwf	___flmul@a+1
  4534  00DF  0857               	movf	_fround$935,w
  4535  00E0  00B2               	movwf	___flmul@a
  4536  00E1  120A  158A  249F  120A  118A  	fcall	___flmul
  4537  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  4538  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  4539  00E8  0831               	movf	?___flmul+3,w
  4540  00E9  00D6               	movwf	_fround$936+3
  4541  00EA  0830               	movf	?___flmul+2,w
  4542  00EB  00D5               	movwf	_fround$936+2
  4543  00EC  082F               	movf	?___flmul+1,w
  4544  00ED  00D4               	movwf	_fround$936+1
  4545  00EE  082E               	movf	?___flmul,w
  4546  00EF  00D3               	movwf	_fround$936
  4547                           
  4548                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4549  00F0  300A               	movlw	10
  4550  00F1  00F0               	movwf	___lwmod@divisor
  4551  00F2  3000               	movlw	0
  4552  00F3  00F1               	movwf	___lwmod@divisor+1
  4553  00F4  085B               	movf	fround@prec,w
  4554  00F5  00CC               	movwf	??_fround
  4555  00F6  01CD               	clrf	??_fround+1
  4556  00F7  084C               	movf	??_fround,w
  4557  00F8  00F2               	movwf	___lwmod@dividend
  4558  00F9  084D               	movf	??_fround+1,w
  4559  00FA  00F3               	movwf	___lwmod@dividend+1
  4560  00FB  160A  158A  24F0  120A  118A  	fcall	___lwmod
  4561  0100  0870               	movf	?___lwmod,w
  4562  0101  1283               	bcf	3,5	;RP0=0, select bank0
  4563  0102  1303               	bcf	3,6	;RP1=0, select bank0
  4564  0103  00CE               	movwf	??_fround+2
  4565  0104  3001               	movlw	1
  4566  0105                     u3985:
  4567  0105  1003               	clrc
  4568  0106  0DCE               	rlf	??_fround+2,f
  4569  0107  3EFF               	addlw	-1
  4570  0108  1D03               	skipz
  4571  0109  2905               	goto	u3985
  4572  010A  1003               	clrc
  4573  010B  0D4E               	rlf	??_fround+2,w
  4574  010C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4575  010D  0084               	movwf	4
  4576  010E  120A  158A  200A  120A  118A  	fcall	stringdir
  4577  0113  00CF               	movwf	??_fround+3
  4578  0114  120A  158A  200A  120A  118A  	fcall	stringdir
  4579  0119  00D0               	movwf	??_fround+4
  4580  011A  120A  158A  200A  120A  118A  	fcall	stringdir
  4581  011F  00D1               	movwf	??_fround+5
  4582  0120  120A  158A  200A  120A  118A  	fcall	stringdir
  4583  0125  00D2               	movwf	??_fround+6
  4584  0126  0852               	movf	??_fround+6,w
  4585  0127  00B1               	movwf	___flmul@b+3
  4586  0128  0851               	movf	??_fround+5,w
  4587  0129  00B0               	movwf	___flmul@b+2
  4588  012A  0850               	movf	??_fround+4,w
  4589  012B  00AF               	movwf	___flmul@b+1
  4590  012C  084F               	movf	??_fround+3,w
  4591  012D  00AE               	movwf	___flmul@b
  4592  012E  0856               	movf	_fround$936+3,w
  4593  012F  00B5               	movwf	___flmul@a+3
  4594  0130  0855               	movf	_fround$936+2,w
  4595  0131  00B4               	movwf	___flmul@a+2
  4596  0132  0854               	movf	_fround$936+1,w
  4597  0133  00B3               	movwf	___flmul@a+1
  4598  0134  0853               	movf	_fround$936,w
  4599  0135  00B2               	movwf	___flmul@a
  4600  0136  120A  158A  249F  120A  118A  	fcall	___flmul
  4601  013B  1283               	bcf	3,5	;RP0=0, select bank0
  4602  013C  1303               	bcf	3,6	;RP1=0, select bank0
  4603  013D  0831               	movf	?___flmul+3,w
  4604  013E  00CB               	movwf	?_fround+3
  4605  013F  0830               	movf	?___flmul+2,w
  4606  0140  00CA               	movwf	?_fround+2
  4607  0141  082F               	movf	?___flmul+1,w
  4608  0142  00C9               	movwf	?_fround+1
  4609  0143  082E               	movf	?___flmul,w
  4610  0144  00C8               	movwf	?_fround
  4611  0145  2A3A               	goto	l282
  4612  0146                     l2699:
  4613  0146  300B               	movlw	11
  4614  0147  025B               	subwf	fround@prec,w
  4615  0148  1C03               	skipc
  4616  0149  294B               	goto	u3991
  4617  014A  294C               	goto	u3990
  4618  014B                     u3991:
  4619  014B  29F7               	goto	l2705
  4620  014C                     u3990:
  4621  014C                     l2701:
  4622                           
  4623                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4624  014C  303F               	movlw	63
  4625  014D  00B1               	movwf	___flmul@b+3
  4626  014E  3000               	movlw	0
  4627  014F  00B0               	movwf	___flmul@b+2
  4628  0150  3000               	movlw	0
  4629  0151  00AF               	movwf	___flmul@b+1
  4630  0152  3000               	movlw	0
  4631  0153  00AE               	movwf	___flmul@b
  4632  0154  300A               	movlw	10
  4633  0155  00F6               	movwf	___lwdiv@divisor
  4634  0156  3000               	movlw	0
  4635  0157  00F7               	movwf	___lwdiv@divisor+1
  4636  0158  085B               	movf	fround@prec,w
  4637  0159  00CC               	movwf	??_fround
  4638  015A  01CD               	clrf	??_fround+1
  4639  015B  084C               	movf	??_fround,w
  4640  015C  00F8               	movwf	___lwdiv@dividend
  4641  015D  084D               	movf	??_fround+1,w
  4642  015E  00F9               	movwf	___lwdiv@dividend+1
  4643  015F  160A  158A  25AE  120A  118A  	fcall	___lwdiv
  4644  0164  0876               	movf	?___lwdiv,w
  4645  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4646  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4647  0167  00CE               	movwf	??_fround+2
  4648  0168  3001               	movlw	1
  4649  0169                     u4005:
  4650  0169  1003               	clrc
  4651  016A  0DCE               	rlf	??_fround+2,f
  4652  016B  3EFF               	addlw	-1
  4653  016C  1D03               	skipz
  4654  016D  2969               	goto	u4005
  4655  016E  1003               	clrc
  4656  016F  0D4E               	rlf	??_fround+2,w
  4657  0170  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4658  0171  0084               	movwf	4
  4659  0172  120A  158A  200A  120A  118A  	fcall	stringdir
  4660  0177  00CF               	movwf	??_fround+3
  4661  0178  120A  158A  200A  120A  118A  	fcall	stringdir
  4662  017D  00D0               	movwf	??_fround+4
  4663  017E  120A  158A  200A  120A  118A  	fcall	stringdir
  4664  0183  00D1               	movwf	??_fround+5
  4665  0184  120A  158A  200A  120A  118A  	fcall	stringdir
  4666  0189  00D2               	movwf	??_fround+6
  4667  018A  0852               	movf	??_fround+6,w
  4668  018B  00B5               	movwf	___flmul@a+3
  4669  018C  0851               	movf	??_fround+5,w
  4670  018D  00B4               	movwf	___flmul@a+2
  4671  018E  0850               	movf	??_fround+4,w
  4672  018F  00B3               	movwf	___flmul@a+1
  4673  0190  084F               	movf	??_fround+3,w
  4674  0191  00B2               	movwf	___flmul@a
  4675  0192  120A  158A  249F  120A  118A  	fcall	___flmul
  4676  0197  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0198  1303               	bcf	3,6	;RP1=0, select bank0
  4678  0199  0831               	movf	?___flmul+3,w
  4679  019A  00DA               	movwf	_fround$935+3
  4680  019B  0830               	movf	?___flmul+2,w
  4681  019C  00D9               	movwf	_fround$935+2
  4682  019D  082F               	movf	?___flmul+1,w
  4683  019E  00D8               	movwf	_fround$935+1
  4684  019F  082E               	movf	?___flmul,w
  4685  01A0  00D7               	movwf	_fround$935
  4686                           
  4687                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4688  01A1  300A               	movlw	10
  4689  01A2  00F0               	movwf	___lwmod@divisor
  4690  01A3  3000               	movlw	0
  4691  01A4  00F1               	movwf	___lwmod@divisor+1
  4692  01A5  085B               	movf	fround@prec,w
  4693  01A6  00CC               	movwf	??_fround
  4694  01A7  01CD               	clrf	??_fround+1
  4695  01A8  084C               	movf	??_fround,w
  4696  01A9  00F2               	movwf	___lwmod@dividend
  4697  01AA  084D               	movf	??_fround+1,w
  4698  01AB  00F3               	movwf	___lwmod@dividend+1
  4699  01AC  160A  158A  24F0  120A  118A  	fcall	___lwmod
  4700  01B1  0870               	movf	?___lwmod,w
  4701  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  4702  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  4703  01B4  00CE               	movwf	??_fround+2
  4704  01B5  3001               	movlw	1
  4705  01B6                     u4015:
  4706  01B6  1003               	clrc
  4707  01B7  0DCE               	rlf	??_fround+2,f
  4708  01B8  3EFF               	addlw	-1
  4709  01B9  1D03               	skipz
  4710  01BA  29B6               	goto	u4015
  4711  01BB  1003               	clrc
  4712  01BC  0D4E               	rlf	??_fround+2,w
  4713  01BD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4714  01BE  0084               	movwf	4
  4715  01BF  120A  158A  200A  120A  118A  	fcall	stringdir
  4716  01C4  00CF               	movwf	??_fround+3
  4717  01C5  120A  158A  200A  120A  118A  	fcall	stringdir
  4718  01CA  00D0               	movwf	??_fround+4
  4719  01CB  120A  158A  200A  120A  118A  	fcall	stringdir
  4720  01D0  00D1               	movwf	??_fround+5
  4721  01D1  120A  158A  200A  120A  118A  	fcall	stringdir
  4722  01D6  00D2               	movwf	??_fround+6
  4723  01D7  0852               	movf	??_fround+6,w
  4724  01D8  00B1               	movwf	___flmul@b+3
  4725  01D9  0851               	movf	??_fround+5,w
  4726  01DA  00B0               	movwf	___flmul@b+2
  4727  01DB  0850               	movf	??_fround+4,w
  4728  01DC  00AF               	movwf	___flmul@b+1
  4729  01DD  084F               	movf	??_fround+3,w
  4730  01DE  00AE               	movwf	___flmul@b
  4731  01DF  085A               	movf	_fround$935+3,w
  4732  01E0  00B5               	movwf	___flmul@a+3
  4733  01E1  0859               	movf	_fround$935+2,w
  4734  01E2  00B4               	movwf	___flmul@a+2
  4735  01E3  0858               	movf	_fround$935+1,w
  4736  01E4  00B3               	movwf	___flmul@a+1
  4737  01E5  0857               	movf	_fround$935,w
  4738  01E6  00B2               	movwf	___flmul@a
  4739  01E7  120A  158A  249F  120A  118A  	fcall	___flmul
  4740  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  4741  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  4742  01EE  0831               	movf	?___flmul+3,w
  4743  01EF  00CB               	movwf	?_fround+3
  4744  01F0  0830               	movf	?___flmul+2,w
  4745  01F1  00CA               	movwf	?_fround+2
  4746  01F2  082F               	movf	?___flmul+1,w
  4747  01F3  00C9               	movwf	?_fround+1
  4748  01F4  082E               	movf	?___flmul,w
  4749  01F5  00C8               	movwf	?_fround
  4750  01F6  2A3A               	goto	l282
  4751  01F7                     l2705:
  4752                           
  4753                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4754  01F7  303F               	movlw	63
  4755  01F8  00B1               	movwf	___flmul@b+3
  4756  01F9  3000               	movlw	0
  4757  01FA  00B0               	movwf	___flmul@b+2
  4758  01FB  3000               	movlw	0
  4759  01FC  00AF               	movwf	___flmul@b+1
  4760  01FD  3000               	movlw	0
  4761  01FE  00AE               	movwf	___flmul@b
  4762  01FF  085B               	movf	fround@prec,w
  4763  0200  00CC               	movwf	??_fround
  4764  0201  3001               	movlw	1
  4765  0202                     u4025:
  4766  0202  1003               	clrc
  4767  0203  0DCC               	rlf	??_fround,f
  4768  0204  3EFF               	addlw	-1
  4769  0205  1D03               	skipz
  4770  0206  2A02               	goto	u4025
  4771  0207  1003               	clrc
  4772  0208  0D4C               	rlf	??_fround,w
  4773  0209  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4774  020A  0084               	movwf	4
  4775  020B  120A  158A  200A  120A  118A  	fcall	stringdir
  4776  0210  00CD               	movwf	??_fround+1
  4777  0211  120A  158A  200A  120A  118A  	fcall	stringdir
  4778  0216  00CE               	movwf	??_fround+2
  4779  0217  120A  158A  200A  120A  118A  	fcall	stringdir
  4780  021C  00CF               	movwf	??_fround+3
  4781  021D  120A  158A  200A  120A  118A  	fcall	stringdir
  4782  0222  00D0               	movwf	??_fround+4
  4783  0223  0850               	movf	??_fround+4,w
  4784  0224  00B5               	movwf	___flmul@a+3
  4785  0225  084F               	movf	??_fround+3,w
  4786  0226  00B4               	movwf	___flmul@a+2
  4787  0227  084E               	movf	??_fround+2,w
  4788  0228  00B3               	movwf	___flmul@a+1
  4789  0229  084D               	movf	??_fround+1,w
  4790  022A  00B2               	movwf	___flmul@a
  4791  022B  120A  158A  249F  120A  118A  	fcall	___flmul
  4792  0230  1283               	bcf	3,5	;RP0=0, select bank0
  4793  0231  1303               	bcf	3,6	;RP1=0, select bank0
  4794  0232  0831               	movf	?___flmul+3,w
  4795  0233  00CB               	movwf	?_fround+3
  4796  0234  0830               	movf	?___flmul+2,w
  4797  0235  00CA               	movwf	?_fround+2
  4798  0236  082F               	movf	?___flmul+1,w
  4799  0237  00C9               	movwf	?_fround+1
  4800  0238  082E               	movf	?___flmul,w
  4801  0239  00C8               	movwf	?_fround
  4802  023A                     l282:
  4803  023A  0008               	return
  4804  023B                     __end_of_fround:
  4805                           
  4806                           	psect	text6
  4807  1CF0                     __ptext6:	
  4808 ;; *************** function ___lwmod *****************
  4809 ;; Defined at:
  4810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  divisor         2    0[COMMON] unsigned int 
  4813 ;;  dividend        2    2[COMMON] unsigned int 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  counter         1    5[COMMON] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  2    0[COMMON] unsigned int 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         4       0       0       0       0
  4826 ;;      Locals:         1       0       0       0       0
  4827 ;;      Temps:          1       0       0       0       0
  4828 ;;      Totals:         6       0       0       0       0
  4829 ;;Total ram usage:        6 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_fround
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function ___lwmod
  4840  1CF0                     ___lwmod:
  4841  1CF0                     l2301:	
  4842                           ;incstack = 0
  4843                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4844                           
  4845  1CF0  0870               	movf	___lwmod@divisor,w
  4846  1CF1  0471               	iorwf	___lwmod@divisor+1,w
  4847  1CF2  1903               	btfsc	3,2
  4848  1CF3  2CF5               	goto	u3041
  4849  1CF4  2CF6               	goto	u3040
  4850  1CF5                     u3041:
  4851  1CF5  2D25               	goto	l2319
  4852  1CF6                     u3040:
  4853  1CF6                     l2303:
  4854  1CF6  01F5               	clrf	___lwmod@counter
  4855  1CF7  0AF5               	incf	___lwmod@counter,f
  4856  1CF8  2D04               	goto	l2309
  4857  1CF9                     l2305:
  4858  1CF9  3001               	movlw	1
  4859  1CFA                     u3055:
  4860  1CFA  1003               	clrc
  4861  1CFB  0DF0               	rlf	___lwmod@divisor,f
  4862  1CFC  0DF1               	rlf	___lwmod@divisor+1,f
  4863  1CFD  3EFF               	addlw	-1
  4864  1CFE  1D03               	skipz
  4865  1CFF  2CFA               	goto	u3055
  4866  1D00                     l2307:
  4867  1D00  3001               	movlw	1
  4868  1D01  00F4               	movwf	??___lwmod
  4869  1D02  0874               	movf	??___lwmod,w
  4870  1D03  07F5               	addwf	___lwmod@counter,f
  4871  1D04                     l2309:
  4872  1D04  1FF1               	btfss	___lwmod@divisor+1,7
  4873  1D05  2D07               	goto	u3061
  4874  1D06  2D08               	goto	u3060
  4875  1D07                     u3061:
  4876  1D07  2CF9               	goto	l2305
  4877  1D08                     u3060:
  4878  1D08                     l2311:
  4879  1D08  0871               	movf	___lwmod@divisor+1,w
  4880  1D09  0273               	subwf	___lwmod@dividend+1,w
  4881  1D0A  1D03               	skipz
  4882  1D0B  2D0E               	goto	u3075
  4883  1D0C  0870               	movf	___lwmod@divisor,w
  4884  1D0D  0272               	subwf	___lwmod@dividend,w
  4885  1D0E                     u3075:
  4886  1D0E  1C03               	skipc
  4887  1D0F  2D11               	goto	u3071
  4888  1D10  2D12               	goto	u3070
  4889  1D11                     u3071:
  4890  1D11  2D18               	goto	l2315
  4891  1D12                     u3070:
  4892  1D12                     l2313:
  4893  1D12  0870               	movf	___lwmod@divisor,w
  4894  1D13  02F2               	subwf	___lwmod@dividend,f
  4895  1D14  0871               	movf	___lwmod@divisor+1,w
  4896  1D15  1C03               	skipc
  4897  1D16  03F3               	decf	___lwmod@dividend+1,f
  4898  1D17  02F3               	subwf	___lwmod@dividend+1,f
  4899  1D18                     l2315:
  4900  1D18  3001               	movlw	1
  4901  1D19                     u3085:
  4902  1D19  1003               	clrc
  4903  1D1A  0CF1               	rrf	___lwmod@divisor+1,f
  4904  1D1B  0CF0               	rrf	___lwmod@divisor,f
  4905  1D1C  3EFF               	addlw	-1
  4906  1D1D  1D03               	skipz
  4907  1D1E  2D19               	goto	u3085
  4908  1D1F                     l2317:
  4909  1D1F  3001               	movlw	1
  4910  1D20  02F5               	subwf	___lwmod@counter,f
  4911  1D21  1D03               	btfss	3,2
  4912  1D22  2D24               	goto	u3091
  4913  1D23  2D25               	goto	u3090
  4914  1D24                     u3091:
  4915  1D24  2D08               	goto	l2311
  4916  1D25                     u3090:
  4917  1D25                     l2319:
  4918  1D25  0873               	movf	___lwmod@dividend+1,w
  4919  1D26  00F1               	movwf	?___lwmod+1
  4920  1D27  0872               	movf	___lwmod@dividend,w
  4921  1D28  00F0               	movwf	?___lwmod
  4922  1D29                     l665:
  4923  1D29  0008               	return
  4924  1D2A                     __end_of___lwmod:
  4925                           
  4926                           	psect	text7
  4927  1DAE                     __ptext7:	
  4928 ;; *************** function ___lwdiv *****************
  4929 ;; Defined at:
  4930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  divisor         2    6[COMMON] unsigned int 
  4933 ;;  dividend        2    8[COMMON] unsigned int 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  quotient        2   11[COMMON] unsigned int 
  4936 ;;  counter         1   13[COMMON] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  2    6[COMMON] unsigned int 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4946 ;;      Params:         4       0       0       0       0
  4947 ;;      Locals:         3       0       0       0       0
  4948 ;;      Temps:          1       0       0       0       0
  4949 ;;      Totals:         8       0       0       0       0
  4950 ;;Total ram usage:        8 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;;		_fround
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function ___lwdiv
  4962  1DAE                     ___lwdiv:
  4963  1DAE                     l2275:	
  4964                           ;incstack = 0
  4965                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4966                           
  4967  1DAE  01FB               	clrf	___lwdiv@quotient
  4968  1DAF  01FC               	clrf	___lwdiv@quotient+1
  4969  1DB0                     l2277:
  4970  1DB0  0876               	movf	___lwdiv@divisor,w
  4971  1DB1  0477               	iorwf	___lwdiv@divisor+1,w
  4972  1DB2  1903               	btfsc	3,2
  4973  1DB3  2DB5               	goto	u2971
  4974  1DB4  2DB6               	goto	u2970
  4975  1DB5                     u2971:
  4976  1DB5  2DED               	goto	l2297
  4977  1DB6                     u2970:
  4978  1DB6                     l2279:
  4979  1DB6  01FD               	clrf	___lwdiv@counter
  4980  1DB7  0AFD               	incf	___lwdiv@counter,f
  4981  1DB8  2DC4               	goto	l2285
  4982  1DB9                     l2281:
  4983  1DB9  3001               	movlw	1
  4984  1DBA                     u2985:
  4985  1DBA  1003               	clrc
  4986  1DBB  0DF6               	rlf	___lwdiv@divisor,f
  4987  1DBC  0DF7               	rlf	___lwdiv@divisor+1,f
  4988  1DBD  3EFF               	addlw	-1
  4989  1DBE  1D03               	skipz
  4990  1DBF  2DBA               	goto	u2985
  4991  1DC0                     l2283:
  4992  1DC0  3001               	movlw	1
  4993  1DC1  00FA               	movwf	??___lwdiv
  4994  1DC2  087A               	movf	??___lwdiv,w
  4995  1DC3  07FD               	addwf	___lwdiv@counter,f
  4996  1DC4                     l2285:
  4997  1DC4  1FF7               	btfss	___lwdiv@divisor+1,7
  4998  1DC5  2DC7               	goto	u2991
  4999  1DC6  2DC8               	goto	u2990
  5000  1DC7                     u2991:
  5001  1DC7  2DB9               	goto	l2281
  5002  1DC8                     u2990:
  5003  1DC8                     l2287:
  5004  1DC8  3001               	movlw	1
  5005  1DC9                     u3005:
  5006  1DC9  1003               	clrc
  5007  1DCA  0DFB               	rlf	___lwdiv@quotient,f
  5008  1DCB  0DFC               	rlf	___lwdiv@quotient+1,f
  5009  1DCC  3EFF               	addlw	-1
  5010  1DCD  1D03               	skipz
  5011  1DCE  2DC9               	goto	u3005
  5012  1DCF  0877               	movf	___lwdiv@divisor+1,w
  5013  1DD0  0279               	subwf	___lwdiv@dividend+1,w
  5014  1DD1  1D03               	skipz
  5015  1DD2  2DD5               	goto	u3015
  5016  1DD3  0876               	movf	___lwdiv@divisor,w
  5017  1DD4  0278               	subwf	___lwdiv@dividend,w
  5018  1DD5                     u3015:
  5019  1DD5  1C03               	skipc
  5020  1DD6  2DD8               	goto	u3011
  5021  1DD7  2DD9               	goto	u3010
  5022  1DD8                     u3011:
  5023  1DD8  2DE0               	goto	l2293
  5024  1DD9                     u3010:
  5025  1DD9                     l2289:
  5026  1DD9  0876               	movf	___lwdiv@divisor,w
  5027  1DDA  02F8               	subwf	___lwdiv@dividend,f
  5028  1DDB  0877               	movf	___lwdiv@divisor+1,w
  5029  1DDC  1C03               	skipc
  5030  1DDD  03F9               	decf	___lwdiv@dividend+1,f
  5031  1DDE  02F9               	subwf	___lwdiv@dividend+1,f
  5032  1DDF                     l2291:
  5033  1DDF  147B               	bsf	___lwdiv@quotient,0
  5034  1DE0                     l2293:
  5035  1DE0  3001               	movlw	1
  5036  1DE1                     u3025:
  5037  1DE1  1003               	clrc
  5038  1DE2  0CF7               	rrf	___lwdiv@divisor+1,f
  5039  1DE3  0CF6               	rrf	___lwdiv@divisor,f
  5040  1DE4  3EFF               	addlw	-1
  5041  1DE5  1D03               	skipz
  5042  1DE6  2DE1               	goto	u3025
  5043  1DE7                     l2295:
  5044  1DE7  3001               	movlw	1
  5045  1DE8  02FD               	subwf	___lwdiv@counter,f
  5046  1DE9  1D03               	btfss	3,2
  5047  1DEA  2DEC               	goto	u3031
  5048  1DEB  2DED               	goto	u3030
  5049  1DEC                     u3031:
  5050  1DEC  2DC8               	goto	l2287
  5051  1DED                     u3030:
  5052  1DED                     l2297:
  5053  1DED  087C               	movf	___lwdiv@quotient+1,w
  5054  1DEE  00F7               	movwf	?___lwdiv+1
  5055  1DEF  087B               	movf	___lwdiv@quotient,w
  5056  1DF0  00F6               	movwf	?___lwdiv
  5057  1DF1                     l655:
  5058  1DF1  0008               	return
  5059  1DF2                     __end_of___lwdiv:
  5060                           
  5061                           	psect	text8
  5062  0C9F                     __ptext8:	
  5063 ;; *************** function ___flmul *****************
  5064 ;; Defined at:
  5065 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcmul.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  b               4   14[BANK0 ] unsigned int 
  5068 ;;  a               4   18[BANK0 ] unsigned int 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  prod            4   34[BANK0 ] struct .
  5071 ;;  grs             4   28[BANK0 ] unsigned long 
  5072 ;;  temp            2   38[BANK0 ] struct .
  5073 ;;  bexp            1   33[BANK0 ] unsigned char 
  5074 ;;  aexp            1   32[BANK0 ] unsigned char 
  5075 ;;  sign            1   27[BANK0 ] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  4   14[BANK0 ] unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5085 ;;      Params:         0       8       0       0       0
  5086 ;;      Locals:         0      13       0       0       0
  5087 ;;      Temps:          0       5       0       0       0
  5088 ;;      Totals:         0      26       0       0       0
  5089 ;;Total ram usage:       26 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    1
  5092 ;; This function calls:
  5093 ;;		__Umul8_16
  5094 ;; This function is called by:
  5095 ;;		_main
  5096 ;;		_fround
  5097 ;;		_scale
  5098 ;;		_sprintf
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function ___flmul
  5104  0C9F                     ___flmul:
  5105  0C9F                     l2517:	
  5106                           ;incstack = 0
  5107                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5108                           
  5109  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0CA1  0831               	movf	___flmul@b+3,w
  5112  0CA2  3980               	andlw	128
  5113  0CA3  00B6               	movwf	??___flmul
  5114  0CA4  0836               	movf	??___flmul,w
  5115  0CA5  00BB               	movwf	___flmul@sign
  5116  0CA6                     l2519:
  5117  0CA6  0831               	movf	___flmul@b+3,w
  5118  0CA7  00B6               	movwf	??___flmul
  5119  0CA8  0736               	addwf	??___flmul,w
  5120  0CA9  00B7               	movwf	??___flmul+1
  5121  0CAA  0837               	movf	??___flmul+1,w
  5122  0CAB  00C1               	movwf	___flmul@bexp
  5123  0CAC                     l2521:
  5124  0CAC  1FB0               	btfss	___flmul@b+2,7
  5125  0CAD  2CAF               	goto	u3561
  5126  0CAE  2CB0               	goto	u3560
  5127  0CAF                     u3561:
  5128  0CAF  2CB1               	goto	l2525
  5129  0CB0                     u3560:
  5130  0CB0                     l2523:
  5131  0CB0  1441               	bsf	___flmul@bexp,0
  5132  0CB1                     l2525:
  5133  0CB1  0841               	movf	___flmul@bexp,w
  5134  0CB2  1903               	btfsc	3,2
  5135  0CB3  2CB5               	goto	u3571
  5136  0CB4  2CB6               	goto	u3570
  5137  0CB5                     u3571:
  5138  0CB5  2CC5               	goto	l2533
  5139  0CB6                     u3570:
  5140  0CB6                     l2527:
  5141  0CB6  0A41               	incf	___flmul@bexp,w
  5142  0CB7  1D03               	btfss	3,2
  5143  0CB8  2CBA               	goto	u3581
  5144  0CB9  2CBB               	goto	u3580
  5145  0CBA                     u3581:
  5146  0CBA  2CC3               	goto	l2531
  5147  0CBB                     u3580:
  5148  0CBB                     l2529:
  5149  0CBB  3000               	movlw	0
  5150  0CBC  00B1               	movwf	___flmul@b+3
  5151  0CBD  3000               	movlw	0
  5152  0CBE  00B0               	movwf	___flmul@b+2
  5153  0CBF  3000               	movlw	0
  5154  0CC0  00AF               	movwf	___flmul@b+1
  5155  0CC1  3000               	movlw	0
  5156  0CC2  00AE               	movwf	___flmul@b
  5157  0CC3                     l2531:
  5158  0CC3  17B0               	bsf	___flmul@b+2,7
  5159  0CC4  2CCD               	goto	l2535
  5160  0CC5                     l2533:
  5161  0CC5  3000               	movlw	0
  5162  0CC6  00B1               	movwf	___flmul@b+3
  5163  0CC7  3000               	movlw	0
  5164  0CC8  00B0               	movwf	___flmul@b+2
  5165  0CC9  3000               	movlw	0
  5166  0CCA  00AF               	movwf	___flmul@b+1
  5167  0CCB  3000               	movlw	0
  5168  0CCC  00AE               	movwf	___flmul@b
  5169  0CCD                     l2535:
  5170  0CCD  0835               	movf	___flmul@a+3,w
  5171  0CCE  3980               	andlw	128
  5172  0CCF  00B6               	movwf	??___flmul
  5173  0CD0  0836               	movf	??___flmul,w
  5174  0CD1  06BB               	xorwf	___flmul@sign,f
  5175  0CD2                     l2537:
  5176  0CD2  0835               	movf	___flmul@a+3,w
  5177  0CD3  00B6               	movwf	??___flmul
  5178  0CD4  0736               	addwf	??___flmul,w
  5179  0CD5  00B7               	movwf	??___flmul+1
  5180  0CD6  0837               	movf	??___flmul+1,w
  5181  0CD7  00C0               	movwf	___flmul@aexp
  5182  0CD8                     l2539:
  5183  0CD8  1FB4               	btfss	___flmul@a+2,7
  5184  0CD9  2CDB               	goto	u3591
  5185  0CDA  2CDC               	goto	u3590
  5186  0CDB                     u3591:
  5187  0CDB  2CDD               	goto	l2543
  5188  0CDC                     u3590:
  5189  0CDC                     l2541:
  5190  0CDC  1440               	bsf	___flmul@aexp,0
  5191  0CDD                     l2543:
  5192  0CDD  0840               	movf	___flmul@aexp,w
  5193  0CDE  1903               	btfsc	3,2
  5194  0CDF  2CE1               	goto	u3601
  5195  0CE0  2CE2               	goto	u3600
  5196  0CE1                     u3601:
  5197  0CE1  2CF1               	goto	l2551
  5198  0CE2                     u3600:
  5199  0CE2                     l2545:
  5200  0CE2  0A40               	incf	___flmul@aexp,w
  5201  0CE3  1D03               	btfss	3,2
  5202  0CE4  2CE6               	goto	u3611
  5203  0CE5  2CE7               	goto	u3610
  5204  0CE6                     u3611:
  5205  0CE6  2CEF               	goto	l2549
  5206  0CE7                     u3610:
  5207  0CE7                     l2547:
  5208  0CE7  3000               	movlw	0
  5209  0CE8  00B5               	movwf	___flmul@a+3
  5210  0CE9  3000               	movlw	0
  5211  0CEA  00B4               	movwf	___flmul@a+2
  5212  0CEB  3000               	movlw	0
  5213  0CEC  00B3               	movwf	___flmul@a+1
  5214  0CED  3000               	movlw	0
  5215  0CEE  00B2               	movwf	___flmul@a
  5216  0CEF                     l2549:
  5217  0CEF  17B4               	bsf	___flmul@a+2,7
  5218  0CF0  2CF9               	goto	l2553
  5219  0CF1                     l2551:
  5220  0CF1  3000               	movlw	0
  5221  0CF2  00B5               	movwf	___flmul@a+3
  5222  0CF3  3000               	movlw	0
  5223  0CF4  00B4               	movwf	___flmul@a+2
  5224  0CF5  3000               	movlw	0
  5225  0CF6  00B3               	movwf	___flmul@a+1
  5226  0CF7  3000               	movlw	0
  5227  0CF8  00B2               	movwf	___flmul@a
  5228  0CF9                     l2553:
  5229  0CF9  0840               	movf	___flmul@aexp,w
  5230  0CFA  1903               	btfsc	3,2
  5231  0CFB  2CFD               	goto	u3621
  5232  0CFC  2CFE               	goto	u3620
  5233  0CFD                     u3621:
  5234  0CFD  2D03               	goto	l2557
  5235  0CFE                     u3620:
  5236  0CFE                     l2555:
  5237  0CFE  0841               	movf	___flmul@bexp,w
  5238  0CFF  1D03               	btfss	3,2
  5239  0D00  2D02               	goto	u3631
  5240  0D01  2D03               	goto	u3630
  5241  0D02                     u3631:
  5242  0D02  2D0C               	goto	l2561
  5243  0D03                     u3630:
  5244  0D03                     l2557:
  5245  0D03  3000               	movlw	0
  5246  0D04  00B1               	movwf	?___flmul+3
  5247  0D05  3000               	movlw	0
  5248  0D06  00B0               	movwf	?___flmul+2
  5249  0D07  3000               	movlw	0
  5250  0D08  00AF               	movwf	?___flmul+1
  5251  0D09  3000               	movlw	0
  5252  0D0A  00AE               	movwf	?___flmul
  5253  0D0B  2FFF               	goto	l772
  5254  0D0C                     l2561:
  5255  0D0C  082E               	movf	___flmul@b,w
  5256  0D0D  00B6               	movwf	??___flmul
  5257  0D0E  0836               	movf	??___flmul,w
  5258  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5259  0D10  0834               	movf	___flmul@a+2,w
  5260  0D11  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5261  0D16  0871               	movf	?__Umul8_16+1,w
  5262  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5263  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5264  0D19  00C7               	movwf	___flmul@temp+1
  5265  0D1A  0870               	movf	?__Umul8_16,w
  5266  0D1B  00C6               	movwf	___flmul@temp
  5267  0D1C                     l2563:
  5268  0D1C  0846               	movf	___flmul@temp,w
  5269  0D1D  00B6               	movwf	??___flmul
  5270  0D1E  01B7               	clrf	??___flmul+1
  5271  0D1F  01B8               	clrf	??___flmul+2
  5272  0D20  01B9               	clrf	??___flmul+3
  5273  0D21  0839               	movf	??___flmul+3,w
  5274  0D22  00BF               	movwf	___flmul@grs+3
  5275  0D23  0838               	movf	??___flmul+2,w
  5276  0D24  00BE               	movwf	___flmul@grs+2
  5277  0D25  0837               	movf	??___flmul+1,w
  5278  0D26  00BD               	movwf	___flmul@grs+1
  5279  0D27  0836               	movf	??___flmul,w
  5280  0D28  00BC               	movwf	___flmul@grs
  5281  0D29                     l2565:
  5282  0D29  0847               	movf	___flmul@temp+1,w
  5283  0D2A  00B6               	movwf	??___flmul
  5284  0D2B  01B7               	clrf	??___flmul+1
  5285  0D2C  01B8               	clrf	??___flmul+2
  5286  0D2D  01B9               	clrf	??___flmul+3
  5287  0D2E  0839               	movf	??___flmul+3,w
  5288  0D2F  00C5               	movwf	___flmul@prod+3
  5289  0D30  0838               	movf	??___flmul+2,w
  5290  0D31  00C4               	movwf	___flmul@prod+2
  5291  0D32  0837               	movf	??___flmul+1,w
  5292  0D33  00C3               	movwf	___flmul@prod+1
  5293  0D34  0836               	movf	??___flmul,w
  5294  0D35  00C2               	movwf	___flmul@prod
  5295  0D36  082F               	movf	___flmul@b+1,w
  5296  0D37  00B6               	movwf	??___flmul
  5297  0D38  0836               	movf	??___flmul,w
  5298  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5299  0D3A  0833               	movf	___flmul@a+1,w
  5300  0D3B  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5301  0D40  0871               	movf	?__Umul8_16+1,w
  5302  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5303  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5304  0D43  00C7               	movwf	___flmul@temp+1
  5305  0D44  0870               	movf	?__Umul8_16,w
  5306  0D45  00C6               	movwf	___flmul@temp
  5307  0D46                     l2567:
  5308  0D46  0846               	movf	___flmul@temp,w
  5309  0D47  00B6               	movwf	??___flmul
  5310  0D48  01B7               	clrf	??___flmul+1
  5311  0D49  01B8               	clrf	??___flmul+2
  5312  0D4A  01B9               	clrf	??___flmul+3
  5313  0D4B  0836               	movf	??___flmul,w
  5314  0D4C  07BC               	addwf	___flmul@grs,f
  5315  0D4D  0837               	movf	??___flmul+1,w
  5316  0D4E  1103               	clrz
  5317  0D4F  1803               	skipnc
  5318  0D50  3E01               	addlw	1
  5319  0D51  1903               	skipnz
  5320  0D52  2D54               	goto	u3641
  5321  0D53  07BD               	addwf	___flmul@grs+1,f
  5322  0D54                     u3641:
  5323  0D54  0838               	movf	??___flmul+2,w
  5324  0D55  1103               	clrz
  5325  0D56  1803               	skipnc
  5326  0D57  3E01               	addlw	1
  5327  0D58  1903               	skipnz
  5328  0D59  2D5B               	goto	u3642
  5329  0D5A  07BE               	addwf	___flmul@grs+2,f
  5330  0D5B                     u3642:
  5331  0D5B  0839               	movf	??___flmul+3,w
  5332  0D5C  1103               	clrz
  5333  0D5D  1803               	skipnc
  5334  0D5E  3E01               	addlw	1
  5335  0D5F  1903               	skipnz
  5336  0D60  2D62               	goto	u3643
  5337  0D61  07BF               	addwf	___flmul@grs+3,f
  5338  0D62                     u3643:
  5339  0D62                     l2569:
  5340  0D62  0847               	movf	___flmul@temp+1,w
  5341  0D63  00B6               	movwf	??___flmul
  5342  0D64  01B7               	clrf	??___flmul+1
  5343  0D65  01B8               	clrf	??___flmul+2
  5344  0D66  01B9               	clrf	??___flmul+3
  5345  0D67  0836               	movf	??___flmul,w
  5346  0D68  07C2               	addwf	___flmul@prod,f
  5347  0D69  0837               	movf	??___flmul+1,w
  5348  0D6A  1103               	clrz
  5349  0D6B  1803               	skipnc
  5350  0D6C  3E01               	addlw	1
  5351  0D6D  1903               	skipnz
  5352  0D6E  2D70               	goto	u3651
  5353  0D6F  07C3               	addwf	___flmul@prod+1,f
  5354  0D70                     u3651:
  5355  0D70  0838               	movf	??___flmul+2,w
  5356  0D71  1103               	clrz
  5357  0D72  1803               	skipnc
  5358  0D73  3E01               	addlw	1
  5359  0D74  1903               	skipnz
  5360  0D75  2D77               	goto	u3652
  5361  0D76  07C4               	addwf	___flmul@prod+2,f
  5362  0D77                     u3652:
  5363  0D77  0839               	movf	??___flmul+3,w
  5364  0D78  1103               	clrz
  5365  0D79  1803               	skipnc
  5366  0D7A  3E01               	addlw	1
  5367  0D7B  1903               	skipnz
  5368  0D7C  2D7E               	goto	u3653
  5369  0D7D  07C5               	addwf	___flmul@prod+3,f
  5370  0D7E                     u3653:
  5371  0D7E  0830               	movf	___flmul@b+2,w
  5372  0D7F  00B6               	movwf	??___flmul
  5373  0D80  0836               	movf	??___flmul,w
  5374  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5375  0D82  0832               	movf	___flmul@a,w
  5376  0D83  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5377  0D88  0871               	movf	?__Umul8_16+1,w
  5378  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5379  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5380  0D8B  00C7               	movwf	___flmul@temp+1
  5381  0D8C  0870               	movf	?__Umul8_16,w
  5382  0D8D  00C6               	movwf	___flmul@temp
  5383  0D8E                     l2571:
  5384  0D8E  0846               	movf	___flmul@temp,w
  5385  0D8F  00B6               	movwf	??___flmul
  5386  0D90  01B7               	clrf	??___flmul+1
  5387  0D91  01B8               	clrf	??___flmul+2
  5388  0D92  01B9               	clrf	??___flmul+3
  5389  0D93  0836               	movf	??___flmul,w
  5390  0D94  07BC               	addwf	___flmul@grs,f
  5391  0D95  0837               	movf	??___flmul+1,w
  5392  0D96  1103               	clrz
  5393  0D97  1803               	skipnc
  5394  0D98  3E01               	addlw	1
  5395  0D99  1903               	skipnz
  5396  0D9A  2D9C               	goto	u3661
  5397  0D9B  07BD               	addwf	___flmul@grs+1,f
  5398  0D9C                     u3661:
  5399  0D9C  0838               	movf	??___flmul+2,w
  5400  0D9D  1103               	clrz
  5401  0D9E  1803               	skipnc
  5402  0D9F  3E01               	addlw	1
  5403  0DA0  1903               	skipnz
  5404  0DA1  2DA3               	goto	u3662
  5405  0DA2  07BE               	addwf	___flmul@grs+2,f
  5406  0DA3                     u3662:
  5407  0DA3  0839               	movf	??___flmul+3,w
  5408  0DA4  1103               	clrz
  5409  0DA5  1803               	skipnc
  5410  0DA6  3E01               	addlw	1
  5411  0DA7  1903               	skipnz
  5412  0DA8  2DAA               	goto	u3663
  5413  0DA9  07BF               	addwf	___flmul@grs+3,f
  5414  0DAA                     u3663:
  5415  0DAA                     l2573:
  5416  0DAA  0847               	movf	___flmul@temp+1,w
  5417  0DAB  00B6               	movwf	??___flmul
  5418  0DAC  01B7               	clrf	??___flmul+1
  5419  0DAD  01B8               	clrf	??___flmul+2
  5420  0DAE  01B9               	clrf	??___flmul+3
  5421  0DAF  0836               	movf	??___flmul,w
  5422  0DB0  07C2               	addwf	___flmul@prod,f
  5423  0DB1  0837               	movf	??___flmul+1,w
  5424  0DB2  1103               	clrz
  5425  0DB3  1803               	skipnc
  5426  0DB4  3E01               	addlw	1
  5427  0DB5  1903               	skipnz
  5428  0DB6  2DB8               	goto	u3671
  5429  0DB7  07C3               	addwf	___flmul@prod+1,f
  5430  0DB8                     u3671:
  5431  0DB8  0838               	movf	??___flmul+2,w
  5432  0DB9  1103               	clrz
  5433  0DBA  1803               	skipnc
  5434  0DBB  3E01               	addlw	1
  5435  0DBC  1903               	skipnz
  5436  0DBD  2DBF               	goto	u3672
  5437  0DBE  07C4               	addwf	___flmul@prod+2,f
  5438  0DBF                     u3672:
  5439  0DBF  0839               	movf	??___flmul+3,w
  5440  0DC0  1103               	clrz
  5441  0DC1  1803               	skipnc
  5442  0DC2  3E01               	addlw	1
  5443  0DC3  1903               	skipnz
  5444  0DC4  2DC6               	goto	u3673
  5445  0DC5  07C5               	addwf	___flmul@prod+3,f
  5446  0DC6                     u3673:
  5447  0DC6                     l2575:
  5448  0DC6  3008               	movlw	8
  5449  0DC7  00B6               	movwf	??___flmul
  5450  0DC8                     u3685:
  5451  0DC8  1003               	clrc
  5452  0DC9  0DBC               	rlf	___flmul@grs,f
  5453  0DCA  0DBD               	rlf	___flmul@grs+1,f
  5454  0DCB  0DBE               	rlf	___flmul@grs+2,f
  5455  0DCC  0DBF               	rlf	___flmul@grs+3,f
  5456  0DCD  0BB6               	decfsz	??___flmul,f
  5457  0DCE  2DC8               	goto	u3685
  5458  0DCF                     l2577:
  5459  0DCF  082F               	movf	___flmul@b+1,w
  5460  0DD0  00B6               	movwf	??___flmul
  5461  0DD1  0836               	movf	??___flmul,w
  5462  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5463  0DD3  0832               	movf	___flmul@a,w
  5464  0DD4  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5465  0DD9  0871               	movf	?__Umul8_16+1,w
  5466  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5467  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5468  0DDC  00C7               	movwf	___flmul@temp+1
  5469  0DDD  0870               	movf	?__Umul8_16,w
  5470  0DDE  00C6               	movwf	___flmul@temp
  5471  0DDF                     l2579:
  5472  0DDF  0846               	movf	___flmul@temp,w
  5473  0DE0  00B6               	movwf	??___flmul
  5474  0DE1  0847               	movf	___flmul@temp+1,w
  5475  0DE2  00B7               	movwf	??___flmul+1
  5476  0DE3  01B8               	clrf	??___flmul+2
  5477  0DE4  01B9               	clrf	??___flmul+3
  5478  0DE5  0836               	movf	??___flmul,w
  5479  0DE6  07BC               	addwf	___flmul@grs,f
  5480  0DE7  0837               	movf	??___flmul+1,w
  5481  0DE8  1103               	clrz
  5482  0DE9  1803               	skipnc
  5483  0DEA  3E01               	addlw	1
  5484  0DEB  1903               	skipnz
  5485  0DEC  2DEE               	goto	u3691
  5486  0DED  07BD               	addwf	___flmul@grs+1,f
  5487  0DEE                     u3691:
  5488  0DEE  0838               	movf	??___flmul+2,w
  5489  0DEF  1103               	clrz
  5490  0DF0  1803               	skipnc
  5491  0DF1  3E01               	addlw	1
  5492  0DF2  1903               	skipnz
  5493  0DF3  2DF5               	goto	u3692
  5494  0DF4  07BE               	addwf	___flmul@grs+2,f
  5495  0DF5                     u3692:
  5496  0DF5  0839               	movf	??___flmul+3,w
  5497  0DF6  1103               	clrz
  5498  0DF7  1803               	skipnc
  5499  0DF8  3E01               	addlw	1
  5500  0DF9  1903               	skipnz
  5501  0DFA  2DFC               	goto	u3693
  5502  0DFB  07BF               	addwf	___flmul@grs+3,f
  5503  0DFC                     u3693:
  5504  0DFC                     l2581:
  5505  0DFC  082E               	movf	___flmul@b,w
  5506  0DFD  00B6               	movwf	??___flmul
  5507  0DFE  0836               	movf	??___flmul,w
  5508  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5509  0E00  0833               	movf	___flmul@a+1,w
  5510  0E01  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5511  0E06  0871               	movf	?__Umul8_16+1,w
  5512  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5513  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5514  0E09  00C7               	movwf	___flmul@temp+1
  5515  0E0A  0870               	movf	?__Umul8_16,w
  5516  0E0B  00C6               	movwf	___flmul@temp
  5517  0E0C                     l2583:
  5518  0E0C  0846               	movf	___flmul@temp,w
  5519  0E0D  00B6               	movwf	??___flmul
  5520  0E0E  0847               	movf	___flmul@temp+1,w
  5521  0E0F  00B7               	movwf	??___flmul+1
  5522  0E10  01B8               	clrf	??___flmul+2
  5523  0E11  01B9               	clrf	??___flmul+3
  5524  0E12  0836               	movf	??___flmul,w
  5525  0E13  07BC               	addwf	___flmul@grs,f
  5526  0E14  0837               	movf	??___flmul+1,w
  5527  0E15  1103               	clrz
  5528  0E16  1803               	skipnc
  5529  0E17  3E01               	addlw	1
  5530  0E18  1903               	skipnz
  5531  0E19  2E1B               	goto	u3701
  5532  0E1A  07BD               	addwf	___flmul@grs+1,f
  5533  0E1B                     u3701:
  5534  0E1B  0838               	movf	??___flmul+2,w
  5535  0E1C  1103               	clrz
  5536  0E1D  1803               	skipnc
  5537  0E1E  3E01               	addlw	1
  5538  0E1F  1903               	skipnz
  5539  0E20  2E22               	goto	u3702
  5540  0E21  07BE               	addwf	___flmul@grs+2,f
  5541  0E22                     u3702:
  5542  0E22  0839               	movf	??___flmul+3,w
  5543  0E23  1103               	clrz
  5544  0E24  1803               	skipnc
  5545  0E25  3E01               	addlw	1
  5546  0E26  1903               	skipnz
  5547  0E27  2E29               	goto	u3703
  5548  0E28  07BF               	addwf	___flmul@grs+3,f
  5549  0E29                     u3703:
  5550  0E29                     l2585:
  5551  0E29  3008               	movlw	8
  5552  0E2A  00B6               	movwf	??___flmul
  5553  0E2B                     u3715:
  5554  0E2B  1003               	clrc
  5555  0E2C  0DBC               	rlf	___flmul@grs,f
  5556  0E2D  0DBD               	rlf	___flmul@grs+1,f
  5557  0E2E  0DBE               	rlf	___flmul@grs+2,f
  5558  0E2F  0DBF               	rlf	___flmul@grs+3,f
  5559  0E30  0BB6               	decfsz	??___flmul,f
  5560  0E31  2E2B               	goto	u3715
  5561  0E32  082E               	movf	___flmul@b,w
  5562  0E33  00B6               	movwf	??___flmul
  5563  0E34  0836               	movf	??___flmul,w
  5564  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5565  0E36  0832               	movf	___flmul@a,w
  5566  0E37  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5567  0E3C  0871               	movf	?__Umul8_16+1,w
  5568  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5569  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5570  0E3F  00C7               	movwf	___flmul@temp+1
  5571  0E40  0870               	movf	?__Umul8_16,w
  5572  0E41  00C6               	movwf	___flmul@temp
  5573  0E42                     l2587:
  5574  0E42  0846               	movf	___flmul@temp,w
  5575  0E43  00B6               	movwf	??___flmul
  5576  0E44  0847               	movf	___flmul@temp+1,w
  5577  0E45  00B7               	movwf	??___flmul+1
  5578  0E46  01B8               	clrf	??___flmul+2
  5579  0E47  01B9               	clrf	??___flmul+3
  5580  0E48  0836               	movf	??___flmul,w
  5581  0E49  07BC               	addwf	___flmul@grs,f
  5582  0E4A  0837               	movf	??___flmul+1,w
  5583  0E4B  1103               	clrz
  5584  0E4C  1803               	skipnc
  5585  0E4D  3E01               	addlw	1
  5586  0E4E  1903               	skipnz
  5587  0E4F  2E51               	goto	u3721
  5588  0E50  07BD               	addwf	___flmul@grs+1,f
  5589  0E51                     u3721:
  5590  0E51  0838               	movf	??___flmul+2,w
  5591  0E52  1103               	clrz
  5592  0E53  1803               	skipnc
  5593  0E54  3E01               	addlw	1
  5594  0E55  1903               	skipnz
  5595  0E56  2E58               	goto	u3722
  5596  0E57  07BE               	addwf	___flmul@grs+2,f
  5597  0E58                     u3722:
  5598  0E58  0839               	movf	??___flmul+3,w
  5599  0E59  1103               	clrz
  5600  0E5A  1803               	skipnc
  5601  0E5B  3E01               	addlw	1
  5602  0E5C  1903               	skipnz
  5603  0E5D  2E5F               	goto	u3723
  5604  0E5E  07BF               	addwf	___flmul@grs+3,f
  5605  0E5F                     u3723:
  5606  0E5F                     l2589:
  5607  0E5F  082F               	movf	___flmul@b+1,w
  5608  0E60  00B6               	movwf	??___flmul
  5609  0E61  0836               	movf	??___flmul,w
  5610  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5611  0E63  0834               	movf	___flmul@a+2,w
  5612  0E64  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5613  0E69  0871               	movf	?__Umul8_16+1,w
  5614  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5616  0E6C  00C7               	movwf	___flmul@temp+1
  5617  0E6D  0870               	movf	?__Umul8_16,w
  5618  0E6E  00C6               	movwf	___flmul@temp
  5619  0E6F  0846               	movf	___flmul@temp,w
  5620  0E70  00B6               	movwf	??___flmul
  5621  0E71  0847               	movf	___flmul@temp+1,w
  5622  0E72  00B7               	movwf	??___flmul+1
  5623  0E73  01B8               	clrf	??___flmul+2
  5624  0E74  01B9               	clrf	??___flmul+3
  5625  0E75  0836               	movf	??___flmul,w
  5626  0E76  07C2               	addwf	___flmul@prod,f
  5627  0E77  0837               	movf	??___flmul+1,w
  5628  0E78  1103               	clrz
  5629  0E79  1803               	skipnc
  5630  0E7A  3E01               	addlw	1
  5631  0E7B  1903               	skipnz
  5632  0E7C  2E7E               	goto	u3731
  5633  0E7D  07C3               	addwf	___flmul@prod+1,f
  5634  0E7E                     u3731:
  5635  0E7E  0838               	movf	??___flmul+2,w
  5636  0E7F  1103               	clrz
  5637  0E80  1803               	skipnc
  5638  0E81  3E01               	addlw	1
  5639  0E82  1903               	skipnz
  5640  0E83  2E85               	goto	u3732
  5641  0E84  07C4               	addwf	___flmul@prod+2,f
  5642  0E85                     u3732:
  5643  0E85  0839               	movf	??___flmul+3,w
  5644  0E86  1103               	clrz
  5645  0E87  1803               	skipnc
  5646  0E88  3E01               	addlw	1
  5647  0E89  1903               	skipnz
  5648  0E8A  2E8C               	goto	u3733
  5649  0E8B  07C5               	addwf	___flmul@prod+3,f
  5650  0E8C                     u3733:
  5651  0E8C                     l2591:
  5652  0E8C  0830               	movf	___flmul@b+2,w
  5653  0E8D  00B6               	movwf	??___flmul
  5654  0E8E  0836               	movf	??___flmul,w
  5655  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5656  0E90  0833               	movf	___flmul@a+1,w
  5657  0E91  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5658  0E96  0871               	movf	?__Umul8_16+1,w
  5659  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5660  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0E99  00C7               	movwf	___flmul@temp+1
  5662  0E9A  0870               	movf	?__Umul8_16,w
  5663  0E9B  00C6               	movwf	___flmul@temp
  5664  0E9C                     l2593:
  5665  0E9C  0846               	movf	___flmul@temp,w
  5666  0E9D  00B6               	movwf	??___flmul
  5667  0E9E  0847               	movf	___flmul@temp+1,w
  5668  0E9F  00B7               	movwf	??___flmul+1
  5669  0EA0  01B8               	clrf	??___flmul+2
  5670  0EA1  01B9               	clrf	??___flmul+3
  5671  0EA2  0836               	movf	??___flmul,w
  5672  0EA3  07C2               	addwf	___flmul@prod,f
  5673  0EA4  0837               	movf	??___flmul+1,w
  5674  0EA5  1103               	clrz
  5675  0EA6  1803               	skipnc
  5676  0EA7  3E01               	addlw	1
  5677  0EA8  1903               	skipnz
  5678  0EA9  2EAB               	goto	u3741
  5679  0EAA  07C3               	addwf	___flmul@prod+1,f
  5680  0EAB                     u3741:
  5681  0EAB  0838               	movf	??___flmul+2,w
  5682  0EAC  1103               	clrz
  5683  0EAD  1803               	skipnc
  5684  0EAE  3E01               	addlw	1
  5685  0EAF  1903               	skipnz
  5686  0EB0  2EB2               	goto	u3742
  5687  0EB1  07C4               	addwf	___flmul@prod+2,f
  5688  0EB2                     u3742:
  5689  0EB2  0839               	movf	??___flmul+3,w
  5690  0EB3  1103               	clrz
  5691  0EB4  1803               	skipnc
  5692  0EB5  3E01               	addlw	1
  5693  0EB6  1903               	skipnz
  5694  0EB7  2EB9               	goto	u3743
  5695  0EB8  07C5               	addwf	___flmul@prod+3,f
  5696  0EB9                     u3743:
  5697  0EB9  0830               	movf	___flmul@b+2,w
  5698  0EBA  00B6               	movwf	??___flmul
  5699  0EBB  0836               	movf	??___flmul,w
  5700  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5701  0EBD  0834               	movf	___flmul@a+2,w
  5702  0EBE  120A  118A  2009  120A  158A  	fcall	__Umul8_16
  5703  0EC3  0871               	movf	?__Umul8_16+1,w
  5704  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5705  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5706  0EC6  00C7               	movwf	___flmul@temp+1
  5707  0EC7  0870               	movf	?__Umul8_16,w
  5708  0EC8  00C6               	movwf	___flmul@temp
  5709  0EC9                     l2595:
  5710  0EC9  0846               	movf	___flmul@temp,w
  5711  0ECA  00B6               	movwf	??___flmul
  5712  0ECB  0847               	movf	___flmul@temp+1,w
  5713  0ECC  00B7               	movwf	??___flmul+1
  5714  0ECD  01B8               	clrf	??___flmul+2
  5715  0ECE  01B9               	clrf	??___flmul+3
  5716  0ECF  3008               	movlw	8
  5717  0ED0                     u3755:
  5718  0ED0  1003               	clrc
  5719  0ED1  0DB6               	rlf	??___flmul,f
  5720  0ED2  0DB7               	rlf	??___flmul+1,f
  5721  0ED3  0DB8               	rlf	??___flmul+2,f
  5722  0ED4  0DB9               	rlf	??___flmul+3,f
  5723  0ED5                     u3750:
  5724  0ED5  3EFF               	addlw	-1
  5725  0ED6  1D03               	skipz
  5726  0ED7  2ED0               	goto	u3755
  5727  0ED8  0836               	movf	??___flmul,w
  5728  0ED9  07C2               	addwf	___flmul@prod,f
  5729  0EDA  0837               	movf	??___flmul+1,w
  5730  0EDB  1103               	clrz
  5731  0EDC  1803               	skipnc
  5732  0EDD  3E01               	addlw	1
  5733  0EDE  1903               	skipnz
  5734  0EDF  2EE1               	goto	u3761
  5735  0EE0  07C3               	addwf	___flmul@prod+1,f
  5736  0EE1                     u3761:
  5737  0EE1  0838               	movf	??___flmul+2,w
  5738  0EE2  1103               	clrz
  5739  0EE3  1803               	skipnc
  5740  0EE4  3E01               	addlw	1
  5741  0EE5  1903               	skipnz
  5742  0EE6  2EE8               	goto	u3762
  5743  0EE7  07C4               	addwf	___flmul@prod+2,f
  5744  0EE8                     u3762:
  5745  0EE8  0839               	movf	??___flmul+3,w
  5746  0EE9  1103               	clrz
  5747  0EEA  1803               	skipnc
  5748  0EEB  3E01               	addlw	1
  5749  0EEC  1903               	skipnz
  5750  0EED  2EEF               	goto	u3763
  5751  0EEE  07C5               	addwf	___flmul@prod+3,f
  5752  0EEF                     u3763:
  5753  0EEF                     l2597:
  5754  0EEF  083C               	movf	___flmul@grs,w
  5755  0EF0  00B6               	movwf	??___flmul
  5756  0EF1  083D               	movf	___flmul@grs+1,w
  5757  0EF2  00B7               	movwf	??___flmul+1
  5758  0EF3  083E               	movf	___flmul@grs+2,w
  5759  0EF4  00B8               	movwf	??___flmul+2
  5760  0EF5  083F               	movf	___flmul@grs+3,w
  5761  0EF6  00B9               	movwf	??___flmul+3
  5762  0EF7  3018               	movlw	24
  5763  0EF8                     u3775:
  5764  0EF8  1003               	clrc
  5765  0EF9  0CB9               	rrf	??___flmul+3,f
  5766  0EFA  0CB8               	rrf	??___flmul+2,f
  5767  0EFB  0CB7               	rrf	??___flmul+1,f
  5768  0EFC  0CB6               	rrf	??___flmul,f
  5769  0EFD                     u3770:
  5770  0EFD  3EFF               	addlw	-1
  5771  0EFE  1D03               	skipz
  5772  0EFF  2EF8               	goto	u3775
  5773  0F00  0836               	movf	??___flmul,w
  5774  0F01  07C2               	addwf	___flmul@prod,f
  5775  0F02  0837               	movf	??___flmul+1,w
  5776  0F03  1103               	clrz
  5777  0F04  1803               	skipnc
  5778  0F05  3E01               	addlw	1
  5779  0F06  1903               	skipnz
  5780  0F07  2F09               	goto	u3781
  5781  0F08  07C3               	addwf	___flmul@prod+1,f
  5782  0F09                     u3781:
  5783  0F09  0838               	movf	??___flmul+2,w
  5784  0F0A  1103               	clrz
  5785  0F0B  1803               	skipnc
  5786  0F0C  3E01               	addlw	1
  5787  0F0D  1903               	skipnz
  5788  0F0E  2F10               	goto	u3782
  5789  0F0F  07C4               	addwf	___flmul@prod+2,f
  5790  0F10                     u3782:
  5791  0F10  0839               	movf	??___flmul+3,w
  5792  0F11  1103               	clrz
  5793  0F12  1803               	skipnc
  5794  0F13  3E01               	addlw	1
  5795  0F14  1903               	skipnz
  5796  0F15  2F17               	goto	u3783
  5797  0F16  07C5               	addwf	___flmul@prod+3,f
  5798  0F17                     u3783:
  5799  0F17                     l2599:
  5800  0F17  3008               	movlw	8
  5801  0F18  00B6               	movwf	??___flmul
  5802  0F19                     u3795:
  5803  0F19  1003               	clrc
  5804  0F1A  0DBC               	rlf	___flmul@grs,f
  5805  0F1B  0DBD               	rlf	___flmul@grs+1,f
  5806  0F1C  0DBE               	rlf	___flmul@grs+2,f
  5807  0F1D  0DBF               	rlf	___flmul@grs+3,f
  5808  0F1E  0BB6               	decfsz	??___flmul,f
  5809  0F1F  2F19               	goto	u3795
  5810  0F20                     l2601:
  5811  0F20  0841               	movf	___flmul@bexp,w
  5812  0F21  0740               	addwf	___flmul@aexp,w
  5813  0F22  00B6               	movwf	??___flmul
  5814  0F23  01B7               	clrf	??___flmul+1
  5815  0F24  0DB7               	rlf	??___flmul+1,f
  5816  0F25  0836               	movf	??___flmul,w
  5817  0F26  3E82               	addlw	130
  5818  0F27  00C6               	movwf	___flmul@temp
  5819  0F28  0837               	movf	??___flmul+1,w
  5820  0F29  1803               	skipnc
  5821  0F2A  3E01               	addlw	1
  5822  0F2B  3EFF               	addlw	255
  5823  0F2C  00C7               	movwf	___flmul@temp+1
  5824  0F2D  2F4B               	goto	l2613
  5825  0F2E                     l2603:
  5826  0F2E  3001               	movlw	1
  5827  0F2F  00B6               	movwf	??___flmul
  5828  0F30                     u3805:
  5829  0F30  1003               	clrc
  5830  0F31  0DC2               	rlf	___flmul@prod,f
  5831  0F32  0DC3               	rlf	___flmul@prod+1,f
  5832  0F33  0DC4               	rlf	___flmul@prod+2,f
  5833  0F34  0DC5               	rlf	___flmul@prod+3,f
  5834  0F35  0BB6               	decfsz	??___flmul,f
  5835  0F36  2F30               	goto	u3805
  5836  0F37                     l2605:
  5837  0F37  1FBF               	btfss	___flmul@grs+3,7
  5838  0F38  2F3A               	goto	u3811
  5839  0F39  2F3B               	goto	u3810
  5840  0F3A                     u3811:
  5841  0F3A  2F3C               	goto	l2609
  5842  0F3B                     u3810:
  5843  0F3B                     l2607:
  5844  0F3B  1442               	bsf	___flmul@prod,0
  5845  0F3C                     l2609:
  5846  0F3C  3001               	movlw	1
  5847  0F3D  00B6               	movwf	??___flmul
  5848  0F3E                     u3825:
  5849  0F3E  1003               	clrc
  5850  0F3F  0DBC               	rlf	___flmul@grs,f
  5851  0F40  0DBD               	rlf	___flmul@grs+1,f
  5852  0F41  0DBE               	rlf	___flmul@grs+2,f
  5853  0F42  0DBF               	rlf	___flmul@grs+3,f
  5854  0F43  0BB6               	decfsz	??___flmul,f
  5855  0F44  2F3E               	goto	u3825
  5856  0F45                     l2611:
  5857  0F45  30FF               	movlw	255
  5858  0F46  07C6               	addwf	___flmul@temp,f
  5859  0F47  1803               	skipnc
  5860  0F48  0AC7               	incf	___flmul@temp+1,f
  5861  0F49  30FF               	movlw	255
  5862  0F4A  07C7               	addwf	___flmul@temp+1,f
  5863  0F4B                     l2613:
  5864  0F4B  1FC4               	btfss	___flmul@prod+2,7
  5865  0F4C  2F4E               	goto	u3831
  5866  0F4D  2F4F               	goto	u3830
  5867  0F4E                     u3831:
  5868  0F4E  2F2E               	goto	l2603
  5869  0F4F                     u3830:
  5870  0F4F                     l2615:
  5871  0F4F  01C0               	clrf	___flmul@aexp
  5872  0F50                     l2617:
  5873  0F50  1FBF               	btfss	___flmul@grs+3,7
  5874  0F51  2F53               	goto	u3841
  5875  0F52  2F54               	goto	u3840
  5876  0F53                     u3841:
  5877  0F53  2F70               	goto	l2625
  5878  0F54                     u3840:
  5879  0F54                     l2619:
  5880  0F54  30FF               	movlw	255
  5881  0F55  053C               	andwf	___flmul@grs,w
  5882  0F56  00B6               	movwf	??___flmul
  5883  0F57  30FF               	movlw	255
  5884  0F58  053D               	andwf	___flmul@grs+1,w
  5885  0F59  00B7               	movwf	??___flmul+1
  5886  0F5A  30FF               	movlw	255
  5887  0F5B  053E               	andwf	___flmul@grs+2,w
  5888  0F5C  00B8               	movwf	??___flmul+2
  5889  0F5D  307F               	movlw	127
  5890  0F5E  053F               	andwf	___flmul@grs+3,w
  5891  0F5F  00B9               	movwf	??___flmul+3
  5892  0F60  0839               	movf	??___flmul+3,w
  5893  0F61  0438               	iorwf	??___flmul+2,w
  5894  0F62  0437               	iorwf	??___flmul+1,w
  5895  0F63  0436               	iorwf	??___flmul,w
  5896  0F64  1903               	skipnz
  5897  0F65  2F67               	goto	u3851
  5898  0F66  2F68               	goto	u3850
  5899  0F67                     u3851:
  5900  0F67  2F6B               	goto	l778
  5901  0F68                     u3850:
  5902  0F68                     l2621:
  5903  0F68  01C0               	clrf	___flmul@aexp
  5904  0F69  0AC0               	incf	___flmul@aexp,f
  5905  0F6A  2F70               	goto	l2625
  5906  0F6B                     l778:
  5907  0F6B  1C42               	btfss	___flmul@prod,0
  5908  0F6C  2F6E               	goto	u3861
  5909  0F6D  2F6F               	goto	u3860
  5910  0F6E                     u3861:
  5911  0F6E  2F70               	goto	l2625
  5912  0F6F                     u3860:
  5913  0F6F  2F68               	goto	l2621
  5914  0F70                     l2625:
  5915  0F70  0840               	movf	___flmul@aexp,w
  5916  0F71  1903               	btfsc	3,2
  5917  0F72  2F74               	goto	u3871
  5918  0F73  2F75               	goto	u3870
  5919  0F74                     u3871:
  5920  0F74  2FA6               	goto	l2635
  5921  0F75                     u3870:
  5922  0F75                     l2627:
  5923  0F75  3001               	movlw	1
  5924  0F76  07C2               	addwf	___flmul@prod,f
  5925  0F77  3000               	movlw	0
  5926  0F78  1803               	skipnc
  5927  0F79  3001               	movlw	1
  5928  0F7A  07C3               	addwf	___flmul@prod+1,f
  5929  0F7B  3000               	movlw	0
  5930  0F7C  1803               	skipnc
  5931  0F7D  3001               	movlw	1
  5932  0F7E  07C4               	addwf	___flmul@prod+2,f
  5933  0F7F  3000               	movlw	0
  5934  0F80  1803               	skipnc
  5935  0F81  3001               	movlw	1
  5936  0F82  07C5               	addwf	___flmul@prod+3,f
  5937  0F83                     l2629:
  5938  0F83  1C45               	btfss	___flmul@prod+3,0
  5939  0F84  2F86               	goto	u3881
  5940  0F85  2F87               	goto	u3880
  5941  0F86                     u3881:
  5942  0F86  2FA6               	goto	l2635
  5943  0F87                     u3880:
  5944  0F87                     l2631:
  5945  0F87  0842               	movf	___flmul@prod,w
  5946  0F88  00B6               	movwf	??___flmul
  5947  0F89  0843               	movf	___flmul@prod+1,w
  5948  0F8A  00B7               	movwf	??___flmul+1
  5949  0F8B  0844               	movf	___flmul@prod+2,w
  5950  0F8C  00B8               	movwf	??___flmul+2
  5951  0F8D  0845               	movf	___flmul@prod+3,w
  5952  0F8E  00B9               	movwf	??___flmul+3
  5953  0F8F  3001               	movlw	1
  5954  0F90  00BA               	movwf	??___flmul+4
  5955  0F91                     u3895:
  5956  0F91  0D39               	rlf	??___flmul+3,w
  5957  0F92  0CB9               	rrf	??___flmul+3,f
  5958  0F93  0CB8               	rrf	??___flmul+2,f
  5959  0F94  0CB7               	rrf	??___flmul+1,f
  5960  0F95  0CB6               	rrf	??___flmul,f
  5961  0F96                     u3890:
  5962  0F96  0BBA               	decfsz	??___flmul+4,f
  5963  0F97  2F91               	goto	u3895
  5964  0F98  0839               	movf	??___flmul+3,w
  5965  0F99  00C5               	movwf	___flmul@prod+3
  5966  0F9A  0838               	movf	??___flmul+2,w
  5967  0F9B  00C4               	movwf	___flmul@prod+2
  5968  0F9C  0837               	movf	??___flmul+1,w
  5969  0F9D  00C3               	movwf	___flmul@prod+1
  5970  0F9E  0836               	movf	??___flmul,w
  5971  0F9F  00C2               	movwf	___flmul@prod
  5972  0FA0                     l2633:
  5973  0FA0  3001               	movlw	1
  5974  0FA1  07C6               	addwf	___flmul@temp,f
  5975  0FA2  1803               	skipnc
  5976  0FA3  0AC7               	incf	___flmul@temp+1,f
  5977  0FA4  3000               	movlw	0
  5978  0FA5  07C7               	addwf	___flmul@temp+1,f
  5979  0FA6                     l2635:
  5980  0FA6  0847               	movf	___flmul@temp+1,w
  5981  0FA7  3A80               	xorlw	128
  5982  0FA8  00FF               	movwf	btemp+1
  5983  0FA9  3080               	movlw	128
  5984  0FAA  027F               	subwf	btemp+1,w
  5985  0FAB  1D03               	skipz
  5986  0FAC  2FAF               	goto	u3905
  5987  0FAD  30FF               	movlw	255
  5988  0FAE  0246               	subwf	___flmul@temp,w
  5989  0FAF                     u3905:
  5990  0FAF  1C03               	skipc
  5991  0FB0  2FB2               	goto	u3901
  5992  0FB1  2FB3               	goto	u3900
  5993  0FB2                     u3901:
  5994  0FB2  2FBE               	goto	l2639
  5995  0FB3                     u3900:
  5996  0FB3                     l2637:
  5997  0FB3  307F               	movlw	127
  5998  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5999  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6000  0FB6  00C5               	movwf	___flmul@prod+3
  6001  0FB7  3080               	movlw	128
  6002  0FB8  00C4               	movwf	___flmul@prod+2
  6003  0FB9  3000               	movlw	0
  6004  0FBA  00C3               	movwf	___flmul@prod+1
  6005  0FBB  3000               	movlw	0
  6006  0FBC  00C2               	movwf	___flmul@prod
  6007  0FBD  2FF3               	goto	l784
  6008  0FBE                     l2639:
  6009  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6011  0FC0  0847               	movf	___flmul@temp+1,w
  6012  0FC1  3A80               	xorlw	128
  6013  0FC2  00FF               	movwf	btemp+1
  6014  0FC3  3080               	movlw	128
  6015  0FC4  027F               	subwf	btemp+1,w
  6016  0FC5  1D03               	skipz
  6017  0FC6  2FC9               	goto	u3915
  6018  0FC7  3001               	movlw	1
  6019  0FC8  0246               	subwf	___flmul@temp,w
  6020  0FC9                     u3915:
  6021  0FC9  1803               	skipnc
  6022  0FCA  2FCC               	goto	u3911
  6023  0FCB  2FCD               	goto	u3910
  6024  0FCC                     u3911:
  6025  0FCC  2FD9               	goto	l2645
  6026  0FCD                     u3910:
  6027  0FCD                     l2641:
  6028  0FCD  3000               	movlw	0
  6029  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6030  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6031  0FD0  00C5               	movwf	___flmul@prod+3
  6032  0FD1  3000               	movlw	0
  6033  0FD2  00C4               	movwf	___flmul@prod+2
  6034  0FD3  3000               	movlw	0
  6035  0FD4  00C3               	movwf	___flmul@prod+1
  6036  0FD5  3000               	movlw	0
  6037  0FD6  00C2               	movwf	___flmul@prod
  6038  0FD7                     l2643:
  6039  0FD7  01BB               	clrf	___flmul@sign
  6040  0FD8  2FF3               	goto	l784
  6041  0FD9                     l2645:
  6042  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6043  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6044  0FDB  0846               	movf	___flmul@temp,w
  6045  0FDC  00B6               	movwf	??___flmul
  6046  0FDD  0836               	movf	??___flmul,w
  6047  0FDE  00C1               	movwf	___flmul@bexp
  6048  0FDF  30FF               	movlw	255
  6049  0FE0  05C2               	andwf	___flmul@prod,f
  6050  0FE1  30FF               	movlw	255
  6051  0FE2  05C3               	andwf	___flmul@prod+1,f
  6052  0FE3  307F               	movlw	127
  6053  0FE4  05C4               	andwf	___flmul@prod+2,f
  6054  0FE5  3000               	movlw	0
  6055  0FE6  05C5               	andwf	___flmul@prod+3,f
  6056  0FE7                     l2647:
  6057  0FE7  1C41               	btfss	___flmul@bexp,0
  6058  0FE8  2FEA               	goto	u3921
  6059  0FE9  2FEB               	goto	u3920
  6060  0FEA                     u3921:
  6061  0FEA  2FEC               	goto	l2651
  6062  0FEB                     u3920:
  6063  0FEB                     l2649:
  6064  0FEB  17C4               	bsf	___flmul@prod+2,7
  6065  0FEC                     l2651:
  6066  0FEC  0841               	movf	___flmul@bexp,w
  6067  0FED  00B6               	movwf	??___flmul
  6068  0FEE  1003               	clrc
  6069  0FEF  0C36               	rrf	??___flmul,w
  6070  0FF0  00B7               	movwf	??___flmul+1
  6071  0FF1  0837               	movf	??___flmul+1,w
  6072  0FF2  00C5               	movwf	___flmul@prod+3
  6073  0FF3                     l784:
  6074  0FF3  083B               	movf	___flmul@sign,w
  6075  0FF4  00B6               	movwf	??___flmul
  6076  0FF5  0836               	movf	??___flmul,w
  6077  0FF6  04C5               	iorwf	___flmul@prod+3,f
  6078  0FF7                     l2653:
  6079  0FF7  0845               	movf	___flmul@prod+3,w
  6080  0FF8  00B1               	movwf	?___flmul+3
  6081  0FF9  0844               	movf	___flmul@prod+2,w
  6082  0FFA  00B0               	movwf	?___flmul+2
  6083  0FFB  0843               	movf	___flmul@prod+1,w
  6084  0FFC  00AF               	movwf	?___flmul+1
  6085  0FFD  0842               	movf	___flmul@prod,w
  6086  0FFE  00AE               	movwf	?___flmul
  6087  0FFF                     l772:
  6088  0FFF  0008               	return
  6089  1000                     __end_of___flmul:
  6090                           
  6091                           	psect	text9
  6092  0009                     __ptext9:	
  6093 ;; *************** function __Umul8_16 *****************
  6094 ;; Defined at:
  6095 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul8_16.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  multiplier      1    wreg     unsigned char 
  6098 ;;  multiplicand    1    0[COMMON] unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  multiplier      1    8[COMMON] unsigned char 
  6101 ;;  word_mpld       2    6[COMMON] unsigned int 
  6102 ;;  product         2    4[COMMON] unsigned int 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  2    0[COMMON] unsigned int 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6112 ;;      Params:         2       0       0       0       0
  6113 ;;      Locals:         5       0       0       0       0
  6114 ;;      Temps:          2       0       0       0       0
  6115 ;;      Totals:         9       0       0       0       0
  6116 ;;Total ram usage:        9 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		___flmul
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function __Umul8_16
  6127  0009                     __Umul8_16:
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6131                           ;__Umul8_16@multiplier stored from wreg
  6132  0009  00F8               	movwf	__Umul8_16@multiplier
  6133  000A                     l2169:
  6134  000A  01F4               	clrf	__Umul8_16@product
  6135  000B  01F5               	clrf	__Umul8_16@product+1
  6136  000C                     l2171:
  6137  000C  0870               	movf	__Umul8_16@multiplicand,w
  6138  000D  00F2               	movwf	??__Umul8_16
  6139  000E  01F3               	clrf	??__Umul8_16+1
  6140  000F  0872               	movf	??__Umul8_16,w
  6141  0010  00F6               	movwf	__Umul8_16@word_mpld
  6142  0011  0873               	movf	??__Umul8_16+1,w
  6143  0012  00F7               	movwf	__Umul8_16@word_mpld+1
  6144  0013                     l2173:
  6145  0013  1C78               	btfss	__Umul8_16@multiplier,0
  6146  0014  2816               	goto	u2711
  6147  0015  2817               	goto	u2710
  6148  0016                     u2711:
  6149  0016  281D               	goto	l791
  6150  0017                     u2710:
  6151  0017                     l2175:
  6152  0017  0876               	movf	__Umul8_16@word_mpld,w
  6153  0018  07F4               	addwf	__Umul8_16@product,f
  6154  0019  1803               	skipnc
  6155  001A  0AF5               	incf	__Umul8_16@product+1,f
  6156  001B  0877               	movf	__Umul8_16@word_mpld+1,w
  6157  001C  07F5               	addwf	__Umul8_16@product+1,f
  6158  001D                     l791:
  6159  001D  3001               	movlw	1
  6160  001E                     u2725:
  6161  001E  1003               	clrc
  6162  001F  0DF6               	rlf	__Umul8_16@word_mpld,f
  6163  0020  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6164  0021  3EFF               	addlw	-1
  6165  0022  1D03               	skipz
  6166  0023  281E               	goto	u2725
  6167  0024  1003               	clrc
  6168  0025  0CF8               	rrf	__Umul8_16@multiplier,f
  6169  0026                     l2177:
  6170  0026  0878               	movf	__Umul8_16@multiplier,w
  6171  0027  1D03               	btfss	3,2
  6172  0028  282A               	goto	u2731
  6173  0029  282B               	goto	u2730
  6174  002A                     u2731:
  6175  002A  2813               	goto	l2173
  6176  002B                     u2730:
  6177  002B                     l2179:
  6178  002B  0875               	movf	__Umul8_16@product+1,w
  6179  002C  00F1               	movwf	?__Umul8_16+1
  6180  002D  0874               	movf	__Umul8_16@product,w
  6181  002E  00F0               	movwf	?__Umul8_16
  6182  002F                     l793:
  6183  002F  0008               	return
  6184  0030                     __end_of__Umul8_16:
  6185                           
  6186                           	psect	text10
  6187  124C                     __ptext10:	
  6188 ;; *************** function __tdiv_to_l_ *****************
  6189 ;; Defined at:
  6190 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftdivl.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  f1              4    0[COMMON] float 
  6193 ;;  f2              4    4[COMMON] float 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  quot            4    0[BANK0 ] unsigned long 
  6196 ;;  exp1            1    5[BANK0 ] unsigned char 
  6197 ;;  cntr            1    4[BANK0 ] unsigned char 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  4    0[COMMON] unsigned long 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6207 ;;      Params:         8       0       0       0       0
  6208 ;;      Locals:         0       6       0       0       0
  6209 ;;      Temps:          4       0       0       0       0
  6210 ;;      Totals:        12       6       0       0       0
  6211 ;;Total ram usage:       18 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_sprintf
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           
  6221                           ;psect for function __tdiv_to_l_
  6222  124C                     __tdiv_to_l_:
  6223  124C                     l2749:	
  6224                           ;incstack = 0
  6225                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6226                           
  6227  124C  0870               	movf	__tdiv_to_l_@f1,w
  6228  124D  00F8               	movwf	??__tdiv_to_l_
  6229  124E  0871               	movf	__tdiv_to_l_@f1+1,w
  6230  124F  00F9               	movwf	??__tdiv_to_l_+1
  6231  1250  0872               	movf	__tdiv_to_l_@f1+2,w
  6232  1251  00FA               	movwf	??__tdiv_to_l_+2
  6233  1252  1003               	clrc
  6234  1253  0D79               	rlf	??__tdiv_to_l_+1,w
  6235  1254  0D7A               	rlf	??__tdiv_to_l_+2,w
  6236  1255  00FB               	movwf	??__tdiv_to_l_+3
  6237  1256  087B               	movf	??__tdiv_to_l_+3,w
  6238  1257  1283               	bcf	3,5	;RP0=0, select bank0
  6239  1258  1303               	bcf	3,6	;RP1=0, select bank0
  6240  1259  00A5               	movwf	__tdiv_to_l_@exp1
  6241  125A  0825               	movf	__tdiv_to_l_@exp1,w
  6242  125B  1D03               	btfss	3,2
  6243  125C  2A5E               	goto	u4201
  6244  125D  2A5F               	goto	u4200
  6245  125E                     u4201:
  6246  125E  2A68               	goto	l2755
  6247  125F                     u4200:
  6248  125F                     l2751:
  6249  125F  3000               	movlw	0
  6250  1260  00F3               	movwf	?__tdiv_to_l_+3
  6251  1261  3000               	movlw	0
  6252  1262  00F2               	movwf	?__tdiv_to_l_+2
  6253  1263  3000               	movlw	0
  6254  1264  00F1               	movwf	?__tdiv_to_l_+1
  6255  1265  3000               	movlw	0
  6256  1266  00F0               	movwf	?__tdiv_to_l_
  6257  1267  2B08               	goto	l566
  6258  1268                     l2755:
  6259  1268  0874               	movf	__tdiv_to_l_@f2,w
  6260  1269  00F8               	movwf	??__tdiv_to_l_
  6261  126A  0875               	movf	__tdiv_to_l_@f2+1,w
  6262  126B  00F9               	movwf	??__tdiv_to_l_+1
  6263  126C  0876               	movf	__tdiv_to_l_@f2+2,w
  6264  126D  00FA               	movwf	??__tdiv_to_l_+2
  6265  126E  1003               	clrc
  6266  126F  0D79               	rlf	??__tdiv_to_l_+1,w
  6267  1270  0D7A               	rlf	??__tdiv_to_l_+2,w
  6268  1271  00FB               	movwf	??__tdiv_to_l_+3
  6269  1272  087B               	movf	??__tdiv_to_l_+3,w
  6270  1273  00A4               	movwf	__tdiv_to_l_@cntr
  6271  1274  0824               	movf	__tdiv_to_l_@cntr,w
  6272  1275  1D03               	btfss	3,2
  6273  1276  2A78               	goto	u4211
  6274  1277  2A79               	goto	u4210
  6275  1278                     u4211:
  6276  1278  2A7A               	goto	l567
  6277  1279                     u4210:
  6278  1279  2A5F               	goto	l2751
  6279  127A                     l567:
  6280  127A  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6281  127B                     l2761:
  6282  127B  30FF               	movlw	255
  6283  127C  05F0               	andwf	__tdiv_to_l_@f1,f
  6284  127D  30FF               	movlw	255
  6285  127E  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6286  127F  3000               	movlw	0
  6287  1280  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6288  1281                     l2763:
  6289  1281  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6290  1282  30FF               	movlw	255
  6291  1283  05F4               	andwf	__tdiv_to_l_@f2,f
  6292  1284  30FF               	movlw	255
  6293  1285  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6294  1286  3000               	movlw	0
  6295  1287  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6296  1288  3000               	movlw	0
  6297  1289  00A3               	movwf	__tdiv_to_l_@quot+3
  6298  128A  3000               	movlw	0
  6299  128B  00A2               	movwf	__tdiv_to_l_@quot+2
  6300  128C  3000               	movlw	0
  6301  128D  00A1               	movwf	__tdiv_to_l_@quot+1
  6302  128E  3000               	movlw	0
  6303  128F  00A0               	movwf	__tdiv_to_l_@quot
  6304  1290                     l2765:
  6305  1290  307F               	movlw	127
  6306  1291  02A5               	subwf	__tdiv_to_l_@exp1,f
  6307  1292                     l2767:
  6308  1292  3098               	movlw	152
  6309  1293  0724               	addwf	__tdiv_to_l_@cntr,w
  6310  1294  00F8               	movwf	??__tdiv_to_l_
  6311  1295  0878               	movf	??__tdiv_to_l_,w
  6312  1296  02A5               	subwf	__tdiv_to_l_@exp1,f
  6313  1297  3018               	movlw	24
  6314  1298  00F8               	movwf	??__tdiv_to_l_
  6315  1299  0878               	movf	??__tdiv_to_l_,w
  6316  129A  00A4               	movwf	__tdiv_to_l_@cntr
  6317  129B                     l2769:
  6318  129B  3001               	movlw	1
  6319  129C  00F8               	movwf	??__tdiv_to_l_
  6320  129D                     u4225:
  6321  129D  1003               	clrc
  6322  129E  0DA0               	rlf	__tdiv_to_l_@quot,f
  6323  129F  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6324  12A0  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6325  12A1  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6326  12A2  0BF8               	decfsz	??__tdiv_to_l_,f
  6327  12A3  2A9D               	goto	u4225
  6328  12A4                     l2771:
  6329  12A4  0876               	movf	__tdiv_to_l_@f2+2,w
  6330  12A5  0272               	subwf	__tdiv_to_l_@f1+2,w
  6331  12A6  1D03               	skipz
  6332  12A7  2AAE               	goto	u4235
  6333  12A8  0875               	movf	__tdiv_to_l_@f2+1,w
  6334  12A9  0271               	subwf	__tdiv_to_l_@f1+1,w
  6335  12AA  1D03               	skipz
  6336  12AB  2AAE               	goto	u4235
  6337  12AC  0874               	movf	__tdiv_to_l_@f2,w
  6338  12AD  0270               	subwf	__tdiv_to_l_@f1,w
  6339  12AE                     u4235:
  6340  12AE  1C03               	skipc
  6341  12AF  2AB1               	goto	u4231
  6342  12B0  2AB2               	goto	u4230
  6343  12B1                     u4231:
  6344  12B1  2ABD               	goto	l2777
  6345  12B2                     u4230:
  6346  12B2                     l2773:
  6347  12B2  0874               	movf	__tdiv_to_l_@f2,w
  6348  12B3  02F0               	subwf	__tdiv_to_l_@f1,f
  6349  12B4  0875               	movf	__tdiv_to_l_@f2+1,w
  6350  12B5  1C03               	skipc
  6351  12B6  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6352  12B7  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6353  12B8  0876               	movf	__tdiv_to_l_@f2+2,w
  6354  12B9  1C03               	skipc
  6355  12BA  0A76               	incf	__tdiv_to_l_@f2+2,w
  6356  12BB  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6357  12BC                     l2775:
  6358  12BC  1420               	bsf	__tdiv_to_l_@quot,0
  6359  12BD                     l2777:
  6360  12BD  3001               	movlw	1
  6361  12BE                     u4245:
  6362  12BE  1003               	clrc
  6363  12BF  0DF0               	rlf	__tdiv_to_l_@f1,f
  6364  12C0  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6365  12C1  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6366  12C2  3EFF               	addlw	-1
  6367  12C3  1D03               	skipz
  6368  12C4  2ABE               	goto	u4245
  6369  12C5                     l2779:
  6370  12C5  3001               	movlw	1
  6371  12C6  02A4               	subwf	__tdiv_to_l_@cntr,f
  6372  12C7  1D03               	btfss	3,2
  6373  12C8  2ACA               	goto	u4251
  6374  12C9  2ACB               	goto	u4250
  6375  12CA                     u4251:
  6376  12CA  2A9B               	goto	l2769
  6377  12CB                     u4250:
  6378  12CB                     l570:
  6379  12CB  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6380  12CC  2ACE               	goto	u4261
  6381  12CD  2ACF               	goto	u4260
  6382  12CE                     u4261:
  6383  12CE  2AE9               	goto	l2789
  6384  12CF                     u4260:
  6385  12CF                     l2781:
  6386  12CF  0825               	movf	__tdiv_to_l_@exp1,w
  6387  12D0  3A80               	xorlw	128
  6388  12D1  3E97               	addlw	151
  6389  12D2  1803               	skipnc
  6390  12D3  2AD5               	goto	u4271
  6391  12D4  2AD6               	goto	u4270
  6392  12D5                     u4271:
  6393  12D5  2AD7               	goto	l2787
  6394  12D6                     u4270:
  6395  12D6  2A5F               	goto	l2751
  6396  12D7                     l2787:
  6397  12D7  3001               	movlw	1
  6398  12D8                     u4285:
  6399  12D8  1003               	clrc
  6400  12D9  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6401  12DA  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6402  12DB  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6403  12DC  0CA0               	rrf	__tdiv_to_l_@quot,f
  6404  12DD  3EFF               	addlw	-1
  6405  12DE  1D03               	skipz
  6406  12DF  2AD8               	goto	u4285
  6407  12E0  3001               	movlw	1
  6408  12E1  00F8               	movwf	??__tdiv_to_l_
  6409  12E2  0878               	movf	??__tdiv_to_l_,w
  6410  12E3  07A5               	addwf	__tdiv_to_l_@exp1,f
  6411  12E4  1D03               	btfss	3,2
  6412  12E5  2AE7               	goto	u4291
  6413  12E6  2AE8               	goto	u4290
  6414  12E7                     u4291:
  6415  12E7  2AD7               	goto	l2787
  6416  12E8                     u4290:
  6417  12E8  2B00               	goto	l2797
  6418  12E9                     l2789:
  6419  12E9  3018               	movlw	24
  6420  12EA  0225               	subwf	__tdiv_to_l_@exp1,w
  6421  12EB  1C03               	skipc
  6422  12EC  2AEE               	goto	u4301
  6423  12ED  2AEF               	goto	u4300
  6424  12EE                     u4301:
  6425  12EE  2AFB               	goto	l577
  6426  12EF                     u4300:
  6427  12EF  2A5F               	goto	l2751
  6428  12F0                     l2795:
  6429  12F0  3001               	movlw	1
  6430  12F1  00F8               	movwf	??__tdiv_to_l_
  6431  12F2                     u4315:
  6432  12F2  1003               	clrc
  6433  12F3  0DA0               	rlf	__tdiv_to_l_@quot,f
  6434  12F4  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6435  12F5  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6436  12F6  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6437  12F7  0BF8               	decfsz	??__tdiv_to_l_,f
  6438  12F8  2AF2               	goto	u4315
  6439  12F9  3001               	movlw	1
  6440  12FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  6441  12FB                     l577:
  6442  12FB  0825               	movf	__tdiv_to_l_@exp1,w
  6443  12FC  1D03               	btfss	3,2
  6444  12FD  2AFF               	goto	u4321
  6445  12FE  2B00               	goto	u4320
  6446  12FF                     u4321:
  6447  12FF  2AF0               	goto	l2795
  6448  1300                     u4320:
  6449  1300                     l2797:
  6450  1300  0823               	movf	__tdiv_to_l_@quot+3,w
  6451  1301  00F3               	movwf	?__tdiv_to_l_+3
  6452  1302  0822               	movf	__tdiv_to_l_@quot+2,w
  6453  1303  00F2               	movwf	?__tdiv_to_l_+2
  6454  1304  0821               	movf	__tdiv_to_l_@quot+1,w
  6455  1305  00F1               	movwf	?__tdiv_to_l_+1
  6456  1306  0820               	movf	__tdiv_to_l_@quot,w
  6457  1307  00F0               	movwf	?__tdiv_to_l_
  6458  1308                     l566:
  6459  1308  0008               	return
  6460  1309                     __end_of__tdiv_to_l_:
  6461                           
  6462                           	psect	text11
  6463  1309                     __ptext11:	
  6464 ;; *************** function __div_to_l_ *****************
  6465 ;; Defined at:
  6466 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fldivl.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  f1              4    0[COMMON] unsigned long 
  6469 ;;  f2              4    4[COMMON] unsigned long 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  quot            4    0[BANK0 ] unsigned long 
  6472 ;;  exp1            1    5[BANK0 ] unsigned char 
  6473 ;;  cntr            1    4[BANK0 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  4    0[COMMON] unsigned long 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6483 ;;      Params:         8       0       0       0       0
  6484 ;;      Locals:         0       6       0       0       0
  6485 ;;      Temps:          1       0       0       0       0
  6486 ;;      Totals:         9       6       0       0       0
  6487 ;;Total ram usage:       15 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_sprintf
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           
  6497                           ;psect for function __div_to_l_
  6498  1309                     __div_to_l_:
  6499  1309                     l2801:	
  6500                           ;incstack = 0
  6501                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6502                           
  6503  1309  1003               	clrc
  6504  130A  0D72               	rlf	__div_to_l_@f1+2,w
  6505  130B  0D73               	rlf	__div_to_l_@f1+3,w
  6506  130C  00F8               	movwf	??__div_to_l_
  6507  130D  0878               	movf	??__div_to_l_,w
  6508  130E  1283               	bcf	3,5	;RP0=0, select bank0
  6509  130F  1303               	bcf	3,6	;RP1=0, select bank0
  6510  1310  00A5               	movwf	__div_to_l_@exp1
  6511  1311  0825               	movf	__div_to_l_@exp1,w
  6512  1312  1D03               	btfss	3,2
  6513  1313  2B15               	goto	u4331
  6514  1314  2B16               	goto	u4330
  6515  1315                     u4331:
  6516  1315  2B1F               	goto	l2807
  6517  1316                     u4330:
  6518  1316                     l2803:
  6519  1316  3000               	movlw	0
  6520  1317  00F3               	movwf	?__div_to_l_+3
  6521  1318  3000               	movlw	0
  6522  1319  00F2               	movwf	?__div_to_l_+2
  6523  131A  3000               	movlw	0
  6524  131B  00F1               	movwf	?__div_to_l_+1
  6525  131C  3000               	movlw	0
  6526  131D  00F0               	movwf	?__div_to_l_
  6527  131E  2BC6               	goto	l519
  6528  131F                     l2807:
  6529  131F  1003               	clrc
  6530  1320  0D76               	rlf	__div_to_l_@f2+2,w
  6531  1321  0D77               	rlf	__div_to_l_@f2+3,w
  6532  1322  00F8               	movwf	??__div_to_l_
  6533  1323  0878               	movf	??__div_to_l_,w
  6534  1324  00A4               	movwf	__div_to_l_@cntr
  6535  1325  0824               	movf	__div_to_l_@cntr,w
  6536  1326  1D03               	btfss	3,2
  6537  1327  2B29               	goto	u4341
  6538  1328  2B2A               	goto	u4340
  6539  1329                     u4341:
  6540  1329  2B2B               	goto	l520
  6541  132A                     u4340:
  6542  132A  2B16               	goto	l2803
  6543  132B                     l520:
  6544  132B  17F2               	bsf	__div_to_l_@f1+2,7
  6545  132C                     l2813:
  6546  132C  30FF               	movlw	255
  6547  132D  05F0               	andwf	__div_to_l_@f1,f
  6548  132E  30FF               	movlw	255
  6549  132F  05F1               	andwf	__div_to_l_@f1+1,f
  6550  1330  30FF               	movlw	255
  6551  1331  05F2               	andwf	__div_to_l_@f1+2,f
  6552  1332  3000               	movlw	0
  6553  1333  05F3               	andwf	__div_to_l_@f1+3,f
  6554  1334                     l2815:
  6555  1334  17F6               	bsf	__div_to_l_@f2+2,7
  6556  1335  30FF               	movlw	255
  6557  1336  05F4               	andwf	__div_to_l_@f2,f
  6558  1337  30FF               	movlw	255
  6559  1338  05F5               	andwf	__div_to_l_@f2+1,f
  6560  1339  30FF               	movlw	255
  6561  133A  05F6               	andwf	__div_to_l_@f2+2,f
  6562  133B  3000               	movlw	0
  6563  133C  05F7               	andwf	__div_to_l_@f2+3,f
  6564  133D  3000               	movlw	0
  6565  133E  00A3               	movwf	__div_to_l_@quot+3
  6566  133F  3000               	movlw	0
  6567  1340  00A2               	movwf	__div_to_l_@quot+2
  6568  1341  3000               	movlw	0
  6569  1342  00A1               	movwf	__div_to_l_@quot+1
  6570  1343  3000               	movlw	0
  6571  1344  00A0               	movwf	__div_to_l_@quot
  6572  1345                     l2817:
  6573  1345  307F               	movlw	127
  6574  1346  02A5               	subwf	__div_to_l_@exp1,f
  6575  1347                     l2819:
  6576  1347  30A0               	movlw	160
  6577  1348  0724               	addwf	__div_to_l_@cntr,w
  6578  1349  00F8               	movwf	??__div_to_l_
  6579  134A  0878               	movf	??__div_to_l_,w
  6580  134B  02A5               	subwf	__div_to_l_@exp1,f
  6581  134C  3020               	movlw	32
  6582  134D  00F8               	movwf	??__div_to_l_
  6583  134E  0878               	movf	??__div_to_l_,w
  6584  134F  00A4               	movwf	__div_to_l_@cntr
  6585  1350                     l2821:
  6586  1350  3001               	movlw	1
  6587  1351  00F8               	movwf	??__div_to_l_
  6588  1352                     u4355:
  6589  1352  1003               	clrc
  6590  1353  0DA0               	rlf	__div_to_l_@quot,f
  6591  1354  0DA1               	rlf	__div_to_l_@quot+1,f
  6592  1355  0DA2               	rlf	__div_to_l_@quot+2,f
  6593  1356  0DA3               	rlf	__div_to_l_@quot+3,f
  6594  1357  0BF8               	decfsz	??__div_to_l_,f
  6595  1358  2B52               	goto	u4355
  6596  1359                     l2823:
  6597  1359  0877               	movf	__div_to_l_@f2+3,w
  6598  135A  0273               	subwf	__div_to_l_@f1+3,w
  6599  135B  1D03               	skipz
  6600  135C  2B67               	goto	u4365
  6601  135D  0876               	movf	__div_to_l_@f2+2,w
  6602  135E  0272               	subwf	__div_to_l_@f1+2,w
  6603  135F  1D03               	skipz
  6604  1360  2B67               	goto	u4365
  6605  1361  0875               	movf	__div_to_l_@f2+1,w
  6606  1362  0271               	subwf	__div_to_l_@f1+1,w
  6607  1363  1D03               	skipz
  6608  1364  2B67               	goto	u4365
  6609  1365  0874               	movf	__div_to_l_@f2,w
  6610  1366  0270               	subwf	__div_to_l_@f1,w
  6611  1367                     u4365:
  6612  1367  1C03               	skipc
  6613  1368  2B6A               	goto	u4361
  6614  1369  2B6B               	goto	u4360
  6615  136A                     u4361:
  6616  136A  2B7A               	goto	l2829
  6617  136B                     u4360:
  6618  136B                     l2825:
  6619  136B  0874               	movf	__div_to_l_@f2,w
  6620  136C  02F0               	subwf	__div_to_l_@f1,f
  6621  136D  0875               	movf	__div_to_l_@f2+1,w
  6622  136E  1C03               	skipc
  6623  136F  0F75               	incfsz	__div_to_l_@f2+1,w
  6624  1370  02F1               	subwf	__div_to_l_@f1+1,f
  6625  1371  0876               	movf	__div_to_l_@f2+2,w
  6626  1372  1C03               	skipc
  6627  1373  0F76               	incfsz	__div_to_l_@f2+2,w
  6628  1374  02F2               	subwf	__div_to_l_@f1+2,f
  6629  1375  0877               	movf	__div_to_l_@f2+3,w
  6630  1376  1C03               	skipc
  6631  1377  0F77               	incfsz	__div_to_l_@f2+3,w
  6632  1378  02F3               	subwf	__div_to_l_@f1+3,f
  6633  1379                     l2827:
  6634  1379  1420               	bsf	__div_to_l_@quot,0
  6635  137A                     l2829:
  6636  137A  3001               	movlw	1
  6637  137B  00F8               	movwf	??__div_to_l_
  6638  137C                     u4375:
  6639  137C  1003               	clrc
  6640  137D  0DF0               	rlf	__div_to_l_@f1,f
  6641  137E  0DF1               	rlf	__div_to_l_@f1+1,f
  6642  137F  0DF2               	rlf	__div_to_l_@f1+2,f
  6643  1380  0DF3               	rlf	__div_to_l_@f1+3,f
  6644  1381  0BF8               	decfsz	??__div_to_l_,f
  6645  1382  2B7C               	goto	u4375
  6646  1383                     l2831:
  6647  1383  3001               	movlw	1
  6648  1384  02A4               	subwf	__div_to_l_@cntr,f
  6649  1385  1D03               	btfss	3,2
  6650  1386  2B88               	goto	u4381
  6651  1387  2B89               	goto	u4380
  6652  1388                     u4381:
  6653  1388  2B50               	goto	l2821
  6654  1389                     u4380:
  6655  1389                     l523:
  6656  1389  1FA5               	btfss	__div_to_l_@exp1,7
  6657  138A  2B8C               	goto	u4391
  6658  138B  2B8D               	goto	u4390
  6659  138C                     u4391:
  6660  138C  2BA7               	goto	l2841
  6661  138D                     u4390:
  6662  138D                     l2833:
  6663  138D  0825               	movf	__div_to_l_@exp1,w
  6664  138E  3A80               	xorlw	128
  6665  138F  3E9F               	addlw	159
  6666  1390  1803               	skipnc
  6667  1391  2B93               	goto	u4401
  6668  1392  2B94               	goto	u4400
  6669  1393                     u4401:
  6670  1393  2B95               	goto	l2839
  6671  1394                     u4400:
  6672  1394  2B16               	goto	l2803
  6673  1395                     l2839:
  6674  1395  3001               	movlw	1
  6675  1396                     u4415:
  6676  1396  1003               	clrc
  6677  1397  0CA3               	rrf	__div_to_l_@quot+3,f
  6678  1398  0CA2               	rrf	__div_to_l_@quot+2,f
  6679  1399  0CA1               	rrf	__div_to_l_@quot+1,f
  6680  139A  0CA0               	rrf	__div_to_l_@quot,f
  6681  139B  3EFF               	addlw	-1
  6682  139C  1D03               	skipz
  6683  139D  2B96               	goto	u4415
  6684  139E  3001               	movlw	1
  6685  139F  00F8               	movwf	??__div_to_l_
  6686  13A0  0878               	movf	??__div_to_l_,w
  6687  13A1  07A5               	addwf	__div_to_l_@exp1,f
  6688  13A2  1D03               	btfss	3,2
  6689  13A3  2BA5               	goto	u4421
  6690  13A4  2BA6               	goto	u4420
  6691  13A5                     u4421:
  6692  13A5  2B95               	goto	l2839
  6693  13A6                     u4420:
  6694  13A6  2BBE               	goto	l2849
  6695  13A7                     l2841:
  6696  13A7  3020               	movlw	32
  6697  13A8  0225               	subwf	__div_to_l_@exp1,w
  6698  13A9  1C03               	skipc
  6699  13AA  2BAC               	goto	u4431
  6700  13AB  2BAD               	goto	u4430
  6701  13AC                     u4431:
  6702  13AC  2BB9               	goto	l530
  6703  13AD                     u4430:
  6704  13AD  2B16               	goto	l2803
  6705  13AE                     l2847:
  6706  13AE  3001               	movlw	1
  6707  13AF  00F8               	movwf	??__div_to_l_
  6708  13B0                     u4445:
  6709  13B0  1003               	clrc
  6710  13B1  0DA0               	rlf	__div_to_l_@quot,f
  6711  13B2  0DA1               	rlf	__div_to_l_@quot+1,f
  6712  13B3  0DA2               	rlf	__div_to_l_@quot+2,f
  6713  13B4  0DA3               	rlf	__div_to_l_@quot+3,f
  6714  13B5  0BF8               	decfsz	??__div_to_l_,f
  6715  13B6  2BB0               	goto	u4445
  6716  13B7  3001               	movlw	1
  6717  13B8  02A5               	subwf	__div_to_l_@exp1,f
  6718  13B9                     l530:
  6719  13B9  0825               	movf	__div_to_l_@exp1,w
  6720  13BA  1D03               	btfss	3,2
  6721  13BB  2BBD               	goto	u4451
  6722  13BC  2BBE               	goto	u4450
  6723  13BD                     u4451:
  6724  13BD  2BAE               	goto	l2847
  6725  13BE                     u4450:
  6726  13BE                     l2849:
  6727  13BE  0823               	movf	__div_to_l_@quot+3,w
  6728  13BF  00F3               	movwf	?__div_to_l_+3
  6729  13C0  0822               	movf	__div_to_l_@quot+2,w
  6730  13C1  00F2               	movwf	?__div_to_l_+2
  6731  13C2  0821               	movf	__div_to_l_@quot+1,w
  6732  13C3  00F1               	movwf	?__div_to_l_+1
  6733  13C4  0820               	movf	__div_to_l_@quot,w
  6734  13C5  00F0               	movwf	?__div_to_l_
  6735  13C6                     l519:
  6736  13C6  0008               	return
  6737  13C7                     __end_of__div_to_l_:
  6738                           
  6739                           	psect	text12
  6740  1190                     __ptext12:	
  6741 ;; *************** function ___xxtofl *****************
  6742 ;; Defined at:
  6743 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  sign            1    wreg     unsigned char 
  6746 ;;  val             4    0[BANK0 ] long 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  sign            1    8[BANK0 ] unsigned char 
  6749 ;;  arg             4   10[BANK0 ] unsigned long 
  6750 ;;  exp             1    9[BANK0 ] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  4    0[BANK0 ] unsigned char 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6760 ;;      Params:         0       4       0       0       0
  6761 ;;      Locals:         0       6       0       0       0
  6762 ;;      Temps:          0       4       0       0       0
  6763 ;;      Totals:         0      14       0       0       0
  6764 ;;Total ram usage:       14 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_main
  6770 ;;		_sprintf
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           
  6775                           ;psect for function ___xxtofl
  6776  1190                     ___xxtofl:
  6777                           
  6778                           ;incstack = 0
  6779                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6780                           ;___xxtofl@sign stored from wreg
  6781  1190  1283               	bcf	3,5	;RP0=0, select bank0
  6782  1191  1303               	bcf	3,6	;RP1=0, select bank0
  6783  1192  00A8               	movwf	___xxtofl@sign
  6784  1193                     l2993:
  6785  1193  0828               	movf	___xxtofl@sign,w
  6786  1194  1903               	btfsc	3,2
  6787  1195  2997               	goto	u4841
  6788  1196  2998               	goto	u4840
  6789  1197                     u4841:
  6790  1197  29AC               	goto	l2999
  6791  1198                     u4840:
  6792  1198                     l2995:
  6793  1198  1FA3               	btfss	___xxtofl@val+3,7
  6794  1199  299B               	goto	u4851
  6795  119A  299C               	goto	u4850
  6796  119B                     u4851:
  6797  119B  29AC               	goto	l2999
  6798  119C                     u4850:
  6799  119C                     l2997:
  6800  119C  0920               	comf	___xxtofl@val,w
  6801  119D  00AA               	movwf	___xxtofl@arg
  6802  119E  0921               	comf	___xxtofl@val+1,w
  6803  119F  00AB               	movwf	___xxtofl@arg+1
  6804  11A0  0922               	comf	___xxtofl@val+2,w
  6805  11A1  00AC               	movwf	___xxtofl@arg+2
  6806  11A2  0923               	comf	___xxtofl@val+3,w
  6807  11A3  00AD               	movwf	___xxtofl@arg+3
  6808  11A4  0AAA               	incf	___xxtofl@arg,f
  6809  11A5  1903               	skipnz
  6810  11A6  0AAB               	incf	___xxtofl@arg+1,f
  6811  11A7  1903               	skipnz
  6812  11A8  0AAC               	incf	___xxtofl@arg+2,f
  6813  11A9  1903               	skipnz
  6814  11AA  0AAD               	incf	___xxtofl@arg+3,f
  6815  11AB  29B4               	goto	l816
  6816  11AC                     l2999:
  6817  11AC  0823               	movf	___xxtofl@val+3,w
  6818  11AD  00AD               	movwf	___xxtofl@arg+3
  6819  11AE  0822               	movf	___xxtofl@val+2,w
  6820  11AF  00AC               	movwf	___xxtofl@arg+2
  6821  11B0  0821               	movf	___xxtofl@val+1,w
  6822  11B1  00AB               	movwf	___xxtofl@arg+1
  6823  11B2  0820               	movf	___xxtofl@val,w
  6824  11B3  00AA               	movwf	___xxtofl@arg
  6825  11B4                     l816:
  6826  11B4  0823               	movf	___xxtofl@val+3,w
  6827  11B5  0422               	iorwf	___xxtofl@val+2,w
  6828  11B6  0421               	iorwf	___xxtofl@val+1,w
  6829  11B7  0420               	iorwf	___xxtofl@val,w
  6830  11B8  1D03               	skipz
  6831  11B9  29BB               	goto	u4861
  6832  11BA  29BC               	goto	u4860
  6833  11BB                     u4861:
  6834  11BB  29C5               	goto	l3005
  6835  11BC                     u4860:
  6836  11BC                     l3001:
  6837  11BC  3000               	movlw	0
  6838  11BD  00A3               	movwf	?___xxtofl+3
  6839  11BE  3000               	movlw	0
  6840  11BF  00A2               	movwf	?___xxtofl+2
  6841  11C0  3000               	movlw	0
  6842  11C1  00A1               	movwf	?___xxtofl+1
  6843  11C2  3000               	movlw	0
  6844  11C3  00A0               	movwf	?___xxtofl
  6845  11C4  2A4B               	goto	l818
  6846  11C5                     l3005:
  6847  11C5  3096               	movlw	150
  6848  11C6  00A4               	movwf	??___xxtofl
  6849  11C7  0824               	movf	??___xxtofl,w
  6850  11C8  00A9               	movwf	___xxtofl@exp
  6851  11C9  29D7               	goto	l3009
  6852  11CA                     l3007:
  6853  11CA  3001               	movlw	1
  6854  11CB  00A4               	movwf	??___xxtofl
  6855  11CC  0824               	movf	??___xxtofl,w
  6856  11CD  07A9               	addwf	___xxtofl@exp,f
  6857  11CE  3001               	movlw	1
  6858  11CF                     u4875:
  6859  11CF  1003               	clrc
  6860  11D0  0CAD               	rrf	___xxtofl@arg+3,f
  6861  11D1  0CAC               	rrf	___xxtofl@arg+2,f
  6862  11D2  0CAB               	rrf	___xxtofl@arg+1,f
  6863  11D3  0CAA               	rrf	___xxtofl@arg,f
  6864  11D4  3EFF               	addlw	-1
  6865  11D5  1D03               	skipz
  6866  11D6  29CF               	goto	u4875
  6867  11D7                     l3009:
  6868  11D7  30FE               	movlw	254
  6869  11D8  052D               	andwf	___xxtofl@arg+3,w
  6870  11D9  1D03               	btfss	3,2
  6871  11DA  29DC               	goto	u4881
  6872  11DB  29DD               	goto	u4880
  6873  11DC                     u4881:
  6874  11DC  29CA               	goto	l3007
  6875  11DD                     u4880:
  6876  11DD  29F9               	goto	l822
  6877  11DE                     l3011:
  6878  11DE  3001               	movlw	1
  6879  11DF  00A4               	movwf	??___xxtofl
  6880  11E0  0824               	movf	??___xxtofl,w
  6881  11E1  07A9               	addwf	___xxtofl@exp,f
  6882  11E2                     l3013:
  6883  11E2  3001               	movlw	1
  6884  11E3  07AA               	addwf	___xxtofl@arg,f
  6885  11E4  3000               	movlw	0
  6886  11E5  1803               	skipnc
  6887  11E6  3001               	movlw	1
  6888  11E7  07AB               	addwf	___xxtofl@arg+1,f
  6889  11E8  3000               	movlw	0
  6890  11E9  1803               	skipnc
  6891  11EA  3001               	movlw	1
  6892  11EB  07AC               	addwf	___xxtofl@arg+2,f
  6893  11EC  3000               	movlw	0
  6894  11ED  1803               	skipnc
  6895  11EE  3001               	movlw	1
  6896  11EF  07AD               	addwf	___xxtofl@arg+3,f
  6897  11F0                     l3015:
  6898  11F0  3001               	movlw	1
  6899  11F1                     u4895:
  6900  11F1  1003               	clrc
  6901  11F2  0CAD               	rrf	___xxtofl@arg+3,f
  6902  11F3  0CAC               	rrf	___xxtofl@arg+2,f
  6903  11F4  0CAB               	rrf	___xxtofl@arg+1,f
  6904  11F5  0CAA               	rrf	___xxtofl@arg,f
  6905  11F6  3EFF               	addlw	-1
  6906  11F7  1D03               	skipz
  6907  11F8  29F1               	goto	u4895
  6908  11F9                     l822:
  6909  11F9  30FF               	movlw	255
  6910  11FA  052D               	andwf	___xxtofl@arg+3,w
  6911  11FB  1D03               	btfss	3,2
  6912  11FC  29FE               	goto	u4901
  6913  11FD  29FF               	goto	u4900
  6914  11FE                     u4901:
  6915  11FE  29DE               	goto	l3011
  6916  11FF                     u4900:
  6917  11FF  2A0B               	goto	l3019
  6918  1200                     l3017:
  6919  1200  3001               	movlw	1
  6920  1201  02A9               	subwf	___xxtofl@exp,f
  6921  1202  3001               	movlw	1
  6922  1203  00A4               	movwf	??___xxtofl
  6923  1204                     u4915:
  6924  1204  1003               	clrc
  6925  1205  0DAA               	rlf	___xxtofl@arg,f
  6926  1206  0DAB               	rlf	___xxtofl@arg+1,f
  6927  1207  0DAC               	rlf	___xxtofl@arg+2,f
  6928  1208  0DAD               	rlf	___xxtofl@arg+3,f
  6929  1209  0BA4               	decfsz	??___xxtofl,f
  6930  120A  2A04               	goto	u4915
  6931  120B                     l3019:
  6932  120B  1BAC               	btfsc	___xxtofl@arg+2,7
  6933  120C  2A0E               	goto	u4921
  6934  120D  2A0F               	goto	u4920
  6935  120E                     u4921:
  6936  120E  2A15               	goto	l829
  6937  120F                     u4920:
  6938  120F                     l3021:
  6939  120F  3002               	movlw	2
  6940  1210  0229               	subwf	___xxtofl@exp,w
  6941  1211  1803               	skipnc
  6942  1212  2A14               	goto	u4931
  6943  1213  2A15               	goto	u4930
  6944  1214                     u4931:
  6945  1214  2A00               	goto	l3017
  6946  1215                     u4930:
  6947  1215                     l829:
  6948  1215  1829               	btfsc	___xxtofl@exp,0
  6949  1216  2A18               	goto	u4941
  6950  1217  2A19               	goto	u4940
  6951  1218                     u4941:
  6952  1218  2A21               	goto	l830
  6953  1219                     u4940:
  6954  1219                     l3023:
  6955  1219  30FF               	movlw	255
  6956  121A  05AA               	andwf	___xxtofl@arg,f
  6957  121B  30FF               	movlw	255
  6958  121C  05AB               	andwf	___xxtofl@arg+1,f
  6959  121D  307F               	movlw	127
  6960  121E  05AC               	andwf	___xxtofl@arg+2,f
  6961  121F  30FF               	movlw	255
  6962  1220  05AD               	andwf	___xxtofl@arg+3,f
  6963  1221                     l830:
  6964  1221  1003               	clrc
  6965  1222  0CA9               	rrf	___xxtofl@exp,f
  6966  1223                     l3025:
  6967  1223  0829               	movf	___xxtofl@exp,w
  6968  1224  00A4               	movwf	??___xxtofl
  6969  1225  01A5               	clrf	??___xxtofl+1
  6970  1226  01A6               	clrf	??___xxtofl+2
  6971  1227  01A7               	clrf	??___xxtofl+3
  6972  1228  3018               	movlw	24
  6973  1229                     u4955:
  6974  1229  1003               	clrc
  6975  122A  0DA4               	rlf	??___xxtofl,f
  6976  122B  0DA5               	rlf	??___xxtofl+1,f
  6977  122C  0DA6               	rlf	??___xxtofl+2,f
  6978  122D  0DA7               	rlf	??___xxtofl+3,f
  6979  122E                     u4950:
  6980  122E  3EFF               	addlw	-1
  6981  122F  1D03               	skipz
  6982  1230  2A29               	goto	u4955
  6983  1231  0824               	movf	??___xxtofl,w
  6984  1232  04AA               	iorwf	___xxtofl@arg,f
  6985  1233  0825               	movf	??___xxtofl+1,w
  6986  1234  04AB               	iorwf	___xxtofl@arg+1,f
  6987  1235  0826               	movf	??___xxtofl+2,w
  6988  1236  04AC               	iorwf	___xxtofl@arg+2,f
  6989  1237  0827               	movf	??___xxtofl+3,w
  6990  1238  04AD               	iorwf	___xxtofl@arg+3,f
  6991  1239                     l3027:
  6992  1239  0828               	movf	___xxtofl@sign,w
  6993  123A  1903               	btfsc	3,2
  6994  123B  2A3D               	goto	u4961
  6995  123C  2A3E               	goto	u4960
  6996  123D                     u4961:
  6997  123D  2A43               	goto	l3033
  6998  123E                     u4960:
  6999  123E                     l3029:
  7000  123E  1FA3               	btfss	___xxtofl@val+3,7
  7001  123F  2A41               	goto	u4971
  7002  1240  2A42               	goto	u4970
  7003  1241                     u4971:
  7004  1241  2A43               	goto	l3033
  7005  1242                     u4970:
  7006  1242                     l3031:
  7007  1242  17AD               	bsf	___xxtofl@arg+3,7
  7008  1243                     l3033:
  7009  1243  082D               	movf	___xxtofl@arg+3,w
  7010  1244  00A3               	movwf	?___xxtofl+3
  7011  1245  082C               	movf	___xxtofl@arg+2,w
  7012  1246  00A2               	movwf	?___xxtofl+2
  7013  1247  082B               	movf	___xxtofl@arg+1,w
  7014  1248  00A1               	movwf	?___xxtofl+1
  7015  1249  082A               	movf	___xxtofl@arg,w
  7016  124A  00A0               	movwf	?___xxtofl
  7017  124B                     l818:
  7018  124B  0008               	return
  7019  124C                     __end_of___xxtofl:
  7020                           
  7021                           	psect	text13
  7022  1C94                     __ptext13:	
  7023 ;; *************** function ___wmul *****************
  7024 ;; Defined at:
  7025 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  multiplier      2    0[COMMON] unsigned int 
  7028 ;;  multiplicand    2    2[COMMON] unsigned int 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  product         2    4[COMMON] unsigned int 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  2    0[COMMON] unsigned int 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7040 ;;      Params:         4       0       0       0       0
  7041 ;;      Locals:         2       0       0       0       0
  7042 ;;      Temps:          0       0       0       0       0
  7043 ;;      Totals:         6       0       0       0       0
  7044 ;;Total ram usage:        6 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; This function calls:
  7047 ;;		Nothing
  7048 ;; This function is called by:
  7049 ;;		_sprintf
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           
  7054                           ;psect for function ___wmul
  7055  1C94                     ___wmul:
  7056  1C94                     l2853:	
  7057                           ;incstack = 0
  7058                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7059                           
  7060  1C94  01F4               	clrf	___wmul@product
  7061  1C95  01F5               	clrf	___wmul@product+1
  7062  1C96                     l2855:
  7063  1C96  1C70               	btfss	___wmul@multiplier,0
  7064  1C97  2C99               	goto	u4461
  7065  1C98  2C9A               	goto	u4460
  7066  1C99                     u4461:
  7067  1C99  2CA0               	goto	l349
  7068  1C9A                     u4460:
  7069  1C9A                     l2857:
  7070  1C9A  0872               	movf	___wmul@multiplicand,w
  7071  1C9B  07F4               	addwf	___wmul@product,f
  7072  1C9C  1803               	skipnc
  7073  1C9D  0AF5               	incf	___wmul@product+1,f
  7074  1C9E  0873               	movf	___wmul@multiplicand+1,w
  7075  1C9F  07F5               	addwf	___wmul@product+1,f
  7076  1CA0                     l349:
  7077  1CA0  3001               	movlw	1
  7078  1CA1                     u4475:
  7079  1CA1  1003               	clrc
  7080  1CA2  0DF2               	rlf	___wmul@multiplicand,f
  7081  1CA3  0DF3               	rlf	___wmul@multiplicand+1,f
  7082  1CA4  3EFF               	addlw	-1
  7083  1CA5  1D03               	skipz
  7084  1CA6  2CA1               	goto	u4475
  7085  1CA7                     l2859:
  7086  1CA7  3001               	movlw	1
  7087  1CA8                     u4485:
  7088  1CA8  1003               	clrc
  7089  1CA9  0CF1               	rrf	___wmul@multiplier+1,f
  7090  1CAA  0CF0               	rrf	___wmul@multiplier,f
  7091  1CAB  3EFF               	addlw	-1
  7092  1CAC  1D03               	skipz
  7093  1CAD  2CA8               	goto	u4485
  7094  1CAE                     l2861:
  7095  1CAE  0870               	movf	___wmul@multiplier,w
  7096  1CAF  0471               	iorwf	___wmul@multiplier+1,w
  7097  1CB0  1D03               	btfss	3,2
  7098  1CB1  2CB3               	goto	u4491
  7099  1CB2  2CB4               	goto	u4490
  7100  1CB3                     u4491:
  7101  1CB3  2C96               	goto	l2855
  7102  1CB4                     u4490:
  7103  1CB4                     l2863:
  7104  1CB4  0875               	movf	___wmul@product+1,w
  7105  1CB5  00F1               	movwf	?___wmul+1
  7106  1CB6  0874               	movf	___wmul@product,w
  7107  1CB7  00F0               	movwf	?___wmul
  7108  1CB8                     l351:
  7109  1CB8  0008               	return
  7110  1CB9                     __end_of___wmul:
  7111                           
  7112                           	psect	text14
  7113  1E90                     __ptext14:	
  7114 ;; *************** function ___llmod *****************
  7115 ;; Defined at:
  7116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  divisor         4    0[COMMON] unsigned long 
  7119 ;;  dividend        4    4[COMMON] unsigned long 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  counter         1    9[COMMON] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  4    0[COMMON] unsigned long 
  7124 ;; Registers used:
  7125 ;;		wreg, status,2, status,0
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7131 ;;      Params:         8       0       0       0       0
  7132 ;;      Locals:         1       0       0       0       0
  7133 ;;      Temps:          1       0       0       0       0
  7134 ;;      Totals:        10       0       0       0       0
  7135 ;;Total ram usage:       10 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_sprintf
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           
  7145                           ;psect for function ___llmod
  7146  1E90                     ___llmod:
  7147  1E90                     l2967:	
  7148                           ;incstack = 0
  7149                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7150                           
  7151  1E90  0873               	movf	___llmod@divisor+3,w
  7152  1E91  0472               	iorwf	___llmod@divisor+2,w
  7153  1E92  0471               	iorwf	___llmod@divisor+1,w
  7154  1E93  0470               	iorwf	___llmod@divisor,w
  7155  1E94  1903               	skipnz
  7156  1E95  2E97               	goto	u4781
  7157  1E96  2E98               	goto	u4780
  7158  1E97                     u4781:
  7159  1E97  2EDB               	goto	l2983
  7160  1E98                     u4780:
  7161  1E98                     l2969:
  7162  1E98  01F9               	clrf	___llmod@counter
  7163  1E99  0AF9               	incf	___llmod@counter,f
  7164  1E9A  2EA8               	goto	l2973
  7165  1E9B                     l2971:
  7166  1E9B  3001               	movlw	1
  7167  1E9C  00F8               	movwf	??___llmod
  7168  1E9D                     u4795:
  7169  1E9D  1003               	clrc
  7170  1E9E  0DF0               	rlf	___llmod@divisor,f
  7171  1E9F  0DF1               	rlf	___llmod@divisor+1,f
  7172  1EA0  0DF2               	rlf	___llmod@divisor+2,f
  7173  1EA1  0DF3               	rlf	___llmod@divisor+3,f
  7174  1EA2  0BF8               	decfsz	??___llmod,f
  7175  1EA3  2E9D               	goto	u4795
  7176  1EA4  3001               	movlw	1
  7177  1EA5  00F8               	movwf	??___llmod
  7178  1EA6  0878               	movf	??___llmod,w
  7179  1EA7  07F9               	addwf	___llmod@counter,f
  7180  1EA8                     l2973:
  7181  1EA8  1FF3               	btfss	___llmod@divisor+3,7
  7182  1EA9  2EAB               	goto	u4801
  7183  1EAA  2EAC               	goto	u4800
  7184  1EAB                     u4801:
  7185  1EAB  2E9B               	goto	l2971
  7186  1EAC                     u4800:
  7187  1EAC                     l2975:
  7188  1EAC  0873               	movf	___llmod@divisor+3,w
  7189  1EAD  0277               	subwf	___llmod@dividend+3,w
  7190  1EAE  1D03               	skipz
  7191  1EAF  2EBA               	goto	u4815
  7192  1EB0  0872               	movf	___llmod@divisor+2,w
  7193  1EB1  0276               	subwf	___llmod@dividend+2,w
  7194  1EB2  1D03               	skipz
  7195  1EB3  2EBA               	goto	u4815
  7196  1EB4  0871               	movf	___llmod@divisor+1,w
  7197  1EB5  0275               	subwf	___llmod@dividend+1,w
  7198  1EB6  1D03               	skipz
  7199  1EB7  2EBA               	goto	u4815
  7200  1EB8  0870               	movf	___llmod@divisor,w
  7201  1EB9  0274               	subwf	___llmod@dividend,w
  7202  1EBA                     u4815:
  7203  1EBA  1C03               	skipc
  7204  1EBB  2EBD               	goto	u4811
  7205  1EBC  2EBE               	goto	u4810
  7206  1EBD                     u4811:
  7207  1EBD  2ECC               	goto	l2979
  7208  1EBE                     u4810:
  7209  1EBE                     l2977:
  7210  1EBE  0870               	movf	___llmod@divisor,w
  7211  1EBF  02F4               	subwf	___llmod@dividend,f
  7212  1EC0  0871               	movf	___llmod@divisor+1,w
  7213  1EC1  1C03               	skipc
  7214  1EC2  0F71               	incfsz	___llmod@divisor+1,w
  7215  1EC3  02F5               	subwf	___llmod@dividend+1,f
  7216  1EC4  0872               	movf	___llmod@divisor+2,w
  7217  1EC5  1C03               	skipc
  7218  1EC6  0F72               	incfsz	___llmod@divisor+2,w
  7219  1EC7  02F6               	subwf	___llmod@dividend+2,f
  7220  1EC8  0873               	movf	___llmod@divisor+3,w
  7221  1EC9  1C03               	skipc
  7222  1ECA  0F73               	incfsz	___llmod@divisor+3,w
  7223  1ECB  02F7               	subwf	___llmod@dividend+3,f
  7224  1ECC                     l2979:
  7225  1ECC  3001               	movlw	1
  7226  1ECD                     u4825:
  7227  1ECD  1003               	clrc
  7228  1ECE  0CF3               	rrf	___llmod@divisor+3,f
  7229  1ECF  0CF2               	rrf	___llmod@divisor+2,f
  7230  1ED0  0CF1               	rrf	___llmod@divisor+1,f
  7231  1ED1  0CF0               	rrf	___llmod@divisor,f
  7232  1ED2  3EFF               	addlw	-1
  7233  1ED3  1D03               	skipz
  7234  1ED4  2ECD               	goto	u4825
  7235  1ED5                     l2981:
  7236  1ED5  3001               	movlw	1
  7237  1ED6  02F9               	subwf	___llmod@counter,f
  7238  1ED7  1D03               	btfss	3,2
  7239  1ED8  2EDA               	goto	u4831
  7240  1ED9  2EDB               	goto	u4830
  7241  1EDA                     u4831:
  7242  1EDA  2EAC               	goto	l2975
  7243  1EDB                     u4830:
  7244  1EDB                     l2983:
  7245  1EDB  0877               	movf	___llmod@dividend+3,w
  7246  1EDC  00F3               	movwf	?___llmod+3
  7247  1EDD  0876               	movf	___llmod@dividend+2,w
  7248  1EDE  00F2               	movwf	?___llmod+2
  7249  1EDF  0875               	movf	___llmod@dividend+1,w
  7250  1EE0  00F1               	movwf	?___llmod+1
  7251  1EE1  0874               	movf	___llmod@dividend,w
  7252  1EE2  00F0               	movwf	?___llmod
  7253  1EE3                     l605:
  7254  1EE3  0008               	return
  7255  1EE4                     __end_of___llmod:
  7256                           
  7257                           	psect	text15
  7258  1F9A                     __ptext15:	
  7259 ;; *************** function ___lldiv *****************
  7260 ;; Defined at:
  7261 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  divisor         4    0[COMMON] unsigned long 
  7264 ;;  dividend        4    4[COMMON] unsigned long 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  quotient        4    9[COMMON] unsigned long 
  7267 ;;  counter         1   13[COMMON] unsigned char 
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  4    0[COMMON] unsigned long 
  7270 ;; Registers used:
  7271 ;;		wreg, status,2, status,0
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7277 ;;      Params:         8       0       0       0       0
  7278 ;;      Locals:         5       0       0       0       0
  7279 ;;      Temps:          1       0       0       0       0
  7280 ;;      Totals:        14       0       0       0       0
  7281 ;;Total ram usage:       14 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; This function calls:
  7284 ;;		Nothing
  7285 ;; This function is called by:
  7286 ;;		_sprintf
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           
  7291                           ;psect for function ___lldiv
  7292  1F9A                     ___lldiv:
  7293  1F9A                     l2867:	
  7294                           ;incstack = 0
  7295                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7296                           
  7297  1F9A  3000               	movlw	0
  7298  1F9B  00FC               	movwf	___lldiv@quotient+3
  7299  1F9C  3000               	movlw	0
  7300  1F9D  00FB               	movwf	___lldiv@quotient+2
  7301  1F9E  3000               	movlw	0
  7302  1F9F  00FA               	movwf	___lldiv@quotient+1
  7303  1FA0  3000               	movlw	0
  7304  1FA1  00F9               	movwf	___lldiv@quotient
  7305  1FA2  0873               	movf	___lldiv@divisor+3,w
  7306  1FA3  0472               	iorwf	___lldiv@divisor+2,w
  7307  1FA4  0471               	iorwf	___lldiv@divisor+1,w
  7308  1FA5  0470               	iorwf	___lldiv@divisor,w
  7309  1FA6  1903               	skipnz
  7310  1FA7  2FA9               	goto	u4501
  7311  1FA8  2FAA               	goto	u4500
  7312  1FA9                     u4501:
  7313  1FA9  2FF7               	goto	l2887
  7314  1FAA                     u4500:
  7315  1FAA                     l2869:
  7316  1FAA  01FD               	clrf	___lldiv@counter
  7317  1FAB  0AFD               	incf	___lldiv@counter,f
  7318  1FAC  2FBA               	goto	l2873
  7319  1FAD                     l2871:
  7320  1FAD  3001               	movlw	1
  7321  1FAE  00F8               	movwf	??___lldiv
  7322  1FAF                     u4515:
  7323  1FAF  1003               	clrc
  7324  1FB0  0DF0               	rlf	___lldiv@divisor,f
  7325  1FB1  0DF1               	rlf	___lldiv@divisor+1,f
  7326  1FB2  0DF2               	rlf	___lldiv@divisor+2,f
  7327  1FB3  0DF3               	rlf	___lldiv@divisor+3,f
  7328  1FB4  0BF8               	decfsz	??___lldiv,f
  7329  1FB5  2FAF               	goto	u4515
  7330  1FB6  3001               	movlw	1
  7331  1FB7  00F8               	movwf	??___lldiv
  7332  1FB8  0878               	movf	??___lldiv,w
  7333  1FB9  07FD               	addwf	___lldiv@counter,f
  7334  1FBA                     l2873:
  7335  1FBA  1FF3               	btfss	___lldiv@divisor+3,7
  7336  1FBB  2FBD               	goto	u4521
  7337  1FBC  2FBE               	goto	u4520
  7338  1FBD                     u4521:
  7339  1FBD  2FAD               	goto	l2871
  7340  1FBE                     u4520:
  7341  1FBE                     l2875:
  7342  1FBE  3001               	movlw	1
  7343  1FBF  00F8               	movwf	??___lldiv
  7344  1FC0                     u4535:
  7345  1FC0  1003               	clrc
  7346  1FC1  0DF9               	rlf	___lldiv@quotient,f
  7347  1FC2  0DFA               	rlf	___lldiv@quotient+1,f
  7348  1FC3  0DFB               	rlf	___lldiv@quotient+2,f
  7349  1FC4  0DFC               	rlf	___lldiv@quotient+3,f
  7350  1FC5  0BF8               	decfsz	??___lldiv,f
  7351  1FC6  2FC0               	goto	u4535
  7352  1FC7                     l2877:
  7353  1FC7  0873               	movf	___lldiv@divisor+3,w
  7354  1FC8  0277               	subwf	___lldiv@dividend+3,w
  7355  1FC9  1D03               	skipz
  7356  1FCA  2FD5               	goto	u4545
  7357  1FCB  0872               	movf	___lldiv@divisor+2,w
  7358  1FCC  0276               	subwf	___lldiv@dividend+2,w
  7359  1FCD  1D03               	skipz
  7360  1FCE  2FD5               	goto	u4545
  7361  1FCF  0871               	movf	___lldiv@divisor+1,w
  7362  1FD0  0275               	subwf	___lldiv@dividend+1,w
  7363  1FD1  1D03               	skipz
  7364  1FD2  2FD5               	goto	u4545
  7365  1FD3  0870               	movf	___lldiv@divisor,w
  7366  1FD4  0274               	subwf	___lldiv@dividend,w
  7367  1FD5                     u4545:
  7368  1FD5  1C03               	skipc
  7369  1FD6  2FD8               	goto	u4541
  7370  1FD7  2FD9               	goto	u4540
  7371  1FD8                     u4541:
  7372  1FD8  2FE8               	goto	l2883
  7373  1FD9                     u4540:
  7374  1FD9                     l2879:
  7375  1FD9  0870               	movf	___lldiv@divisor,w
  7376  1FDA  02F4               	subwf	___lldiv@dividend,f
  7377  1FDB  0871               	movf	___lldiv@divisor+1,w
  7378  1FDC  1C03               	skipc
  7379  1FDD  0F71               	incfsz	___lldiv@divisor+1,w
  7380  1FDE  02F5               	subwf	___lldiv@dividend+1,f
  7381  1FDF  0872               	movf	___lldiv@divisor+2,w
  7382  1FE0  1C03               	skipc
  7383  1FE1  0F72               	incfsz	___lldiv@divisor+2,w
  7384  1FE2  02F6               	subwf	___lldiv@dividend+2,f
  7385  1FE3  0873               	movf	___lldiv@divisor+3,w
  7386  1FE4  1C03               	skipc
  7387  1FE5  0F73               	incfsz	___lldiv@divisor+3,w
  7388  1FE6  02F7               	subwf	___lldiv@dividend+3,f
  7389  1FE7                     l2881:
  7390  1FE7  1479               	bsf	___lldiv@quotient,0
  7391  1FE8                     l2883:
  7392  1FE8  3001               	movlw	1
  7393  1FE9                     u4555:
  7394  1FE9  1003               	clrc
  7395  1FEA  0CF3               	rrf	___lldiv@divisor+3,f
  7396  1FEB  0CF2               	rrf	___lldiv@divisor+2,f
  7397  1FEC  0CF1               	rrf	___lldiv@divisor+1,f
  7398  1FED  0CF0               	rrf	___lldiv@divisor,f
  7399  1FEE  3EFF               	addlw	-1
  7400  1FEF  1D03               	skipz
  7401  1FF0  2FE9               	goto	u4555
  7402  1FF1                     l2885:
  7403  1FF1  3001               	movlw	1
  7404  1FF2  02FD               	subwf	___lldiv@counter,f
  7405  1FF3  1D03               	btfss	3,2
  7406  1FF4  2FF6               	goto	u4561
  7407  1FF5  2FF7               	goto	u4560
  7408  1FF6                     u4561:
  7409  1FF6  2FBE               	goto	l2875
  7410  1FF7                     u4560:
  7411  1FF7                     l2887:
  7412  1FF7  087C               	movf	___lldiv@quotient+3,w
  7413  1FF8  00F3               	movwf	?___lldiv+3
  7414  1FF9  087B               	movf	___lldiv@quotient+2,w
  7415  1FFA  00F2               	movwf	?___lldiv+2
  7416  1FFB  087A               	movf	___lldiv@quotient+1,w
  7417  1FFC  00F1               	movwf	?___lldiv+1
  7418  1FFD  0879               	movf	___lldiv@quotient,w
  7419  1FFE  00F0               	movwf	?___lldiv
  7420  1FFF                     l385:
  7421  1FFF  0008               	return
  7422  2000                     __end_of___lldiv:
  7423                           
  7424                           	psect	text16
  7425  1072                     __ptext16:	
  7426 ;; *************** function ___fltol *****************
  7427 ;; Defined at:
  7428 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fltol.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  f1              4   59[BANK0 ] unsigned long 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  exp1            1   69[BANK0 ] unsigned char 
  7433 ;;  sign1           1   68[BANK0 ] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  4   59[BANK0 ] long 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7443 ;;      Params:         0       4       0       0       0
  7444 ;;      Locals:         0       2       0       0       0
  7445 ;;      Temps:          0       5       0       0       0
  7446 ;;      Totals:         0      11       0       0       0
  7447 ;;Total ram usage:       11 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_main
  7453 ;;		_sprintf
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           
  7458                           ;psect for function ___fltol
  7459  1072                     ___fltol:
  7460  1072                     l2931:	
  7461                           ;incstack = 0
  7462                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7463                           
  7464  1072  1003               	clrc
  7465  1073  1283               	bcf	3,5	;RP0=0, select bank0
  7466  1074  1303               	bcf	3,6	;RP1=0, select bank0
  7467  1075  0D5D               	rlf	___fltol@f1+2,w
  7468  1076  0D5E               	rlf	___fltol@f1+3,w
  7469  1077  00DF               	movwf	??___fltol
  7470  1078  085F               	movf	??___fltol,w
  7471  1079  00E5               	movwf	___fltol@exp1
  7472  107A  0865               	movf	___fltol@exp1,w
  7473  107B  1D03               	btfss	3,2
  7474  107C  287E               	goto	u4681
  7475  107D  287F               	goto	u4680
  7476  107E                     u4681:
  7477  107E  2888               	goto	l2937
  7478  107F                     u4680:
  7479  107F                     l2933:
  7480  107F  3000               	movlw	0
  7481  1080  00DE               	movwf	?___fltol+3
  7482  1081  3000               	movlw	0
  7483  1082  00DD               	movwf	?___fltol+2
  7484  1083  3000               	movlw	0
  7485  1084  00DC               	movwf	?___fltol+1
  7486  1085  3000               	movlw	0
  7487  1086  00DB               	movwf	?___fltol
  7488  1087  28ED               	goto	l552
  7489  1088                     l2937:
  7490  1088  085B               	movf	___fltol@f1,w
  7491  1089  00DF               	movwf	??___fltol
  7492  108A  085C               	movf	___fltol@f1+1,w
  7493  108B  00E0               	movwf	??___fltol+1
  7494  108C  085D               	movf	___fltol@f1+2,w
  7495  108D  00E1               	movwf	??___fltol+2
  7496  108E  085E               	movf	___fltol@f1+3,w
  7497  108F  00E2               	movwf	??___fltol+3
  7498  1090  301F               	movlw	31
  7499  1091                     u4695:
  7500  1091  1003               	clrc
  7501  1092  0CE2               	rrf	??___fltol+3,f
  7502  1093  0CE1               	rrf	??___fltol+2,f
  7503  1094  0CE0               	rrf	??___fltol+1,f
  7504  1095  0CDF               	rrf	??___fltol,f
  7505  1096                     u4690:
  7506  1096  3EFF               	addlw	-1
  7507  1097  1D03               	skipz
  7508  1098  2891               	goto	u4695
  7509  1099  085F               	movf	??___fltol,w
  7510  109A  00E3               	movwf	??___fltol+4
  7511  109B  0863               	movf	??___fltol+4,w
  7512  109C  00E4               	movwf	___fltol@sign1
  7513  109D                     l2939:
  7514  109D  17DD               	bsf	___fltol@f1+2,7
  7515  109E                     l2941:
  7516  109E  30FF               	movlw	255
  7517  109F  05DB               	andwf	___fltol@f1,f
  7518  10A0  30FF               	movlw	255
  7519  10A1  05DC               	andwf	___fltol@f1+1,f
  7520  10A2  30FF               	movlw	255
  7521  10A3  05DD               	andwf	___fltol@f1+2,f
  7522  10A4  3000               	movlw	0
  7523  10A5  05DE               	andwf	___fltol@f1+3,f
  7524  10A6                     l2943:
  7525  10A6  3096               	movlw	150
  7526  10A7  02E5               	subwf	___fltol@exp1,f
  7527  10A8                     l2945:
  7528  10A8  1FE5               	btfss	___fltol@exp1,7
  7529  10A9  28AB               	goto	u4701
  7530  10AA  28AC               	goto	u4700
  7531  10AB                     u4701:
  7532  10AB  28C6               	goto	l2955
  7533  10AC                     u4700:
  7534  10AC                     l2947:
  7535  10AC  0865               	movf	___fltol@exp1,w
  7536  10AD  3A80               	xorlw	128
  7537  10AE  3E97               	addlw	151
  7538  10AF  1803               	skipnc
  7539  10B0  28B2               	goto	u4711
  7540  10B1  28B3               	goto	u4710
  7541  10B2                     u4711:
  7542  10B2  28B4               	goto	l2953
  7543  10B3                     u4710:
  7544  10B3  287F               	goto	l2933
  7545  10B4                     l2953:
  7546  10B4  3001               	movlw	1
  7547  10B5                     u4725:
  7548  10B5  1003               	clrc
  7549  10B6  0CDE               	rrf	___fltol@f1+3,f
  7550  10B7  0CDD               	rrf	___fltol@f1+2,f
  7551  10B8  0CDC               	rrf	___fltol@f1+1,f
  7552  10B9  0CDB               	rrf	___fltol@f1,f
  7553  10BA  3EFF               	addlw	-1
  7554  10BB  1D03               	skipz
  7555  10BC  28B5               	goto	u4725
  7556  10BD  3001               	movlw	1
  7557  10BE  00DF               	movwf	??___fltol
  7558  10BF  085F               	movf	??___fltol,w
  7559  10C0  07E5               	addwf	___fltol@exp1,f
  7560  10C1  1D03               	btfss	3,2
  7561  10C2  28C4               	goto	u4731
  7562  10C3  28C5               	goto	u4730
  7563  10C4                     u4731:
  7564  10C4  28B4               	goto	l2953
  7565  10C5                     u4730:
  7566  10C5  28DD               	goto	l2963
  7567  10C6                     l2955:
  7568  10C6  3020               	movlw	32
  7569  10C7  0265               	subwf	___fltol@exp1,w
  7570  10C8  1C03               	skipc
  7571  10C9  28CB               	goto	u4741
  7572  10CA  28CC               	goto	u4740
  7573  10CB                     u4741:
  7574  10CB  28D8               	goto	l559
  7575  10CC                     u4740:
  7576  10CC  287F               	goto	l2933
  7577  10CD                     l2961:
  7578  10CD  3001               	movlw	1
  7579  10CE  00DF               	movwf	??___fltol
  7580  10CF                     u4755:
  7581  10CF  1003               	clrc
  7582  10D0  0DDB               	rlf	___fltol@f1,f
  7583  10D1  0DDC               	rlf	___fltol@f1+1,f
  7584  10D2  0DDD               	rlf	___fltol@f1+2,f
  7585  10D3  0DDE               	rlf	___fltol@f1+3,f
  7586  10D4  0BDF               	decfsz	??___fltol,f
  7587  10D5  28CF               	goto	u4755
  7588  10D6  3001               	movlw	1
  7589  10D7  02E5               	subwf	___fltol@exp1,f
  7590  10D8                     l559:
  7591  10D8  0865               	movf	___fltol@exp1,w
  7592  10D9  1D03               	btfss	3,2
  7593  10DA  28DC               	goto	u4761
  7594  10DB  28DD               	goto	u4760
  7595  10DC                     u4761:
  7596  10DC  28CD               	goto	l2961
  7597  10DD                     u4760:
  7598  10DD                     l2963:
  7599  10DD  0864               	movf	___fltol@sign1,w
  7600  10DE  1903               	btfsc	3,2
  7601  10DF  28E1               	goto	u4771
  7602  10E0  28E2               	goto	u4770
  7603  10E1                     u4771:
  7604  10E1  28ED               	goto	l562
  7605  10E2                     u4770:
  7606  10E2                     l2965:
  7607  10E2  09DB               	comf	___fltol@f1,f
  7608  10E3  09DC               	comf	___fltol@f1+1,f
  7609  10E4  09DD               	comf	___fltol@f1+2,f
  7610  10E5  09DE               	comf	___fltol@f1+3,f
  7611  10E6  0ADB               	incf	___fltol@f1,f
  7612  10E7  1903               	skipnz
  7613  10E8  0ADC               	incf	___fltol@f1+1,f
  7614  10E9  1903               	skipnz
  7615  10EA  0ADD               	incf	___fltol@f1+2,f
  7616  10EB  1903               	skipnz
  7617  10EC  0ADE               	incf	___fltol@f1+3,f
  7618  10ED                     l562:
  7619  10ED                     l552:
  7620  10ED  0008               	return
  7621  10EE                     __end_of___fltol:
  7622                           
  7623                           	psect	text17
  7624  1E40                     __ptext17:	
  7625 ;; *************** function ___flsub *****************
  7626 ;; Defined at:
  7627 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;  a               4    0[BANK1 ] long 
  7630 ;;  b               4    4[BANK1 ] long 
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;		None
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  4    0[BANK1 ] long 
  7635 ;; Registers used:
  7636 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7642 ;;      Params:         0       0       8       0       0
  7643 ;;      Locals:         0       0       0       0       0
  7644 ;;      Temps:          0       0       0       0       0
  7645 ;;      Totals:         0       0       8       0       0
  7646 ;;Total ram usage:        8 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; Hardware stack levels required when called:    1
  7649 ;; This function calls:
  7650 ;;		___fladd
  7651 ;; This function is called by:
  7652 ;;		_sprintf
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           
  7657                           ;psect for function ___flsub
  7658  1E40                     ___flsub:
  7659  1E40                     l2987:	
  7660                           ;incstack = 0
  7661                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7662                           
  7663  1E40  3080               	movlw	128
  7664  1E41  1683               	bsf	3,5	;RP0=1, select bank1
  7665  1E42  1303               	bcf	3,6	;RP1=0, select bank1
  7666  1E43  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7667  1E44                     l2989:
  7668  1E44  0827               	movf	(___flsub@b+3)^(0+128),w
  7669  1E45  1283               	bcf	3,5	;RP0=0, select bank0
  7670  1E46  1303               	bcf	3,6	;RP1=0, select bank0
  7671  1E47  00DF               	movwf	___fladd@b+3
  7672  1E48  1683               	bsf	3,5	;RP0=1, select bank1
  7673  1E49  1303               	bcf	3,6	;RP1=0, select bank1
  7674  1E4A  0826               	movf	(___flsub@b+2)^(0+128),w
  7675  1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  7676  1E4C  1303               	bcf	3,6	;RP1=0, select bank0
  7677  1E4D  00DE               	movwf	___fladd@b+2
  7678  1E4E  1683               	bsf	3,5	;RP0=1, select bank1
  7679  1E4F  1303               	bcf	3,6	;RP1=0, select bank1
  7680  1E50  0825               	movf	(___flsub@b+1)^(0+128),w
  7681  1E51  1283               	bcf	3,5	;RP0=0, select bank0
  7682  1E52  1303               	bcf	3,6	;RP1=0, select bank0
  7683  1E53  00DD               	movwf	___fladd@b+1
  7684  1E54  1683               	bsf	3,5	;RP0=1, select bank1
  7685  1E55  1303               	bcf	3,6	;RP1=0, select bank1
  7686  1E56  0824               	movf	___flsub@b^(0+128),w
  7687  1E57  1283               	bcf	3,5	;RP0=0, select bank0
  7688  1E58  1303               	bcf	3,6	;RP1=0, select bank0
  7689  1E59  00DC               	movwf	___fladd@b
  7690  1E5A  1683               	bsf	3,5	;RP0=1, select bank1
  7691  1E5B  1303               	bcf	3,6	;RP1=0, select bank1
  7692  1E5C  0823               	movf	(___flsub@a+3)^(0+128),w
  7693  1E5D  1283               	bcf	3,5	;RP0=0, select bank0
  7694  1E5E  1303               	bcf	3,6	;RP1=0, select bank0
  7695  1E5F  00E3               	movwf	___fladd@a+3
  7696  1E60  1683               	bsf	3,5	;RP0=1, select bank1
  7697  1E61  1303               	bcf	3,6	;RP1=0, select bank1
  7698  1E62  0822               	movf	(___flsub@a+2)^(0+128),w
  7699  1E63  1283               	bcf	3,5	;RP0=0, select bank0
  7700  1E64  1303               	bcf	3,6	;RP1=0, select bank0
  7701  1E65  00E2               	movwf	___fladd@a+2
  7702  1E66  1683               	bsf	3,5	;RP0=1, select bank1
  7703  1E67  1303               	bcf	3,6	;RP1=0, select bank1
  7704  1E68  0821               	movf	(___flsub@a+1)^(0+128),w
  7705  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  7706  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  7707  1E6B  00E1               	movwf	___fladd@a+1
  7708  1E6C  1683               	bsf	3,5	;RP0=1, select bank1
  7709  1E6D  1303               	bcf	3,6	;RP1=0, select bank1
  7710  1E6E  0820               	movf	___flsub@a^(0+128),w
  7711  1E6F  1283               	bcf	3,5	;RP0=0, select bank0
  7712  1E70  1303               	bcf	3,6	;RP1=0, select bank0
  7713  1E71  00E0               	movwf	___fladd@a
  7714  1E72  160A  118A  2578  160A  158A  	fcall	___fladd
  7715  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  7716  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  7717  1E79  085F               	movf	?___fladd+3,w
  7718  1E7A  1683               	bsf	3,5	;RP0=1, select bank1
  7719  1E7B  1303               	bcf	3,6	;RP1=0, select bank1
  7720  1E7C  00A3               	movwf	(?___flsub+3)^(0+128)
  7721  1E7D  1283               	bcf	3,5	;RP0=0, select bank0
  7722  1E7E  1303               	bcf	3,6	;RP1=0, select bank0
  7723  1E7F  085E               	movf	?___fladd+2,w
  7724  1E80  1683               	bsf	3,5	;RP0=1, select bank1
  7725  1E81  1303               	bcf	3,6	;RP1=0, select bank1
  7726  1E82  00A2               	movwf	(?___flsub+2)^(0+128)
  7727  1E83  1283               	bcf	3,5	;RP0=0, select bank0
  7728  1E84  1303               	bcf	3,6	;RP1=0, select bank0
  7729  1E85  085D               	movf	?___fladd+1,w
  7730  1E86  1683               	bsf	3,5	;RP0=1, select bank1
  7731  1E87  1303               	bcf	3,6	;RP1=0, select bank1
  7732  1E88  00A1               	movwf	(?___flsub+1)^(0+128)
  7733  1E89  1283               	bcf	3,5	;RP0=0, select bank0
  7734  1E8A  1303               	bcf	3,6	;RP1=0, select bank0
  7735  1E8B  085C               	movf	?___fladd,w
  7736  1E8C  1683               	bsf	3,5	;RP0=1, select bank1
  7737  1E8D  1303               	bcf	3,6	;RP1=0, select bank1
  7738  1E8E  00A0               	movwf	?___flsub^(0+128)
  7739  1E8F                     l722:
  7740  1E8F  0008               	return
  7741  1E90                     __end_of___flsub:
  7742                           
  7743                           	psect	text18
  7744  1578                     __ptext18:	
  7745 ;; *************** function ___fladd *****************
  7746 ;; Defined at:
  7747 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  b               4   60[BANK0 ] long 
  7750 ;;  a               4   64[BANK0 ] long 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  grs             1   79[BANK0 ] unsigned char 
  7753 ;;  bexp            1   78[BANK0 ] unsigned char 
  7754 ;;  aexp            1   77[BANK0 ] unsigned char 
  7755 ;;  signs           1   76[BANK0 ] unsigned char 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  4   60[BANK0 ] unsigned char 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0, btemp+1
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7765 ;;      Params:         0       8       0       0       0
  7766 ;;      Locals:         0       4       0       0       0
  7767 ;;      Temps:          0       8       0       0       0
  7768 ;;      Totals:         0      20       0       0       0
  7769 ;;Total ram usage:       20 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_sprintf
  7775 ;;		___flsub
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           
  7780                           ;psect for function ___fladd
  7781  1578                     ___fladd:
  7782  1578                     l2323:	
  7783                           ;incstack = 0
  7784                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7785                           
  7786  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7787  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7788  157A  085F               	movf	___fladd@b+3,w
  7789  157B  3980               	andlw	128
  7790  157C  00E4               	movwf	??___fladd
  7791  157D  0864               	movf	??___fladd,w
  7792  157E  00EC               	movwf	___fladd@signs
  7793  157F                     l2325:
  7794  157F  085F               	movf	___fladd@b+3,w
  7795  1580  00E4               	movwf	??___fladd
  7796  1581  0764               	addwf	??___fladd,w
  7797  1582  00E5               	movwf	??___fladd+1
  7798  1583  0865               	movf	??___fladd+1,w
  7799  1584  00EE               	movwf	___fladd@bexp
  7800  1585                     l2327:
  7801  1585  1FDE               	btfss	___fladd@b+2,7
  7802  1586  2D88               	goto	u3101
  7803  1587  2D89               	goto	u3100
  7804  1588                     u3101:
  7805  1588  2D8A               	goto	l2331
  7806  1589                     u3100:
  7807  1589                     l2329:
  7808  1589  146E               	bsf	___fladd@bexp,0
  7809  158A                     l2331:
  7810  158A  086E               	movf	___fladd@bexp,w
  7811  158B  1903               	btfsc	3,2
  7812  158C  2D8E               	goto	u3111
  7813  158D  2D8F               	goto	u3110
  7814  158E                     u3111:
  7815  158E  2D9F               	goto	l2341
  7816  158F                     u3110:
  7817  158F                     l2333:
  7818  158F  0A6E               	incf	___fladd@bexp,w
  7819  1590  1D03               	btfss	3,2
  7820  1591  2D93               	goto	u3121
  7821  1592  2D94               	goto	u3120
  7822  1593                     u3121:
  7823  1593  2D9C               	goto	l2337
  7824  1594                     u3120:
  7825  1594                     l2335:
  7826  1594  3000               	movlw	0
  7827  1595  00DF               	movwf	___fladd@b+3
  7828  1596  3000               	movlw	0
  7829  1597  00DE               	movwf	___fladd@b+2
  7830  1598  3000               	movlw	0
  7831  1599  00DD               	movwf	___fladd@b+1
  7832  159A  3000               	movlw	0
  7833  159B  00DC               	movwf	___fladd@b
  7834  159C                     l2337:
  7835  159C  17DE               	bsf	___fladd@b+2,7
  7836  159D                     l2339:
  7837  159D  01DF               	clrf	___fladd@b+3
  7838  159E  2DA7               	goto	l2343
  7839  159F                     l2341:
  7840  159F  3000               	movlw	0
  7841  15A0  00DF               	movwf	___fladd@b+3
  7842  15A1  3000               	movlw	0
  7843  15A2  00DE               	movwf	___fladd@b+2
  7844  15A3  3000               	movlw	0
  7845  15A4  00DD               	movwf	___fladd@b+1
  7846  15A5  3000               	movlw	0
  7847  15A6  00DC               	movwf	___fladd@b
  7848  15A7                     l2343:
  7849  15A7  0863               	movf	___fladd@a+3,w
  7850  15A8  3980               	andlw	128
  7851  15A9  00E4               	movwf	??___fladd
  7852  15AA  0864               	movf	??___fladd,w
  7853  15AB  00ED               	movwf	___fladd@aexp
  7854  15AC                     l2345:
  7855  15AC  086D               	movf	___fladd@aexp,w
  7856  15AD  066C               	xorwf	___fladd@signs,w
  7857  15AE  1903               	skipnz
  7858  15AF  2DB1               	goto	u3131
  7859  15B0  2DB2               	goto	u3130
  7860  15B1                     u3131:
  7861  15B1  2DB3               	goto	l2349
  7862  15B2                     u3130:
  7863  15B2                     l2347:
  7864  15B2  176C               	bsf	___fladd@signs,6
  7865  15B3                     l2349:
  7866  15B3  0863               	movf	___fladd@a+3,w
  7867  15B4  00E4               	movwf	??___fladd
  7868  15B5  0764               	addwf	??___fladd,w
  7869  15B6  00E5               	movwf	??___fladd+1
  7870  15B7  0865               	movf	??___fladd+1,w
  7871  15B8  00ED               	movwf	___fladd@aexp
  7872  15B9                     l2351:
  7873  15B9  1FE2               	btfss	___fladd@a+2,7
  7874  15BA  2DBC               	goto	u3141
  7875  15BB  2DBD               	goto	u3140
  7876  15BC                     u3141:
  7877  15BC  2DBE               	goto	l2355
  7878  15BD                     u3140:
  7879  15BD                     l2353:
  7880  15BD  146D               	bsf	___fladd@aexp,0
  7881  15BE                     l2355:
  7882  15BE  086D               	movf	___fladd@aexp,w
  7883  15BF  1903               	btfsc	3,2
  7884  15C0  2DC2               	goto	u3151
  7885  15C1  2DC3               	goto	u3150
  7886  15C2                     u3151:
  7887  15C2  2DD3               	goto	l2365
  7888  15C3                     u3150:
  7889  15C3                     l2357:
  7890  15C3  0A6D               	incf	___fladd@aexp,w
  7891  15C4  1D03               	btfss	3,2
  7892  15C5  2DC7               	goto	u3161
  7893  15C6  2DC8               	goto	u3160
  7894  15C7                     u3161:
  7895  15C7  2DD0               	goto	l2361
  7896  15C8                     u3160:
  7897  15C8                     l2359:
  7898  15C8  3000               	movlw	0
  7899  15C9  00E3               	movwf	___fladd@a+3
  7900  15CA  3000               	movlw	0
  7901  15CB  00E2               	movwf	___fladd@a+2
  7902  15CC  3000               	movlw	0
  7903  15CD  00E1               	movwf	___fladd@a+1
  7904  15CE  3000               	movlw	0
  7905  15CF  00E0               	movwf	___fladd@a
  7906  15D0                     l2361:
  7907  15D0  17E2               	bsf	___fladd@a+2,7
  7908  15D1                     l2363:
  7909  15D1  01E3               	clrf	___fladd@a+3
  7910  15D2  2DDB               	goto	l676
  7911  15D3                     l2365:
  7912  15D3  3000               	movlw	0
  7913  15D4  00E3               	movwf	___fladd@a+3
  7914  15D5  3000               	movlw	0
  7915  15D6  00E2               	movwf	___fladd@a+2
  7916  15D7  3000               	movlw	0
  7917  15D8  00E1               	movwf	___fladd@a+1
  7918  15D9  3000               	movlw	0
  7919  15DA  00E0               	movwf	___fladd@a
  7920  15DB                     l676:
  7921  15DB  086E               	movf	___fladd@bexp,w
  7922  15DC  026D               	subwf	___fladd@aexp,w
  7923  15DD  1803               	skipnc
  7924  15DE  2DE0               	goto	u3171
  7925  15DF  2DE1               	goto	u3170
  7926  15E0                     u3171:
  7927  15E0  2E25               	goto	l2401
  7928  15E1                     u3170:
  7929  15E1                     l2367:
  7930  15E1  1F6C               	btfss	___fladd@signs,6
  7931  15E2  2DE4               	goto	u3181
  7932  15E3  2DE5               	goto	u3180
  7933  15E4                     u3181:
  7934  15E4  2DE9               	goto	l2371
  7935  15E5                     u3180:
  7936  15E5                     l2369:
  7937  15E5  3080               	movlw	128
  7938  15E6  00E4               	movwf	??___fladd
  7939  15E7  0864               	movf	??___fladd,w
  7940  15E8  06EC               	xorwf	___fladd@signs,f
  7941  15E9                     l2371:
  7942  15E9  086E               	movf	___fladd@bexp,w
  7943  15EA  00E4               	movwf	??___fladd
  7944  15EB  0864               	movf	??___fladd,w
  7945  15EC  00EF               	movwf	___fladd@grs
  7946  15ED                     l2373:
  7947  15ED  086D               	movf	___fladd@aexp,w
  7948  15EE  00E4               	movwf	??___fladd
  7949  15EF  0864               	movf	??___fladd,w
  7950  15F0  00EE               	movwf	___fladd@bexp
  7951  15F1                     l2375:
  7952  15F1  086F               	movf	___fladd@grs,w
  7953  15F2  00E4               	movwf	??___fladd
  7954  15F3  0864               	movf	??___fladd,w
  7955  15F4  00ED               	movwf	___fladd@aexp
  7956  15F5                     l2377:
  7957  15F5  085C               	movf	___fladd@b,w
  7958  15F6  00E4               	movwf	??___fladd
  7959  15F7  0864               	movf	??___fladd,w
  7960  15F8  00EF               	movwf	___fladd@grs
  7961  15F9                     l2379:
  7962  15F9  0860               	movf	___fladd@a,w
  7963  15FA  00E4               	movwf	??___fladd
  7964  15FB  0864               	movf	??___fladd,w
  7965  15FC  00DC               	movwf	___fladd@b
  7966  15FD                     l2381:
  7967  15FD  086F               	movf	___fladd@grs,w
  7968  15FE  00E4               	movwf	??___fladd
  7969  15FF  0864               	movf	??___fladd,w
  7970  1600  00E0               	movwf	___fladd@a
  7971  1601                     l2383:
  7972  1601  085D               	movf	___fladd@b+1,w
  7973  1602  00E4               	movwf	??___fladd
  7974  1603  0864               	movf	??___fladd,w
  7975  1604  00EF               	movwf	___fladd@grs
  7976  1605                     l2385:
  7977  1605  0861               	movf	___fladd@a+1,w
  7978  1606  00E4               	movwf	??___fladd
  7979  1607  0864               	movf	??___fladd,w
  7980  1608  00DD               	movwf	___fladd@b+1
  7981  1609                     l2387:
  7982  1609  086F               	movf	___fladd@grs,w
  7983  160A  00E4               	movwf	??___fladd
  7984  160B  0864               	movf	??___fladd,w
  7985  160C  00E1               	movwf	___fladd@a+1
  7986  160D                     l2389:
  7987  160D  085E               	movf	___fladd@b+2,w
  7988  160E  00E4               	movwf	??___fladd
  7989  160F  0864               	movf	??___fladd,w
  7990  1610  00EF               	movwf	___fladd@grs
  7991  1611                     l2391:
  7992  1611  0862               	movf	___fladd@a+2,w
  7993  1612  00E4               	movwf	??___fladd
  7994  1613  0864               	movf	??___fladd,w
  7995  1614  00DE               	movwf	___fladd@b+2
  7996  1615                     l2393:
  7997  1615  086F               	movf	___fladd@grs,w
  7998  1616  00E4               	movwf	??___fladd
  7999  1617  0864               	movf	??___fladd,w
  8000  1618  00E2               	movwf	___fladd@a+2
  8001  1619                     l2395:
  8002  1619  085F               	movf	___fladd@b+3,w
  8003  161A  00E4               	movwf	??___fladd
  8004  161B  0864               	movf	??___fladd,w
  8005  161C  00EF               	movwf	___fladd@grs
  8006  161D                     l2397:
  8007  161D  0863               	movf	___fladd@a+3,w
  8008  161E  00E4               	movwf	??___fladd
  8009  161F  0864               	movf	??___fladd,w
  8010  1620  00DF               	movwf	___fladd@b+3
  8011  1621                     l2399:
  8012  1621  086F               	movf	___fladd@grs,w
  8013  1622  00E4               	movwf	??___fladd
  8014  1623  0864               	movf	??___fladd,w
  8015  1624  00E3               	movwf	___fladd@a+3
  8016  1625                     l2401:
  8017  1625  01EF               	clrf	___fladd@grs
  8018  1626                     l2403:
  8019  1626  086D               	movf	___fladd@aexp,w
  8020  1627  00E4               	movwf	??___fladd
  8021  1628  01E5               	clrf	??___fladd+1
  8022  1629  0865               	movf	??___fladd+1,w
  8023  162A  00E7               	movwf	??___fladd+3
  8024  162B  086E               	movf	___fladd@bexp,w
  8025  162C  0264               	subwf	??___fladd,w
  8026  162D  00E6               	movwf	??___fladd+2
  8027  162E  1C03               	skipc
  8028  162F  03E7               	decf	??___fladd+3,f
  8029  1630  0867               	movf	??___fladd+3,w
  8030  1631  3A80               	xorlw	128
  8031  1632  00FF               	movwf	btemp+1
  8032  1633  3080               	movlw	128
  8033  1634  027F               	subwf	btemp+1,w
  8034  1635  1D03               	skipz
  8035  1636  2E39               	goto	u3195
  8036  1637  301A               	movlw	26
  8037  1638  0266               	subwf	??___fladd+2,w
  8038  1639                     u3195:
  8039  1639  1C03               	skipc
  8040  163A  2E3C               	goto	u3191
  8041  163B  2E3D               	goto	u3190
  8042  163C                     u3191:
  8043  163C  2E7A               	goto	l2419
  8044  163D                     u3190:
  8045  163D                     l2405:
  8046  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8047  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8048  163F  085F               	movf	___fladd@b+3,w
  8049  1640  045E               	iorwf	___fladd@b+2,w
  8050  1641  045D               	iorwf	___fladd@b+1,w
  8051  1642  045C               	iorwf	___fladd@b,w
  8052  1643  1D03               	skipz
  8053  1644  2E46               	goto	u3201
  8054  1645  2E48               	goto	u3200
  8055  1646                     u3201:
  8056  1646  3001               	movlw	1
  8057  1647  2E49               	goto	u3210
  8058  1648                     u3200:
  8059  1648  3000               	movlw	0
  8060  1649                     u3210:
  8061  1649  00E4               	movwf	??___fladd
  8062  164A  0864               	movf	??___fladd,w
  8063  164B  00EF               	movwf	___fladd@grs
  8064  164C  3000               	movlw	0
  8065  164D  00DF               	movwf	___fladd@b+3
  8066  164E  3000               	movlw	0
  8067  164F  00DE               	movwf	___fladd@b+2
  8068  1650  3000               	movlw	0
  8069  1651  00DD               	movwf	___fladd@b+1
  8070  1652  3000               	movlw	0
  8071  1653  00DC               	movwf	___fladd@b
  8072  1654  086D               	movf	___fladd@aexp,w
  8073  1655  00E4               	movwf	??___fladd
  8074  1656  0864               	movf	??___fladd,w
  8075  1657  00EE               	movwf	___fladd@bexp
  8076  1658  2E82               	goto	l680
  8077  1659                     l682:
  8078  1659  1C6F               	btfss	___fladd@grs,0
  8079  165A  2E5C               	goto	u3221
  8080  165B  2E5D               	goto	u3220
  8081  165C                     u3221:
  8082  165C  2E66               	goto	l2409
  8083  165D                     u3220:
  8084  165D                     l2407:
  8085  165D  086F               	movf	___fladd@grs,w
  8086  165E  00E4               	movwf	??___fladd
  8087  165F  1003               	clrc
  8088  1660  0C64               	rrf	??___fladd,w
  8089  1661  3801               	iorlw	1
  8090  1662  00E5               	movwf	??___fladd+1
  8091  1663  0865               	movf	??___fladd+1,w
  8092  1664  00EF               	movwf	___fladd@grs
  8093  1665  2E68               	goto	l2411
  8094  1666                     l2409:
  8095  1666  1003               	clrc
  8096  1667  0CEF               	rrf	___fladd@grs,f
  8097  1668                     l2411:
  8098  1668  1C5C               	btfss	___fladd@b,0
  8099  1669  2E6B               	goto	u3231
  8100  166A  2E6C               	goto	u3230
  8101  166B                     u3231:
  8102  166B  2E6D               	goto	l2415
  8103  166C                     u3230:
  8104  166C                     l2413:
  8105  166C  17EF               	bsf	___fladd@grs,7
  8106  166D                     l2415:
  8107  166D  3001               	movlw	1
  8108  166E  00E4               	movwf	??___fladd
  8109  166F                     u3245:
  8110  166F  0D5F               	rlf	___fladd@b+3,w
  8111  1670  0CDF               	rrf	___fladd@b+3,f
  8112  1671  0CDE               	rrf	___fladd@b+2,f
  8113  1672  0CDD               	rrf	___fladd@b+1,f
  8114  1673  0CDC               	rrf	___fladd@b,f
  8115  1674  0BE4               	decfsz	??___fladd& (0+127),f
  8116  1675  2E6F               	goto	u3245
  8117  1676                     l2417:
  8118  1676  3001               	movlw	1
  8119  1677  00E4               	movwf	??___fladd
  8120  1678  0864               	movf	??___fladd,w
  8121  1679  07EE               	addwf	___fladd@bexp,f
  8122  167A                     l2419:
  8123  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8124  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8125  167C  086D               	movf	___fladd@aexp,w
  8126  167D  026E               	subwf	___fladd@bexp,w
  8127  167E  1C03               	skipc
  8128  167F  2E81               	goto	u3251
  8129  1680  2E82               	goto	u3250
  8130  1681                     u3251:
  8131  1681  2E59               	goto	l682
  8132  1682                     u3250:
  8133  1682                     l680:
  8134  1682  1B6C               	btfsc	___fladd@signs,6
  8135  1683  2E85               	goto	u3261
  8136  1684  2E86               	goto	u3260
  8137  1685                     u3261:
  8138  1685  2ED1               	goto	l2445
  8139  1686                     u3260:
  8140  1686                     l2421:
  8141  1686  086E               	movf	___fladd@bexp,w
  8142  1687  1D03               	btfss	3,2
  8143  1688  2E8A               	goto	u3271
  8144  1689  2E8B               	goto	u3270
  8145  168A                     u3271:
  8146  168A  2E94               	goto	l2427
  8147  168B                     u3270:
  8148  168B                     l2423:
  8149  168B  3000               	movlw	0
  8150  168C  00DF               	movwf	?___fladd+3
  8151  168D  3000               	movlw	0
  8152  168E  00DE               	movwf	?___fladd+2
  8153  168F  3000               	movlw	0
  8154  1690  00DD               	movwf	?___fladd+1
  8155  1691  3000               	movlw	0
  8156  1692  00DC               	movwf	?___fladd
  8157  1693  2FFF               	goto	l689
  8158  1694                     l2427:
  8159  1694  0860               	movf	___fladd@a,w
  8160  1695  07DC               	addwf	___fladd@b,f
  8161  1696  0861               	movf	___fladd@a+1,w
  8162  1697  1103               	clrz
  8163  1698  1803               	skipnc
  8164  1699  3E01               	addlw	1
  8165  169A  1903               	skipnz
  8166  169B  2E9D               	goto	u3281
  8167  169C  07DD               	addwf	___fladd@b+1,f
  8168  169D                     u3281:
  8169  169D  0862               	movf	___fladd@a+2,w
  8170  169E  1103               	clrz
  8171  169F  1803               	skipnc
  8172  16A0  3E01               	addlw	1
  8173  16A1  1903               	skipnz
  8174  16A2  2EA4               	goto	u3282
  8175  16A3  07DE               	addwf	___fladd@b+2,f
  8176  16A4                     u3282:
  8177  16A4  0863               	movf	___fladd@a+3,w
  8178  16A5  1103               	clrz
  8179  16A6  1803               	skipnc
  8180  16A7  3E01               	addlw	1
  8181  16A8  1903               	skipnz
  8182  16A9  2EAB               	goto	u3283
  8183  16AA  07DF               	addwf	___fladd@b+3,f
  8184  16AB                     u3283:
  8185  16AB                     l2429:
  8186  16AB  1C5F               	btfss	___fladd@b+3,0
  8187  16AC  2EAE               	goto	u3291
  8188  16AD  2EAF               	goto	u3290
  8189  16AE                     u3291:
  8190  16AE  2F85               	goto	l2479
  8191  16AF                     u3290:
  8192  16AF                     l2431:
  8193  16AF  1C6F               	btfss	___fladd@grs,0
  8194  16B0  2EB2               	goto	u3301
  8195  16B1  2EB3               	goto	u3300
  8196  16B2                     u3301:
  8197  16B2  2EBC               	goto	l2435
  8198  16B3                     u3300:
  8199  16B3                     l2433:
  8200  16B3  086F               	movf	___fladd@grs,w
  8201  16B4  00E4               	movwf	??___fladd
  8202  16B5  1003               	clrc
  8203  16B6  0C64               	rrf	??___fladd,w
  8204  16B7  3801               	iorlw	1
  8205  16B8  00E5               	movwf	??___fladd+1
  8206  16B9  0865               	movf	??___fladd+1,w
  8207  16BA  00EF               	movwf	___fladd@grs
  8208  16BB  2EBE               	goto	l2437
  8209  16BC                     l2435:
  8210  16BC  1003               	clrc
  8211  16BD  0CEF               	rrf	___fladd@grs,f
  8212  16BE                     l2437:
  8213  16BE  1C5C               	btfss	___fladd@b,0
  8214  16BF  2EC1               	goto	u3311
  8215  16C0  2EC2               	goto	u3310
  8216  16C1                     u3311:
  8217  16C1  2EC3               	goto	l2441
  8218  16C2                     u3310:
  8219  16C2                     l2439:
  8220  16C2  17EF               	bsf	___fladd@grs,7
  8221  16C3                     l2441:
  8222  16C3  3001               	movlw	1
  8223  16C4  00E4               	movwf	??___fladd
  8224  16C5                     u3325:
  8225  16C5  0D5F               	rlf	___fladd@b+3,w
  8226  16C6  0CDF               	rrf	___fladd@b+3,f
  8227  16C7  0CDE               	rrf	___fladd@b+2,f
  8228  16C8  0CDD               	rrf	___fladd@b+1,f
  8229  16C9  0CDC               	rrf	___fladd@b,f
  8230  16CA  0BE4               	decfsz	??___fladd& (0+127),f
  8231  16CB  2EC5               	goto	u3325
  8232  16CC                     l2443:
  8233  16CC  3001               	movlw	1
  8234  16CD  00E4               	movwf	??___fladd
  8235  16CE  0864               	movf	??___fladd,w
  8236  16CF  07EE               	addwf	___fladd@bexp,f
  8237  16D0  2F85               	goto	l2479
  8238  16D1                     l2445:
  8239  16D1  085F               	movf	___fladd@b+3,w
  8240  16D2  3A80               	xorlw	128
  8241  16D3  00FF               	movwf	btemp+1
  8242  16D4  0863               	movf	___fladd@a+3,w
  8243  16D5  3A80               	xorlw	128
  8244  16D6  027F               	subwf	btemp+1,w
  8245  16D7  1D03               	skipz
  8246  16D8  2EE3               	goto	u3333
  8247  16D9  0862               	movf	___fladd@a+2,w
  8248  16DA  025E               	subwf	___fladd@b+2,w
  8249  16DB  1D03               	skipz
  8250  16DC  2EE3               	goto	u3333
  8251  16DD  0861               	movf	___fladd@a+1,w
  8252  16DE  025D               	subwf	___fladd@b+1,w
  8253  16DF  1D03               	skipz
  8254  16E0  2EE3               	goto	u3333
  8255  16E1  0860               	movf	___fladd@a,w
  8256  16E2  025C               	subwf	___fladd@b,w
  8257  16E3                     u3333:
  8258  16E3  1803               	skipnc
  8259  16E4  2EE6               	goto	u3331
  8260  16E5  2EE7               	goto	u3330
  8261  16E6                     u3331:
  8262  16E6  2F3F               	goto	l2455
  8263  16E7                     u3330:
  8264  16E7                     l2447:
  8265  16E7  30FF               	movlw	255
  8266  16E8  00E4               	movwf	??___fladd
  8267  16E9  30FF               	movlw	255
  8268  16EA  00E5               	movwf	??___fladd+1
  8269  16EB  30FF               	movlw	255
  8270  16EC  00E6               	movwf	??___fladd+2
  8271  16ED  30FF               	movlw	255
  8272  16EE  00E7               	movwf	??___fladd+3
  8273  16EF  0860               	movf	___fladd@a,w
  8274  16F0  00E8               	movwf	??___fladd+4
  8275  16F1  0861               	movf	___fladd@a+1,w
  8276  16F2  00E9               	movwf	??___fladd+5
  8277  16F3  0862               	movf	___fladd@a+2,w
  8278  16F4  00EA               	movwf	??___fladd+6
  8279  16F5  0863               	movf	___fladd@a+3,w
  8280  16F6  00EB               	movwf	??___fladd+7
  8281  16F7  085C               	movf	___fladd@b,w
  8282  16F8  02E8               	subwf	??___fladd+4,f
  8283  16F9  085D               	movf	___fladd@b+1,w
  8284  16FA  1C03               	skipc
  8285  16FB  0F5D               	incfsz	___fladd@b+1,w
  8286  16FC  2EFE               	goto	u3341
  8287  16FD  2EFF               	goto	u3342
  8288  16FE                     u3341:
  8289  16FE  02E9               	subwf	??___fladd+5,f
  8290  16FF                     u3342:
  8291  16FF  085E               	movf	___fladd@b+2,w
  8292  1700  1C03               	skipc
  8293  1701  0F5E               	incfsz	___fladd@b+2,w
  8294  1702  2F04               	goto	u3343
  8295  1703  2F05               	goto	u3344
  8296  1704                     u3343:
  8297  1704  02EA               	subwf	??___fladd+6,f
  8298  1705                     u3344:
  8299  1705  085F               	movf	___fladd@b+3,w
  8300  1706  1C03               	skipc
  8301  1707  0F5F               	incfsz	___fladd@b+3,w
  8302  1708  2F0A               	goto	u3345
  8303  1709  2F0B               	goto	u3346
  8304  170A                     u3345:
  8305  170A  02EB               	subwf	??___fladd+7,f
  8306  170B                     u3346:
  8307  170B  0868               	movf	??___fladd+4,w
  8308  170C  07E4               	addwf	??___fladd,f
  8309  170D  0869               	movf	??___fladd+5,w
  8310  170E  1803               	skipnc
  8311  170F  0F69               	incfsz	??___fladd+5,w
  8312  1710  2F12               	goto	u3350
  8313  1711  2F13               	goto	u3351
  8314  1712                     u3350:
  8315  1712  07E5               	addwf	??___fladd+1,f
  8316  1713                     u3351:
  8317  1713  086A               	movf	??___fladd+6,w
  8318  1714  1803               	skipnc
  8319  1715  0F6A               	incfsz	??___fladd+6,w
  8320  1716  2F18               	goto	u3352
  8321  1717  2F19               	goto	u3353
  8322  1718                     u3352:
  8323  1718  07E6               	addwf	??___fladd+2,f
  8324  1719                     u3353:
  8325  1719  086B               	movf	??___fladd+7,w
  8326  171A  1803               	skipnc
  8327  171B  0A6B               	incf	??___fladd+7,w
  8328  171C  07E7               	addwf	??___fladd+3,f
  8329  171D  0867               	movf	??___fladd+3,w
  8330  171E  00DF               	movwf	___fladd@b+3
  8331  171F  0866               	movf	??___fladd+2,w
  8332  1720  00DE               	movwf	___fladd@b+2
  8333  1721  0865               	movf	??___fladd+1,w
  8334  1722  00DD               	movwf	___fladd@b+1
  8335  1723  0864               	movf	??___fladd,w
  8336  1724  00DC               	movwf	___fladd@b
  8337  1725                     l2449:
  8338  1725  3080               	movlw	128
  8339  1726  00E4               	movwf	??___fladd
  8340  1727  0864               	movf	??___fladd,w
  8341  1728  06EC               	xorwf	___fladd@signs,f
  8342  1729  09EF               	comf	___fladd@grs,f
  8343  172A  0AEF               	incf	___fladd@grs,f
  8344  172B                     l2451:
  8345  172B  086F               	movf	___fladd@grs,w
  8346  172C  1D03               	btfss	3,2
  8347  172D  2F2F               	goto	u3361
  8348  172E  2F30               	goto	u3360
  8349  172F                     u3361:
  8350  172F  2F4D               	goto	l697
  8351  1730                     u3360:
  8352  1730                     l2453:
  8353  1730  3001               	movlw	1
  8354  1731  07DC               	addwf	___fladd@b,f
  8355  1732  3000               	movlw	0
  8356  1733  1803               	skipnc
  8357  1734  3001               	movlw	1
  8358  1735  07DD               	addwf	___fladd@b+1,f
  8359  1736  3000               	movlw	0
  8360  1737  1803               	skipnc
  8361  1738  3001               	movlw	1
  8362  1739  07DE               	addwf	___fladd@b+2,f
  8363  173A  3000               	movlw	0
  8364  173B  1803               	skipnc
  8365  173C  3001               	movlw	1
  8366  173D  07DF               	addwf	___fladd@b+3,f
  8367  173E  2F4D               	goto	l697
  8368  173F                     l2455:
  8369  173F  0860               	movf	___fladd@a,w
  8370  1740  02DC               	subwf	___fladd@b,f
  8371  1741  0861               	movf	___fladd@a+1,w
  8372  1742  1C03               	skipc
  8373  1743  0F61               	incfsz	___fladd@a+1,w
  8374  1744  02DD               	subwf	___fladd@b+1,f
  8375  1745  0862               	movf	___fladd@a+2,w
  8376  1746  1C03               	skipc
  8377  1747  0F62               	incfsz	___fladd@a+2,w
  8378  1748  02DE               	subwf	___fladd@b+2,f
  8379  1749  0863               	movf	___fladd@a+3,w
  8380  174A  1C03               	skipc
  8381  174B  0F63               	incfsz	___fladd@a+3,w
  8382  174C  02DF               	subwf	___fladd@b+3,f
  8383  174D                     l697:
  8384  174D  085F               	movf	___fladd@b+3,w
  8385  174E  045E               	iorwf	___fladd@b+2,w
  8386  174F  045D               	iorwf	___fladd@b+1,w
  8387  1750  045C               	iorwf	___fladd@b,w
  8388  1751  1D03               	skipz
  8389  1752  2F54               	goto	u3371
  8390  1753  2F55               	goto	u3370
  8391  1754                     u3371:
  8392  1754  2F81               	goto	l2477
  8393  1755                     u3370:
  8394  1755                     l2457:
  8395  1755  086F               	movf	___fladd@grs,w
  8396  1756  1D03               	btfss	3,2
  8397  1757  2F59               	goto	u3381
  8398  1758  2F5A               	goto	u3380
  8399  1759                     u3381:
  8400  1759  2F81               	goto	l2477
  8401  175A                     u3380:
  8402  175A                     l2459:
  8403  175A  3000               	movlw	0
  8404  175B  00DF               	movwf	?___fladd+3
  8405  175C  3000               	movlw	0
  8406  175D  00DE               	movwf	?___fladd+2
  8407  175E  3000               	movlw	0
  8408  175F  00DD               	movwf	?___fladd+1
  8409  1760  3000               	movlw	0
  8410  1761  00DC               	movwf	?___fladd
  8411  1762  2FFF               	goto	l689
  8412  1763                     l2463:
  8413  1763  3001               	movlw	1
  8414  1764  00E4               	movwf	??___fladd
  8415  1765                     u3395:
  8416  1765  1003               	clrc
  8417  1766  0DDC               	rlf	___fladd@b,f
  8418  1767  0DDD               	rlf	___fladd@b+1,f
  8419  1768  0DDE               	rlf	___fladd@b+2,f
  8420  1769  0DDF               	rlf	___fladd@b+3,f
  8421  176A  0BE4               	decfsz	??___fladd,f
  8422  176B  2F65               	goto	u3395
  8423  176C                     l2465:
  8424  176C  1FEF               	btfss	___fladd@grs,7
  8425  176D  2F6F               	goto	u3401
  8426  176E  2F70               	goto	u3400
  8427  176F                     u3401:
  8428  176F  2F71               	goto	l701
  8429  1770                     u3400:
  8430  1770                     l2467:
  8431  1770  145C               	bsf	___fladd@b,0
  8432  1771                     l701:
  8433  1771  1C6F               	btfss	___fladd@grs,0
  8434  1772  2F74               	goto	u3411
  8435  1773  2F75               	goto	u3410
  8436  1774                     u3411:
  8437  1774  2F78               	goto	l2471
  8438  1775                     u3410:
  8439  1775                     l2469:
  8440  1775  1403               	setc
  8441  1776  0DEF               	rlf	___fladd@grs,f
  8442  1777  2F7A               	goto	l2473
  8443  1778                     l2471:
  8444  1778  1003               	clrc
  8445  1779  0DEF               	rlf	___fladd@grs,f
  8446  177A                     l2473:
  8447  177A  086E               	movf	___fladd@bexp,w
  8448  177B  1903               	btfsc	3,2
  8449  177C  2F7E               	goto	u3421
  8450  177D  2F7F               	goto	u3420
  8451  177E                     u3421:
  8452  177E  2F81               	goto	l2477
  8453  177F                     u3420:
  8454  177F                     l2475:
  8455  177F  3001               	movlw	1
  8456  1780  02EE               	subwf	___fladd@bexp,f
  8457  1781                     l2477:
  8458  1781  1FDE               	btfss	___fladd@b+2,7
  8459  1782  2F84               	goto	u3431
  8460  1783  2F85               	goto	u3430
  8461  1784                     u3431:
  8462  1784  2F63               	goto	l2463
  8463  1785                     u3430:
  8464  1785                     l2479:
  8465  1785  01ED               	clrf	___fladd@aexp
  8466  1786                     l2481:
  8467  1786  1FEF               	btfss	___fladd@grs,7
  8468  1787  2F89               	goto	u3441
  8469  1788  2F8A               	goto	u3440
  8470  1789                     u3441:
  8471  1789  2F98               	goto	l2489
  8472  178A                     u3440:
  8473  178A                     l2483:
  8474  178A  086F               	movf	___fladd@grs,w
  8475  178B  397F               	andlw	127
  8476  178C  1903               	btfsc	3,2
  8477  178D  2F8F               	goto	u3451
  8478  178E  2F90               	goto	u3450
  8479  178F                     u3451:
  8480  178F  2F93               	goto	l707
  8481  1790                     u3450:
  8482  1790                     l2485:
  8483  1790  01ED               	clrf	___fladd@aexp
  8484  1791  0AED               	incf	___fladd@aexp,f
  8485  1792  2F98               	goto	l2489
  8486  1793                     l707:
  8487  1793  1C5C               	btfss	___fladd@b,0
  8488  1794  2F96               	goto	u3461
  8489  1795  2F97               	goto	u3460
  8490  1796                     u3461:
  8491  1796  2F98               	goto	l2489
  8492  1797                     u3460:
  8493  1797  2F90               	goto	l2485
  8494  1798                     l2489:
  8495  1798  086D               	movf	___fladd@aexp,w
  8496  1799  1903               	btfsc	3,2
  8497  179A  2F9C               	goto	u3471
  8498  179B  2F9D               	goto	u3470
  8499  179C                     u3471:
  8500  179C  2FD1               	goto	l710
  8501  179D                     u3470:
  8502  179D                     l2491:
  8503  179D  3001               	movlw	1
  8504  179E  07DC               	addwf	___fladd@b,f
  8505  179F  3000               	movlw	0
  8506  17A0  1803               	skipnc
  8507  17A1  3001               	movlw	1
  8508  17A2  07DD               	addwf	___fladd@b+1,f
  8509  17A3  3000               	movlw	0
  8510  17A4  1803               	skipnc
  8511  17A5  3001               	movlw	1
  8512  17A6  07DE               	addwf	___fladd@b+2,f
  8513  17A7  3000               	movlw	0
  8514  17A8  1803               	skipnc
  8515  17A9  3001               	movlw	1
  8516  17AA  07DF               	addwf	___fladd@b+3,f
  8517  17AB                     l2493:
  8518  17AB  1C5F               	btfss	___fladd@b+3,0
  8519  17AC  2FAE               	goto	u3481
  8520  17AD  2FAF               	goto	u3480
  8521  17AE                     u3481:
  8522  17AE  2FD1               	goto	l710
  8523  17AF                     u3480:
  8524  17AF                     l2495:
  8525  17AF  085C               	movf	___fladd@b,w
  8526  17B0  00E4               	movwf	??___fladd
  8527  17B1  085D               	movf	___fladd@b+1,w
  8528  17B2  00E5               	movwf	??___fladd+1
  8529  17B3  085E               	movf	___fladd@b+2,w
  8530  17B4  00E6               	movwf	??___fladd+2
  8531  17B5  085F               	movf	___fladd@b+3,w
  8532  17B6  00E7               	movwf	??___fladd+3
  8533  17B7  3001               	movlw	1
  8534  17B8  00E8               	movwf	??___fladd+4
  8535  17B9                     u3495:
  8536  17B9  0D67               	rlf	??___fladd+3,w
  8537  17BA  0CE7               	rrf	??___fladd+3,f
  8538  17BB  0CE6               	rrf	??___fladd+2,f
  8539  17BC  0CE5               	rrf	??___fladd+1,f
  8540  17BD  0CE4               	rrf	??___fladd,f
  8541  17BE                     u3490:
  8542  17BE  0BE8               	decfsz	??___fladd+4,f
  8543  17BF  2FB9               	goto	u3495
  8544  17C0  0867               	movf	??___fladd+3,w
  8545  17C1  00DF               	movwf	___fladd@b+3
  8546  17C2  0866               	movf	??___fladd+2,w
  8547  17C3  00DE               	movwf	___fladd@b+2
  8548  17C4  0865               	movf	??___fladd+1,w
  8549  17C5  00DD               	movwf	___fladd@b+1
  8550  17C6  0864               	movf	??___fladd,w
  8551  17C7  00DC               	movwf	___fladd@b
  8552  17C8  0A6E               	incf	___fladd@bexp,w
  8553  17C9  1903               	btfsc	3,2
  8554  17CA  2FCC               	goto	u3501
  8555  17CB  2FCD               	goto	u3500
  8556  17CC                     u3501:
  8557  17CC  2FD1               	goto	l710
  8558  17CD                     u3500:
  8559  17CD                     l2497:
  8560  17CD  3001               	movlw	1
  8561  17CE  00E4               	movwf	??___fladd
  8562  17CF  0864               	movf	??___fladd,w
  8563  17D0  07EE               	addwf	___fladd@bexp,f
  8564  17D1                     l710:
  8565  17D1  0A6E               	incf	___fladd@bexp,w
  8566  17D2  1903               	btfsc	3,2
  8567  17D3  2FD5               	goto	u3511
  8568  17D4  2FD6               	goto	u3510
  8569  17D5                     u3511:
  8570  17D5  2FDB               	goto	l2501
  8571  17D6                     u3510:
  8572  17D6                     l2499:
  8573  17D6  086E               	movf	___fladd@bexp,w
  8574  17D7  1D03               	btfss	3,2
  8575  17D8  2FDA               	goto	u3521
  8576  17D9  2FDB               	goto	u3520
  8577  17DA                     u3521:
  8578  17DA  2FE9               	goto	l2507
  8579  17DB                     u3520:
  8580  17DB                     l2501:
  8581  17DB  3000               	movlw	0
  8582  17DC  00DF               	movwf	___fladd@b+3
  8583  17DD  3000               	movlw	0
  8584  17DE  00DE               	movwf	___fladd@b+2
  8585  17DF  3000               	movlw	0
  8586  17E0  00DD               	movwf	___fladd@b+1
  8587  17E1  3000               	movlw	0
  8588  17E2  00DC               	movwf	___fladd@b
  8589  17E3                     l2503:
  8590  17E3  086E               	movf	___fladd@bexp,w
  8591  17E4  1D03               	btfss	3,2
  8592  17E5  2FE7               	goto	u3531
  8593  17E6  2FE8               	goto	u3530
  8594  17E7                     u3531:
  8595  17E7  2FE9               	goto	l2507
  8596  17E8                     u3530:
  8597  17E8                     l2505:
  8598  17E8  01EC               	clrf	___fladd@signs
  8599  17E9                     l2507:
  8600  17E9  1C6E               	btfss	___fladd@bexp,0
  8601  17EA  2FEC               	goto	u3541
  8602  17EB  2FED               	goto	u3540
  8603  17EC                     u3541:
  8604  17EC  2FEF               	goto	l2511
  8605  17ED                     u3540:
  8606  17ED                     l2509:
  8607  17ED  17DE               	bsf	___fladd@b+2,7
  8608  17EE  2FF3               	goto	l718
  8609  17EF                     l2511:
  8610  17EF  307F               	movlw	127
  8611  17F0  00E4               	movwf	??___fladd
  8612  17F1  0864               	movf	??___fladd,w
  8613  17F2  05DE               	andwf	___fladd@b+2,f
  8614  17F3                     l718:
  8615  17F3  086E               	movf	___fladd@bexp,w
  8616  17F4  00E4               	movwf	??___fladd
  8617  17F5  1003               	clrc
  8618  17F6  0C64               	rrf	??___fladd,w
  8619  17F7  00E5               	movwf	??___fladd+1
  8620  17F8  0865               	movf	??___fladd+1,w
  8621  17F9  00DF               	movwf	___fladd@b+3
  8622  17FA                     l2513:
  8623  17FA  1FEC               	btfss	___fladd@signs,7
  8624  17FB  2FFD               	goto	u3551
  8625  17FC  2FFE               	goto	u3550
  8626  17FD                     u3551:
  8627  17FD  2FFF               	goto	l719
  8628  17FE                     u3550:
  8629  17FE                     l2515:
  8630  17FE  17DF               	bsf	___fladd@b+3,7
  8631  17FF                     l719:
  8632  17FF                     l689:
  8633  17FF  0008               	return
  8634  1800                     __end_of___fladd:
  8635                           
  8636                           	psect	text19
  8637  1BF6                     __ptext19:	
  8638 ;; *************** function ___flneg *****************
  8639 ;; Defined at:
  8640 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flneg.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  f1              4    0[COMMON] unsigned char 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  4    0[COMMON] unsigned char 
  8647 ;; Registers used:
  8648 ;;		wreg
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8654 ;;      Params:         4       0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0
  8657 ;;      Totals:         4       0       0       0       0
  8658 ;;Total ram usage:        4 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; This function calls:
  8661 ;;		Nothing
  8662 ;; This function is called by:
  8663 ;;		_sprintf
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           
  8668                           ;psect for function ___flneg
  8669  1BF6                     ___flneg:
  8670  1BF6                     l2923:	
  8671                           ;incstack = 0
  8672                           ; Regs used in ___flneg: [wreg]
  8673                           
  8674  1BF6  0873               	movf	___flneg@f1+3,w
  8675  1BF7  0472               	iorwf	___flneg@f1+2,w
  8676  1BF8  0471               	iorwf	___flneg@f1+1,w
  8677  1BF9  0470               	iorwf	___flneg@f1,w
  8678  1BFA  1903               	skipnz
  8679  1BFB  2BFD               	goto	u4671
  8680  1BFC  2BFE               	goto	u4670
  8681  1BFD                     u4671:
  8682  1BFD  2C00               	goto	l2927
  8683  1BFE                     u4670:
  8684  1BFE                     l2925:
  8685  1BFE  3080               	movlw	128
  8686  1BFF  06F3               	xorwf	___flneg@f1+3,f
  8687  1C00                     l2927:
  8688  1C00                     l548:
  8689  1C00  0008               	return
  8690  1C01                     __end_of___flneg:
  8691                           
  8692                           	psect	text20
  8693  10EE                     __ptext20:	
  8694 ;; *************** function ___flge *****************
  8695 ;; Defined at:
  8696 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flge.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  ff1             4    0[COMMON] unsigned char 
  8699 ;;  ff2             4    4[COMMON] unsigned char 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;		None
  8702 ;; Return value:  Size  Location     Type
  8703 ;;		None               void
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8711 ;;      Params:         8       0       0       0       0
  8712 ;;      Locals:         0       0       0       0       0
  8713 ;;      Temps:          4       0       0       0       0
  8714 ;;      Totals:        12       0       0       0       0
  8715 ;;Total ram usage:       12 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; This function calls:
  8718 ;;		Nothing
  8719 ;; This function is called by:
  8720 ;;		_main
  8721 ;;		_sprintf
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           
  8726                           ;psect for function ___flge
  8727  10EE                     ___flge:
  8728  10EE                     l2903:	
  8729                           ;incstack = 0
  8730                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8731                           
  8732  10EE  3000               	movlw	0
  8733  10EF  0570               	andwf	___flge@ff1,w
  8734  10F0  00F8               	movwf	??___flge
  8735  10F1  3000               	movlw	0
  8736  10F2  0571               	andwf	___flge@ff1+1,w
  8737  10F3  00F9               	movwf	??___flge+1
  8738  10F4  3080               	movlw	128
  8739  10F5  0572               	andwf	___flge@ff1+2,w
  8740  10F6  00FA               	movwf	??___flge+2
  8741  10F7  307F               	movlw	127
  8742  10F8  0573               	andwf	___flge@ff1+3,w
  8743  10F9  00FB               	movwf	??___flge+3
  8744  10FA  087B               	movf	??___flge+3,w
  8745  10FB  047A               	iorwf	??___flge+2,w
  8746  10FC  0479               	iorwf	??___flge+1,w
  8747  10FD  0478               	iorwf	??___flge,w
  8748  10FE  1D03               	skipz
  8749  10FF  2901               	goto	u4601
  8750  1100  2902               	goto	u4600
  8751  1101                     u4601:
  8752  1101  290A               	goto	l540
  8753  1102                     u4600:
  8754  1102                     l2905:
  8755  1102  3000               	movlw	0
  8756  1103  00F3               	movwf	___flge@ff1+3
  8757  1104  3000               	movlw	0
  8758  1105  00F2               	movwf	___flge@ff1+2
  8759  1106  3000               	movlw	0
  8760  1107  00F1               	movwf	___flge@ff1+1
  8761  1108  3000               	movlw	0
  8762  1109  00F0               	movwf	___flge@ff1
  8763  110A                     l540:
  8764  110A  3000               	movlw	0
  8765  110B  0574               	andwf	___flge@ff2,w
  8766  110C  00F8               	movwf	??___flge
  8767  110D  3000               	movlw	0
  8768  110E  0575               	andwf	___flge@ff2+1,w
  8769  110F  00F9               	movwf	??___flge+1
  8770  1110  3080               	movlw	128
  8771  1111  0576               	andwf	___flge@ff2+2,w
  8772  1112  00FA               	movwf	??___flge+2
  8773  1113  307F               	movlw	127
  8774  1114  0577               	andwf	___flge@ff2+3,w
  8775  1115  00FB               	movwf	??___flge+3
  8776  1116  087B               	movf	??___flge+3,w
  8777  1117  047A               	iorwf	??___flge+2,w
  8778  1118  0479               	iorwf	??___flge+1,w
  8779  1119  0478               	iorwf	??___flge,w
  8780  111A  1D03               	skipz
  8781  111B  291D               	goto	u4611
  8782  111C  291E               	goto	u4610
  8783  111D                     u4611:
  8784  111D  2926               	goto	l2909
  8785  111E                     u4610:
  8786  111E                     l2907:
  8787  111E  3000               	movlw	0
  8788  111F  00F7               	movwf	___flge@ff2+3
  8789  1120  3000               	movlw	0
  8790  1121  00F6               	movwf	___flge@ff2+2
  8791  1122  3000               	movlw	0
  8792  1123  00F5               	movwf	___flge@ff2+1
  8793  1124  3000               	movlw	0
  8794  1125  00F4               	movwf	___flge@ff2
  8795  1126                     l2909:
  8796  1126  1FF3               	btfss	___flge@ff1+3,7
  8797  1127  2929               	goto	u4621
  8798  1128  292A               	goto	u4620
  8799  1129                     u4621:
  8800  1129  294E               	goto	l2913
  8801  112A                     u4620:
  8802  112A                     l2911:
  8803  112A  3000               	movlw	0
  8804  112B  00F8               	movwf	??___flge
  8805  112C  3000               	movlw	0
  8806  112D  00F9               	movwf	??___flge+1
  8807  112E  3000               	movlw	0
  8808  112F  00FA               	movwf	??___flge+2
  8809  1130  3080               	movlw	128
  8810  1131  00FB               	movwf	??___flge+3
  8811  1132  0870               	movf	___flge@ff1,w
  8812  1133  02F8               	subwf	??___flge,f
  8813  1134  0871               	movf	___flge@ff1+1,w
  8814  1135  1C03               	skipc
  8815  1136  0F71               	incfsz	___flge@ff1+1,w
  8816  1137  2939               	goto	u4631
  8817  1138  293A               	goto	u4632
  8818  1139                     u4631:
  8819  1139  02F9               	subwf	??___flge+1,f
  8820  113A                     u4632:
  8821  113A  0872               	movf	___flge@ff1+2,w
  8822  113B  1C03               	skipc
  8823  113C  0F72               	incfsz	___flge@ff1+2,w
  8824  113D  293F               	goto	u4633
  8825  113E  2940               	goto	u4634
  8826  113F                     u4633:
  8827  113F  02FA               	subwf	??___flge+2,f
  8828  1140                     u4634:
  8829  1140  0873               	movf	___flge@ff1+3,w
  8830  1141  1C03               	skipc
  8831  1142  0F73               	incfsz	___flge@ff1+3,w
  8832  1143  2945               	goto	u4635
  8833  1144  2946               	goto	u4636
  8834  1145                     u4635:
  8835  1145  02FB               	subwf	??___flge+3,f
  8836  1146                     u4636:
  8837  1146  087B               	movf	??___flge+3,w
  8838  1147  00F3               	movwf	___flge@ff1+3
  8839  1148  087A               	movf	??___flge+2,w
  8840  1149  00F2               	movwf	___flge@ff1+2
  8841  114A  0879               	movf	??___flge+1,w
  8842  114B  00F1               	movwf	___flge@ff1+1
  8843  114C  0878               	movf	??___flge,w
  8844  114D  00F0               	movwf	___flge@ff1
  8845  114E                     l2913:
  8846  114E  1FF7               	btfss	___flge@ff2+3,7
  8847  114F  2951               	goto	u4641
  8848  1150  2952               	goto	u4640
  8849  1151                     u4641:
  8850  1151  2976               	goto	l543
  8851  1152                     u4640:
  8852  1152                     l2915:
  8853  1152  3000               	movlw	0
  8854  1153  00F8               	movwf	??___flge
  8855  1154  3000               	movlw	0
  8856  1155  00F9               	movwf	??___flge+1
  8857  1156  3000               	movlw	0
  8858  1157  00FA               	movwf	??___flge+2
  8859  1158  3080               	movlw	128
  8860  1159  00FB               	movwf	??___flge+3
  8861  115A  0874               	movf	___flge@ff2,w
  8862  115B  02F8               	subwf	??___flge,f
  8863  115C  0875               	movf	___flge@ff2+1,w
  8864  115D  1C03               	skipc
  8865  115E  0F75               	incfsz	___flge@ff2+1,w
  8866  115F  2961               	goto	u4651
  8867  1160  2962               	goto	u4652
  8868  1161                     u4651:
  8869  1161  02F9               	subwf	??___flge+1,f
  8870  1162                     u4652:
  8871  1162  0876               	movf	___flge@ff2+2,w
  8872  1163  1C03               	skipc
  8873  1164  0F76               	incfsz	___flge@ff2+2,w
  8874  1165  2967               	goto	u4653
  8875  1166  2968               	goto	u4654
  8876  1167                     u4653:
  8877  1167  02FA               	subwf	??___flge+2,f
  8878  1168                     u4654:
  8879  1168  0877               	movf	___flge@ff2+3,w
  8880  1169  1C03               	skipc
  8881  116A  0F77               	incfsz	___flge@ff2+3,w
  8882  116B  296D               	goto	u4655
  8883  116C  296E               	goto	u4656
  8884  116D                     u4655:
  8885  116D  02FB               	subwf	??___flge+3,f
  8886  116E                     u4656:
  8887  116E  087B               	movf	??___flge+3,w
  8888  116F  00F7               	movwf	___flge@ff2+3
  8889  1170  087A               	movf	??___flge+2,w
  8890  1171  00F6               	movwf	___flge@ff2+2
  8891  1172  0879               	movf	??___flge+1,w
  8892  1173  00F5               	movwf	___flge@ff2+1
  8893  1174  0878               	movf	??___flge,w
  8894  1175  00F4               	movwf	___flge@ff2
  8895  1176                     l543:
  8896  1176  3080               	movlw	128
  8897  1177  06F3               	xorwf	___flge@ff1+3,f
  8898  1178  3080               	movlw	128
  8899  1179  06F7               	xorwf	___flge@ff2+3,f
  8900  117A  0877               	movf	___flge@ff2+3,w
  8901  117B  0273               	subwf	___flge@ff1+3,w
  8902  117C  1D03               	skipz
  8903  117D  2988               	goto	u4665
  8904  117E  0876               	movf	___flge@ff2+2,w
  8905  117F  0272               	subwf	___flge@ff1+2,w
  8906  1180  1D03               	skipz
  8907  1181  2988               	goto	u4665
  8908  1182  0875               	movf	___flge@ff2+1,w
  8909  1183  0271               	subwf	___flge@ff1+1,w
  8910  1184  1D03               	skipz
  8911  1185  2988               	goto	u4665
  8912  1186  0874               	movf	___flge@ff2,w
  8913  1187  0270               	subwf	___flge@ff1,w
  8914  1188                     u4665:
  8915  1188  1803               	skipnc
  8916  1189  298B               	goto	u4661
  8917  118A  298C               	goto	u4660
  8918  118B                     u4661:
  8919  118B  298E               	goto	l2919
  8920  118C                     u4660:
  8921  118C                     l2917:
  8922  118C  1003               	clrc
  8923  118D  298F               	goto	l544
  8924  118E                     l2919:
  8925  118E  1403               	setc
  8926  118F                     l544:
  8927  118F  0008               	return
  8928  1190                     __end_of___flge:
  8929                           
  8930                           	psect	text21
  8931  1DF2                     __ptext21:	
  8932 ;; *************** function ___fleq *****************
  8933 ;; Defined at:
  8934 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;  ff1             4    0[COMMON] unsigned char 
  8937 ;;  ff2             4    4[COMMON] unsigned char 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;		None
  8940 ;; Return value:  Size  Location     Type
  8941 ;;		None               void
  8942 ;; Registers used:
  8943 ;;		wreg, status,2, status,0
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8949 ;;      Params:         8       0       0       0       0
  8950 ;;      Locals:         0       0       0       0       0
  8951 ;;      Temps:          4       0       0       0       0
  8952 ;;      Totals:        12       0       0       0       0
  8953 ;;Total ram usage:       12 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_main
  8959 ;;		_sprintf
  8960 ;; This function uses a non-reentrant model
  8961 ;;
  8962                           
  8963                           
  8964                           ;psect for function ___fleq
  8965  1DF2                     ___fleq:
  8966  1DF2                     l2891:	
  8967                           ;incstack = 0
  8968                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8969                           
  8970  1DF2  3000               	movlw	0
  8971  1DF3  0570               	andwf	___fleq@ff1,w
  8972  1DF4  00F8               	movwf	??___fleq
  8973  1DF5  3000               	movlw	0
  8974  1DF6  0571               	andwf	___fleq@ff1+1,w
  8975  1DF7  00F9               	movwf	??___fleq+1
  8976  1DF8  3080               	movlw	128
  8977  1DF9  0572               	andwf	___fleq@ff1+2,w
  8978  1DFA  00FA               	movwf	??___fleq+2
  8979  1DFB  307F               	movlw	127
  8980  1DFC  0573               	andwf	___fleq@ff1+3,w
  8981  1DFD  00FB               	movwf	??___fleq+3
  8982  1DFE  087B               	movf	??___fleq+3,w
  8983  1DFF  047A               	iorwf	??___fleq+2,w
  8984  1E00  0479               	iorwf	??___fleq+1,w
  8985  1E01  0478               	iorwf	??___fleq,w
  8986  1E02  1D03               	skipz
  8987  1E03  2E05               	goto	u4571
  8988  1E04  2E06               	goto	u4570
  8989  1E05                     u4571:
  8990  1E05  2E0E               	goto	l535
  8991  1E06                     u4570:
  8992  1E06                     l2893:
  8993  1E06  3000               	movlw	0
  8994  1E07  00F3               	movwf	___fleq@ff1+3
  8995  1E08  3000               	movlw	0
  8996  1E09  00F2               	movwf	___fleq@ff1+2
  8997  1E0A  3000               	movlw	0
  8998  1E0B  00F1               	movwf	___fleq@ff1+1
  8999  1E0C  3000               	movlw	0
  9000  1E0D  00F0               	movwf	___fleq@ff1
  9001  1E0E                     l535:
  9002  1E0E  3000               	movlw	0
  9003  1E0F  0574               	andwf	___fleq@ff2,w
  9004  1E10  00F8               	movwf	??___fleq
  9005  1E11  3000               	movlw	0
  9006  1E12  0575               	andwf	___fleq@ff2+1,w
  9007  1E13  00F9               	movwf	??___fleq+1
  9008  1E14  3080               	movlw	128
  9009  1E15  0576               	andwf	___fleq@ff2+2,w
  9010  1E16  00FA               	movwf	??___fleq+2
  9011  1E17  307F               	movlw	127
  9012  1E18  0577               	andwf	___fleq@ff2+3,w
  9013  1E19  00FB               	movwf	??___fleq+3
  9014  1E1A  087B               	movf	??___fleq+3,w
  9015  1E1B  047A               	iorwf	??___fleq+2,w
  9016  1E1C  0479               	iorwf	??___fleq+1,w
  9017  1E1D  0478               	iorwf	??___fleq,w
  9018  1E1E  1D03               	skipz
  9019  1E1F  2E21               	goto	u4581
  9020  1E20  2E22               	goto	u4580
  9021  1E21                     u4581:
  9022  1E21  2E2A               	goto	l536
  9023  1E22                     u4580:
  9024  1E22                     l2895:
  9025  1E22  3000               	movlw	0
  9026  1E23  00F7               	movwf	___fleq@ff2+3
  9027  1E24  3000               	movlw	0
  9028  1E25  00F6               	movwf	___fleq@ff2+2
  9029  1E26  3000               	movlw	0
  9030  1E27  00F5               	movwf	___fleq@ff2+1
  9031  1E28  3000               	movlw	0
  9032  1E29  00F4               	movwf	___fleq@ff2
  9033  1E2A                     l536:
  9034  1E2A  0877               	movf	___fleq@ff2+3,w
  9035  1E2B  0673               	xorwf	___fleq@ff1+3,w
  9036  1E2C  1D03               	skipz
  9037  1E2D  2E38               	goto	u4595
  9038  1E2E  0876               	movf	___fleq@ff2+2,w
  9039  1E2F  0672               	xorwf	___fleq@ff1+2,w
  9040  1E30  1D03               	skipz
  9041  1E31  2E38               	goto	u4595
  9042  1E32  0875               	movf	___fleq@ff2+1,w
  9043  1E33  0671               	xorwf	___fleq@ff1+1,w
  9044  1E34  1D03               	skipz
  9045  1E35  2E38               	goto	u4595
  9046  1E36  0874               	movf	___fleq@ff2,w
  9047  1E37  0670               	xorwf	___fleq@ff1,w
  9048  1E38                     u4595:
  9049  1E38  1903               	skipnz
  9050  1E39  2E3B               	goto	u4591
  9051  1E3A  2E3C               	goto	u4590
  9052  1E3B                     u4591:
  9053  1E3B  2E3E               	goto	l2899
  9054  1E3C                     u4590:
  9055  1E3C                     l2897:
  9056  1E3C  1003               	clrc
  9057  1E3D  2E3F               	goto	l537
  9058  1E3E                     l2899:
  9059  1E3E  1403               	setc
  9060  1E3F                     l537:
  9061  1E3F  0008               	return
  9062  1E40                     __end_of___fleq:
  9063                           
  9064                           	psect	text22
  9065  1D6C                     __ptext22:	
  9066 ;; *************** function _UART_Write_Text *****************
  9067 ;; Defined at:
  9068 ;;		line 50 in file "./uart.h"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  text            2    1[COMMON] PTR unsigned char 
  9071 ;;		 -> STR_3(16), s(20), 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  i               2    6[COMMON] int 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9083 ;;      Params:         2       0       0       0       0
  9084 ;;      Locals:         2       0       0       0       0
  9085 ;;      Temps:          3       0       0       0       0
  9086 ;;      Totals:         7       0       0       0       0
  9087 ;;Total ram usage:        7 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    1
  9090 ;; This function calls:
  9091 ;;		_UART_Write
  9092 ;; This function is called by:
  9093 ;;		_main
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function _UART_Write_Text
  9099  1D6C                     _UART_Write_Text:
  9100  1D6C                     l3059:	
  9101                           ;incstack = 0
  9102                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9103                           
  9104                           
  9105                           ;./uart.h: 50: void UART_Write_Text(char *text);./uart.h: 51: {;./uart.h: 52:   int i;;.
      +                          /uart.h: 53:   for(i=0;text[i]!='\0';i++)
  9106  1D6C  01F6               	clrf	UART_Write_Text@i
  9107  1D6D  01F7               	clrf	UART_Write_Text@i+1
  9108  1D6E  2D91               	goto	l3065
  9109  1D6F                     l3061:
  9110                           
  9111                           ;./uart.h: 54:    UART_Write(text[i]);
  9112  1D6F  0876               	movf	UART_Write_Text@i,w
  9113  1D70  0771               	addwf	UART_Write_Text@text,w
  9114  1D71  00F4               	movwf	??_UART_Write_Text+1
  9115  1D72  0872               	movf	UART_Write_Text@text+1,w
  9116  1D73  00F3               	movwf	??_UART_Write_Text
  9117  1D74  1803               	skipnc
  9118  1D75  0AF3               	incf	??_UART_Write_Text,f
  9119  1D76  1FF6               	btfss	UART_Write_Text@i,7
  9120  1D77  2D79               	goto	u4980
  9121  1D78  03F3               	decf	??_UART_Write_Text,f
  9122  1D79                     u4980:
  9123  1D79  0873               	movf	??_UART_Write_Text,w
  9124  1D7A  00F5               	movwf	??_UART_Write_Text+2
  9125  1D7B  0875               	movf	??_UART_Write_Text+2,w
  9126  1D7C  1283               	bcf	3,5	;RP0=0, select bank0
  9127  1D7D  1303               	bcf	3,6	;RP1=0, select bank0
  9128  1D7E  00FF               	movwf	btemp+1
  9129  1D7F  0874               	movf	??_UART_Write_Text+1,w
  9130  1D80  0084               	movwf	4
  9131  1D81  120A  158A  2000  160A  158A  	fcall	stringtab
  9132  1D86  160A  158A  2401  160A  158A  	fcall	_UART_Write
  9133  1D8B                     l3063:
  9134  1D8B  3001               	movlw	1
  9135  1D8C  07F6               	addwf	UART_Write_Text@i,f
  9136  1D8D  1803               	skipnc
  9137  1D8E  0AF7               	incf	UART_Write_Text@i+1,f
  9138  1D8F  3000               	movlw	0
  9139  1D90  07F7               	addwf	UART_Write_Text@i+1,f
  9140  1D91                     l3065:
  9141  1D91  0876               	movf	UART_Write_Text@i,w
  9142  1D92  0771               	addwf	UART_Write_Text@text,w
  9143  1D93  00F4               	movwf	??_UART_Write_Text+1
  9144  1D94  0872               	movf	UART_Write_Text@text+1,w
  9145  1D95  00F3               	movwf	??_UART_Write_Text
  9146  1D96  1803               	skipnc
  9147  1D97  0AF3               	incf	??_UART_Write_Text,f
  9148  1D98  1FF6               	btfss	UART_Write_Text@i,7
  9149  1D99  2D9B               	goto	u4990
  9150  1D9A  03F3               	decf	??_UART_Write_Text,f
  9151  1D9B                     u4990:
  9152  1D9B  0873               	movf	??_UART_Write_Text,w
  9153  1D9C  00F5               	movwf	??_UART_Write_Text+2
  9154  1D9D  0875               	movf	??_UART_Write_Text+2,w
  9155  1D9E  1283               	bcf	3,5	;RP0=0, select bank0
  9156  1D9F  1303               	bcf	3,6	;RP1=0, select bank0
  9157  1DA0  00FF               	movwf	btemp+1
  9158  1DA1  0874               	movf	??_UART_Write_Text+1,w
  9159  1DA2  0084               	movwf	4
  9160  1DA3  120A  158A  2000  160A  158A  	fcall	stringtab
  9161  1DA8  3A00               	xorlw	0
  9162  1DA9  1D03               	skipz
  9163  1DAA  2DAC               	goto	u5001
  9164  1DAB  2DAD               	goto	u5000
  9165  1DAC                     u5001:
  9166  1DAC  2D6F               	goto	l3061
  9167  1DAD                     u5000:
  9168  1DAD                     l111:
  9169  1DAD  0008               	return
  9170  1DAE                     __end_of_UART_Write_Text:
  9171                           
  9172                           	psect	text23
  9173  1C01                     __ptext23:	
  9174 ;; *************** function _UART_Write *****************
  9175 ;; Defined at:
  9176 ;;		line 44 in file "./uart.h"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  data            1    wreg     unsigned char 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  data            1    0[COMMON] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9190 ;;      Params:         0       0       0       0       0
  9191 ;;      Locals:         1       0       0       0       0
  9192 ;;      Temps:          0       0       0       0       0
  9193 ;;      Totals:         1       0       0       0       0
  9194 ;;Total ram usage:        1 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_UART_Write_Text
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           
  9204                           ;psect for function _UART_Write
  9205  1C01                     _UART_Write:
  9206                           
  9207                           ;incstack = 0
  9208                           ; Regs used in _UART_Write: [wreg]
  9209                           ;UART_Write@data stored from wreg
  9210  1C01  00F0               	movwf	UART_Write@data
  9211  1C02                     l2657:
  9212  1C02                     l102:	
  9213                           ;./uart.h: 44: void UART_Write(char data);./uart.h: 45: {;./uart.h: 46:   while(!TRMT);
  9214                           
  9215  1C02  1683               	bsf	3,5	;RP0=1, select bank1
  9216  1C03  1303               	bcf	3,6	;RP1=0, select bank1
  9217  1C04  1C98               	btfss	24,1	;volatile
  9218  1C05  2C07               	goto	u3931
  9219  1C06  2C08               	goto	u3930
  9220  1C07                     u3931:
  9221  1C07  2C02               	goto	l102
  9222  1C08                     u3930:
  9223  1C08                     l2659:
  9224                           
  9225                           ;./uart.h: 47:   TXREG = data;
  9226  1C08  0870               	movf	UART_Write@data,w
  9227  1C09  1283               	bcf	3,5	;RP0=0, select bank0
  9228  1C0A  1303               	bcf	3,6	;RP1=0, select bank0
  9229  1C0B  0099               	movwf	25	;volatile
  9230  1C0C                     l105:
  9231  1C0C  0008               	return
  9232  1C0D                     __end_of_UART_Write:
  9233                           
  9234                           	psect	text24
  9235  1C41                     __ptext24:	
  9236 ;; *************** function _UART_Init *****************
  9237 ;; Defined at:
  9238 ;;		line 2 in file "./uart.h"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;  baudrate        4    0[COMMON] const long 
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      unsigned char 
  9245 ;; Registers used:
  9246 ;;		wreg
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9252 ;;      Params:         4       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0
  9255 ;;      Totals:         4       0       0       0       0
  9256 ;;Total ram usage:        4 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_main
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function _UART_Init
  9267  1C41                     _UART_Init:
  9268  1C41                     l3037:	
  9269                           ;incstack = 0
  9270                           ; Regs used in _UART_Init: [wreg]
  9271                           
  9272                           
  9273                           ;./uart.h: 2: char UART_Init(const long int baudrate);./uart.h: 3: {;./uart.h: 5:     BR
      +                          GH = 1;
  9274  1C41  1683               	bsf	3,5	;RP0=1, select bank1
  9275  1C42  1303               	bcf	3,6	;RP1=0, select bank1
  9276  1C43  1518               	bsf	24,2	;volatile
  9277  1C44                     l3039:
  9278                           
  9279                           ;./uart.h: 6:     SPBRG = 25;
  9280  1C44  3019               	movlw	25
  9281  1C45  0099               	movwf	25	;volatile
  9282  1C46                     l3041:
  9283                           
  9284                           ;./uart.h: 8:     SYNC = 0;
  9285  1C46  1218               	bcf	24,4	;volatile
  9286  1C47                     l3043:
  9287                           
  9288                           ;./uart.h: 9:     SPEN = 1;
  9289  1C47  1283               	bcf	3,5	;RP0=0, select bank0
  9290  1C48  1303               	bcf	3,6	;RP1=0, select bank0
  9291  1C49  1798               	bsf	24,7	;volatile
  9292  1C4A                     l3045:
  9293                           
  9294                           ;./uart.h: 11:     TRISC6 = 1;
  9295  1C4A  1683               	bsf	3,5	;RP0=1, select bank1
  9296  1C4B  1303               	bcf	3,6	;RP1=0, select bank1
  9297  1C4C  1707               	bsf	7,6	;volatile
  9298  1C4D                     l3047:
  9299                           
  9300                           ;./uart.h: 12:     TRISC7 = 1;
  9301  1C4D  1787               	bsf	7,7	;volatile
  9302  1C4E                     l3049:
  9303                           
  9304                           ;./uart.h: 14:     TXEN = 1;
  9305  1C4E  1698               	bsf	24,5	;volatile
  9306  1C4F                     l3051:
  9307                           
  9308                           ;./uart.h: 16:     CREN = 1;
  9309  1C4F  1283               	bcf	3,5	;RP0=0, select bank0
  9310  1C50  1303               	bcf	3,6	;RP1=0, select bank0
  9311  1C51  1618               	bsf	24,4	;volatile
  9312  1C52                     l3053:
  9313                           
  9314                           ;./uart.h: 18:     RCIE = 1;
  9315  1C52  1683               	bsf	3,5	;RP0=1, select bank1
  9316  1C53  1303               	bcf	3,6	;RP1=0, select bank1
  9317  1C54  168C               	bsf	12,5	;volatile
  9318  1C55                     l3055:
  9319                           
  9320                           ;./uart.h: 19:     PEIE = 1;
  9321  1C55  170B               	bsf	11,6	;volatile
  9322  1C56                     l3057:
  9323                           
  9324                           ;./uart.h: 20:     GIE = 1;
  9325  1C56  178B               	bsf	11,7	;volatile
  9326  1C57                     l81:
  9327  1C57  0008               	return
  9328  1C58                     __end_of_UART_Init:
  9329                           
  9330                           	psect	text25
  9331  1C1A                     __ptext25:	
  9332 ;; *************** function _ReadADC *****************
  9333 ;; Defined at:
  9334 ;;		line 97 in file "newmain.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;		None
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  TempValue       2    2[COMMON] unsigned int 
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  2    0[COMMON] unsigned int 
  9341 ;; Registers used:
  9342 ;;		wreg, status,2
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9348 ;;      Params:         2       0       0       0       0
  9349 ;;      Locals:         2       0       0       0       0
  9350 ;;      Temps:          0       0       0       0       0
  9351 ;;      Totals:         4       0       0       0       0
  9352 ;;Total ram usage:        4 bytes
  9353 ;; Hardware stack levels used:    1
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_main
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           
  9362                           ;psect for function _ReadADC
  9363  1C1A                     _ReadADC:
  9364  1C1A                     l3109:	
  9365                           ;incstack = 0
  9366                           ; Regs used in _ReadADC: [wreg+status,2]
  9367                           
  9368  1C1A                     l3111:
  9369  1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  9370  1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  9371  1C1C  151F               	bsf	31,2	;volatile
  9372  1C1D                     l179:
  9373  1C1D  191F               	btfsc	31,2	;volatile
  9374  1C1E  2C20               	goto	u5081
  9375  1C1F  2C21               	goto	u5080
  9376  1C20                     u5081:
  9377  1C20  2C1D               	goto	l179
  9378  1C21                     u5080:
  9379  1C21                     l3113:
  9380  1C21  081E               	movf	30,w	;volatile
  9381  1C22  00F3               	movwf	ReadADC@TempValue+1
  9382  1C23  1683               	bsf	3,5	;RP0=1, select bank1
  9383  1C24  1303               	bcf	3,6	;RP1=0, select bank1
  9384  1C25  081E               	movf	30,w	;volatile
  9385  1C26  00F2               	movwf	ReadADC@TempValue
  9386  1C27  0873               	movf	ReadADC@TempValue+1,w
  9387  1C28  00F1               	movwf	?_ReadADC+1
  9388  1C29  0872               	movf	ReadADC@TempValue,w
  9389  1C2A  00F0               	movwf	?_ReadADC
  9390  1C2B                     l182:
  9391  1C2B  0008               	return
  9392  1C2C                     __end_of_ReadADC:
  9393                           
  9394                           	psect	text26
  9395  1D2A                     __ptext26:	
  9396 ;; *************** function _Lcd_Write_String *****************
  9397 ;; Defined at:
  9398 ;;		line 95 in file "./lcd.h"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  a               2    5[COMMON] PTR unsigned char 
  9401 ;;		 -> STR_5(17), STR_4(14), s(20), STR_1(14), 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  i               2   10[COMMON] int 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9413 ;;      Params:         2       0       0       0       0
  9414 ;;      Locals:         2       0       0       0       0
  9415 ;;      Temps:          3       0       0       0       0
  9416 ;;      Totals:         7       0       0       0       0
  9417 ;;Total ram usage:        7 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    2
  9420 ;; This function calls:
  9421 ;;		_Lcd_Write_Char
  9422 ;; This function is called by:
  9423 ;;		_main
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           
  9428                           ;psect for function _Lcd_Write_String
  9429  1D2A                     _Lcd_Write_String:
  9430  1D2A                     l3099:	
  9431                           ;incstack = 0
  9432                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9433                           
  9434                           
  9435                           ;./lcd.h: 95: void Lcd_Write_String(char *a);./lcd.h: 96: {;./lcd.h: 97:  int i;;./lcd.h
      +                          : 98:  for(i=0;a[i]!='\0';i++)
  9436  1D2A  01FA               	clrf	Lcd_Write_String@i
  9437  1D2B  01FB               	clrf	Lcd_Write_String@i+1
  9438  1D2C  2D4F               	goto	l3105
  9439  1D2D                     l3101:
  9440                           
  9441                           ;./lcd.h: 99:     Lcd_Write_Char(a[i]);
  9442  1D2D  087A               	movf	Lcd_Write_String@i,w
  9443  1D2E  0775               	addwf	Lcd_Write_String@a,w
  9444  1D2F  00F8               	movwf	??_Lcd_Write_String+1
  9445  1D30  0876               	movf	Lcd_Write_String@a+1,w
  9446  1D31  00F7               	movwf	??_Lcd_Write_String
  9447  1D32  1803               	skipnc
  9448  1D33  0AF7               	incf	??_Lcd_Write_String,f
  9449  1D34  1FFA               	btfss	Lcd_Write_String@i,7
  9450  1D35  2D37               	goto	u5050
  9451  1D36  03F7               	decf	??_Lcd_Write_String,f
  9452  1D37                     u5050:
  9453  1D37  0877               	movf	??_Lcd_Write_String,w
  9454  1D38  00F9               	movwf	??_Lcd_Write_String+2
  9455  1D39  0879               	movf	??_Lcd_Write_String+2,w
  9456  1D3A  1283               	bcf	3,5	;RP0=0, select bank0
  9457  1D3B  1303               	bcf	3,6	;RP1=0, select bank0
  9458  1D3C  00FF               	movwf	btemp+1
  9459  1D3D  0878               	movf	??_Lcd_Write_String+1,w
  9460  1D3E  0084               	movwf	4
  9461  1D3F  120A  158A  2000  160A  158A  	fcall	stringtab
  9462  1D44  160A  158A  24B9  160A  158A  	fcall	_Lcd_Write_Char
  9463  1D49                     l3103:
  9464  1D49  3001               	movlw	1
  9465  1D4A  07FA               	addwf	Lcd_Write_String@i,f
  9466  1D4B  1803               	skipnc
  9467  1D4C  0AFB               	incf	Lcd_Write_String@i+1,f
  9468  1D4D  3000               	movlw	0
  9469  1D4E  07FB               	addwf	Lcd_Write_String@i+1,f
  9470  1D4F                     l3105:
  9471  1D4F  087A               	movf	Lcd_Write_String@i,w
  9472  1D50  0775               	addwf	Lcd_Write_String@a,w
  9473  1D51  00F8               	movwf	??_Lcd_Write_String+1
  9474  1D52  0876               	movf	Lcd_Write_String@a+1,w
  9475  1D53  00F7               	movwf	??_Lcd_Write_String
  9476  1D54  1803               	skipnc
  9477  1D55  0AF7               	incf	??_Lcd_Write_String,f
  9478  1D56  1FFA               	btfss	Lcd_Write_String@i,7
  9479  1D57  2D59               	goto	u5060
  9480  1D58  03F7               	decf	??_Lcd_Write_String,f
  9481  1D59                     u5060:
  9482  1D59  0877               	movf	??_Lcd_Write_String,w
  9483  1D5A  00F9               	movwf	??_Lcd_Write_String+2
  9484  1D5B  0879               	movf	??_Lcd_Write_String+2,w
  9485  1D5C  1283               	bcf	3,5	;RP0=0, select bank0
  9486  1D5D  1303               	bcf	3,6	;RP1=0, select bank0
  9487  1D5E  00FF               	movwf	btemp+1
  9488  1D5F  0878               	movf	??_Lcd_Write_String+1,w
  9489  1D60  0084               	movwf	4
  9490  1D61  120A  158A  2000  160A  158A  	fcall	stringtab
  9491  1D66  3A00               	xorlw	0
  9492  1D67  1D03               	skipz
  9493  1D68  2D6A               	goto	u5071
  9494  1D69  2D6B               	goto	u5070
  9495  1D6A                     u5071:
  9496  1D6A  2D2D               	goto	l3101
  9497  1D6B                     u5070:
  9498  1D6B                     l146:
  9499  1D6B  0008               	return
  9500  1D6C                     __end_of_Lcd_Write_String:
  9501                           
  9502                           	psect	text27
  9503  1CB9                     __ptext27:	
  9504 ;; *************** function _Lcd_Write_Char *****************
  9505 ;; Defined at:
  9506 ;;		line 79 in file "./lcd.h"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;  a               1    wreg     unsigned char 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  a               1    4[COMMON] unsigned char 
  9511 ;;  y               1    3[COMMON] unsigned char 
  9512 ;;  temp            1    2[COMMON] unsigned char 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, status,0, pclath, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9522 ;;      Params:         0       0       0       0       0
  9523 ;;      Locals:         3       0       0       0       0
  9524 ;;      Temps:          1       0       0       0       0
  9525 ;;      Totals:         4       0       0       0       0
  9526 ;;Total ram usage:        4 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    1
  9529 ;; This function calls:
  9530 ;;		_Lcd_Port
  9531 ;; This function is called by:
  9532 ;;		_Lcd_Write_String
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           
  9537                           ;psect for function _Lcd_Write_Char
  9538  1CB9                     _Lcd_Write_Char:
  9539                           
  9540                           ;incstack = 0
  9541                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9542                           ;Lcd_Write_Char@a stored from wreg
  9543  1CB9  00F4               	movwf	Lcd_Write_Char@a
  9544  1CBA                     l2671:
  9545                           
  9546                           ;./lcd.h: 79: void Lcd_Write_Char(char a);./lcd.h: 80: {;./lcd.h: 81:    char temp,y;;./
      +                          lcd.h: 82:    temp = a&0x0F;
  9547  1CBA  0874               	movf	Lcd_Write_Char@a,w
  9548  1CBB  390F               	andlw	15
  9549  1CBC  00F1               	movwf	??_Lcd_Write_Char
  9550  1CBD  0871               	movf	??_Lcd_Write_Char,w
  9551  1CBE  00F2               	movwf	Lcd_Write_Char@temp
  9552                           
  9553                           ;./lcd.h: 83:    y = a&0xF0;
  9554  1CBF  0874               	movf	Lcd_Write_Char@a,w
  9555  1CC0  39F0               	andlw	240
  9556  1CC1  00F1               	movwf	??_Lcd_Write_Char
  9557  1CC2  0871               	movf	??_Lcd_Write_Char,w
  9558  1CC3  00F3               	movwf	Lcd_Write_Char@y
  9559  1CC4                     l2673:
  9560                           
  9561                           ;./lcd.h: 84:    RD2 = 1;
  9562  1CC4  1283               	bcf	3,5	;RP0=0, select bank0
  9563  1CC5  1303               	bcf	3,6	;RP1=0, select bank0
  9564  1CC6  1508               	bsf	8,2	;volatile
  9565  1CC7                     l2675:
  9566                           
  9567                           ;./lcd.h: 85:    Lcd_Port(y>>4);
  9568  1CC7  0873               	movf	Lcd_Write_Char@y,w
  9569  1CC8  00F1               	movwf	??_Lcd_Write_Char
  9570  1CC9  3004               	movlw	4
  9571  1CCA                     u3945:
  9572  1CCA  1003               	clrc
  9573  1CCB  0CF1               	rrf	??_Lcd_Write_Char,f
  9574  1CCC  3EFF               	addlw	-1
  9575  1CCD  1D03               	skipz
  9576  1CCE  2CCA               	goto	u3945
  9577  1CCF  0871               	movf	??_Lcd_Write_Char,w
  9578  1CD0  160A  158A  2472  160A  158A  	fcall	_Lcd_Port
  9579  1CD5                     l2677:
  9580                           
  9581                           ;./lcd.h: 86:    RD3 = 1;
  9582  1CD5  1283               	bcf	3,5	;RP0=0, select bank0
  9583  1CD6  1303               	bcf	3,6	;RP1=0, select bank0
  9584  1CD7  1588               	bsf	8,3	;volatile
  9585  1CD8                     l2679:
  9586                           
  9587                           ;./lcd.h: 87:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9588  1CD8  300D               	movlw	13
  9589  1CD9  00F1               	movwf	??_Lcd_Write_Char
  9590  1CDA                     u5437:
  9591  1CDA  0BF1               	decfsz	??_Lcd_Write_Char,f
  9592  1CDB  2CDA               	goto	u5437
  9593  1CDC                     l2681:
  9594                           
  9595                           ;./lcd.h: 88:    RD3 = 0;
  9596  1CDC  1283               	bcf	3,5	;RP0=0, select bank0
  9597  1CDD  1303               	bcf	3,6	;RP1=0, select bank0
  9598  1CDE  1188               	bcf	8,3	;volatile
  9599  1CDF                     l2683:
  9600                           
  9601                           ;./lcd.h: 89:    Lcd_Port(temp);
  9602  1CDF  0872               	movf	Lcd_Write_Char@temp,w
  9603  1CE0  160A  158A  2472  160A  158A  	fcall	_Lcd_Port
  9604  1CE5                     l2685:
  9605                           
  9606                           ;./lcd.h: 90:    RD3 = 1;
  9607  1CE5  1283               	bcf	3,5	;RP0=0, select bank0
  9608  1CE6  1303               	bcf	3,6	;RP1=0, select bank0
  9609  1CE7  1588               	bsf	8,3	;volatile
  9610  1CE8                     l2687:
  9611                           
  9612                           ;./lcd.h: 91:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9613  1CE8  300D               	movlw	13
  9614  1CE9  00F1               	movwf	??_Lcd_Write_Char
  9615  1CEA                     u5447:
  9616  1CEA  0BF1               	decfsz	??_Lcd_Write_Char,f
  9617  1CEB  2CEA               	goto	u5447
  9618  1CEC                     l2689:
  9619                           
  9620                           ;./lcd.h: 92:    RD3 = 0;
  9621  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  9622  1CED  1303               	bcf	3,6	;RP1=0, select bank0
  9623  1CEE  1188               	bcf	8,3	;volatile
  9624  1CEF                     l140:
  9625  1CEF  0008               	return
  9626  1CF0                     __end_of_Lcd_Write_Char:
  9627                           
  9628                           	psect	text28
  9629  08EE                     __ptext28:	
  9630 ;; *************** function _Lcd_Set_Cursor *****************
  9631 ;; Defined at:
  9632 ;;		line 39 in file "./lcd.h"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  a               1    wreg     unsigned char 
  9635 ;;  b               1    4[COMMON] unsigned char 
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;  a               1    7[COMMON] unsigned char 
  9638 ;;  temp            1   10[COMMON] unsigned char 
  9639 ;;  y               1    9[COMMON] unsigned char 
  9640 ;;  z               1    8[COMMON] unsigned char 
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  1    wreg      void 
  9643 ;; Registers used:
  9644 ;;		wreg, status,2, status,0, pclath, cstack
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9650 ;;      Params:         1       0       0       0       0
  9651 ;;      Locals:         4       0       0       0       0
  9652 ;;      Temps:          2       0       0       0       0
  9653 ;;      Totals:         7       0       0       0       0
  9654 ;;Total ram usage:        7 bytes
  9655 ;; Hardware stack levels used:    1
  9656 ;; Hardware stack levels required when called:    2
  9657 ;; This function calls:
  9658 ;;		_Lcd_Cmd
  9659 ;; This function is called by:
  9660 ;;		_main
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           
  9665                           ;psect for function _Lcd_Set_Cursor
  9666  08EE                     _Lcd_Set_Cursor:
  9667                           
  9668                           ;incstack = 0
  9669                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9670                           ;Lcd_Set_Cursor@a stored from wreg
  9671  08EE  00F7               	movwf	Lcd_Set_Cursor@a
  9672  08EF                     l3069:
  9673                           
  9674                           ;./lcd.h: 39: void Lcd_Set_Cursor(char a, char b);./lcd.h: 40: {;./lcd.h: 41:  char temp
      +                          ,z,y;;./lcd.h: 42:  if(a == 1)
  9675  08EF  0377               	decf	Lcd_Set_Cursor@a,w
  9676  08F0  1D03               	btfss	3,2
  9677  08F1  28F3               	goto	u5011
  9678  08F2  28F4               	goto	u5010
  9679  08F3                     u5011:
  9680  08F3  2917               	goto	l3079
  9681  08F4                     u5010:
  9682  08F4                     l3071:
  9683                           
  9684                           ;./lcd.h: 43:  {;./lcd.h: 44:    temp = 0x80 + b - 1;
  9685  08F4  0874               	movf	Lcd_Set_Cursor@b,w
  9686  08F5  3E7F               	addlw	127
  9687  08F6  00F5               	movwf	??_Lcd_Set_Cursor
  9688  08F7  0875               	movf	??_Lcd_Set_Cursor,w
  9689  08F8  00FA               	movwf	Lcd_Set_Cursor@temp
  9690                           
  9691                           ;./lcd.h: 45:   z = temp>>4;
  9692  08F9  087A               	movf	Lcd_Set_Cursor@temp,w
  9693  08FA  00F5               	movwf	??_Lcd_Set_Cursor
  9694  08FB  3004               	movlw	4
  9695  08FC                     u5025:
  9696  08FC  1003               	clrc
  9697  08FD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9698  08FE  3EFF               	addlw	-1
  9699  08FF  1D03               	skipz
  9700  0900  28FC               	goto	u5025
  9701  0901  0875               	movf	??_Lcd_Set_Cursor,w
  9702  0902  00F6               	movwf	??_Lcd_Set_Cursor+1
  9703  0903  0876               	movf	??_Lcd_Set_Cursor+1,w
  9704  0904  00F8               	movwf	Lcd_Set_Cursor@z
  9705  0905                     l3073:
  9706                           
  9707                           ;./lcd.h: 46:   y = temp & 0x0F;
  9708  0905  087A               	movf	Lcd_Set_Cursor@temp,w
  9709  0906  390F               	andlw	15
  9710  0907  00F5               	movwf	??_Lcd_Set_Cursor
  9711  0908  0875               	movf	??_Lcd_Set_Cursor,w
  9712  0909  00F9               	movwf	Lcd_Set_Cursor@y
  9713  090A                     l3075:
  9714                           
  9715                           ;./lcd.h: 47:   Lcd_Cmd(z);
  9716  090A  0878               	movf	Lcd_Set_Cursor@z,w
  9717  090B  160A  158A  2458  120A  158A  	fcall	_Lcd_Cmd
  9718  0910                     l3077:
  9719                           
  9720                           ;./lcd.h: 48:   Lcd_Cmd(y);
  9721  0910  0879               	movf	Lcd_Set_Cursor@y,w
  9722  0911  160A  158A  2458  120A  158A  	fcall	_Lcd_Cmd
  9723                           
  9724                           ;./lcd.h: 49:  }
  9725  0916  293F               	goto	l134
  9726  0917                     l3079:
  9727  0917  3002               	movlw	2
  9728  0918  0677               	xorwf	Lcd_Set_Cursor@a,w
  9729  0919  1D03               	btfss	3,2
  9730  091A  291C               	goto	u5031
  9731  091B  291D               	goto	u5030
  9732  091C                     u5031:
  9733  091C  293F               	goto	l134
  9734  091D                     u5030:
  9735  091D                     l3081:
  9736                           
  9737                           ;./lcd.h: 51:  {;./lcd.h: 52:   temp = 0xC0 + b - 1;
  9738  091D  0874               	movf	Lcd_Set_Cursor@b,w
  9739  091E  3EBF               	addlw	191
  9740  091F  00F5               	movwf	??_Lcd_Set_Cursor
  9741  0920  0875               	movf	??_Lcd_Set_Cursor,w
  9742  0921  00FA               	movwf	Lcd_Set_Cursor@temp
  9743                           
  9744                           ;./lcd.h: 53:   z = temp>>4;
  9745  0922  087A               	movf	Lcd_Set_Cursor@temp,w
  9746  0923  00F5               	movwf	??_Lcd_Set_Cursor
  9747  0924  3004               	movlw	4
  9748  0925                     u5045:
  9749  0925  1003               	clrc
  9750  0926  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9751  0927  3EFF               	addlw	-1
  9752  0928  1D03               	skipz
  9753  0929  2925               	goto	u5045
  9754  092A  0875               	movf	??_Lcd_Set_Cursor,w
  9755  092B  00F6               	movwf	??_Lcd_Set_Cursor+1
  9756  092C  0876               	movf	??_Lcd_Set_Cursor+1,w
  9757  092D  00F8               	movwf	Lcd_Set_Cursor@z
  9758  092E                     l3083:
  9759                           
  9760                           ;./lcd.h: 54:   y = temp & 0x0F;
  9761  092E  087A               	movf	Lcd_Set_Cursor@temp,w
  9762  092F  390F               	andlw	15
  9763  0930  00F5               	movwf	??_Lcd_Set_Cursor
  9764  0931  0875               	movf	??_Lcd_Set_Cursor,w
  9765  0932  00F9               	movwf	Lcd_Set_Cursor@y
  9766  0933                     l3085:
  9767                           
  9768                           ;./lcd.h: 55:   Lcd_Cmd(z);
  9769  0933  0878               	movf	Lcd_Set_Cursor@z,w
  9770  0934  160A  158A  2458  120A  158A  	fcall	_Lcd_Cmd
  9771  0939                     l3087:
  9772                           
  9773                           ;./lcd.h: 56:   Lcd_Cmd(y);
  9774  0939  0879               	movf	Lcd_Set_Cursor@y,w
  9775  093A  160A  158A  2458  120A  158A  	fcall	_Lcd_Cmd
  9776  093F                     l134:
  9777  093F  0008               	return
  9778  0940                     __end_of_Lcd_Set_Cursor:
  9779                           
  9780                           	psect	text29
  9781  1F3D                     __ptext29:	
  9782 ;; *************** function _Lcd_Init *****************
  9783 ;; Defined at:
  9784 ;;		line 60 in file "./lcd.h"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;		None
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;		None
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      void 
  9791 ;; Registers used:
  9792 ;;		wreg, status,2, status,0, pclath, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9798 ;;      Params:         0       0       0       0       0
  9799 ;;      Locals:         0       0       0       0       0
  9800 ;;      Temps:          2       0       0       0       0
  9801 ;;      Totals:         2       0       0       0       0
  9802 ;;Total ram usage:        2 bytes
  9803 ;; Hardware stack levels used:    1
  9804 ;; Hardware stack levels required when called:    2
  9805 ;; This function calls:
  9806 ;;		_Lcd_Cmd
  9807 ;;		_Lcd_Port
  9808 ;; This function is called by:
  9809 ;;		_main
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function _Lcd_Init
  9815  1F3D                     _Lcd_Init:
  9816  1F3D                     l3089:	
  9817                           ;incstack = 0
  9818                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9819                           
  9820                           
  9821                           ;./lcd.h: 62:   Lcd_Port(0x00);
  9822  1F3D  3000               	movlw	0
  9823  1F3E  160A  158A  2472  160A  158A  	fcall	_Lcd_Port
  9824  1F43                     l3091:
  9825                           
  9826                           ;./lcd.h: 63:    _delay((unsigned long)((20)*(4000000/4000.0)));
  9827  1F43  301A               	movlw	26
  9828  1F44  00F5               	movwf	??_Lcd_Init+1
  9829  1F45  30F8               	movlw	248
  9830  1F46  00F4               	movwf	??_Lcd_Init
  9831  1F47                     u5457:
  9832  1F47  0BF4               	decfsz	??_Lcd_Init,f
  9833  1F48  2F47               	goto	u5457
  9834  1F49  0BF5               	decfsz	??_Lcd_Init+1,f
  9835  1F4A  2F47               	goto	u5457
  9836  1F4B  0000               	nop
  9837  1F4C                     l3093:
  9838                           
  9839                           ;./lcd.h: 64:   Lcd_Cmd(0x03);
  9840  1F4C  3003               	movlw	3
  9841  1F4D  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9842                           
  9843                           ;./lcd.h: 65:  _delay((unsigned long)((5)*(4000000/4000.0)));
  9844  1F52  3007               	movlw	7
  9845  1F53  00F5               	movwf	??_Lcd_Init+1
  9846  1F54  307D               	movlw	125
  9847  1F55  00F4               	movwf	??_Lcd_Init
  9848  1F56                     u5467:
  9849  1F56  0BF4               	decfsz	??_Lcd_Init,f
  9850  1F57  2F56               	goto	u5467
  9851  1F58  0BF5               	decfsz	??_Lcd_Init+1,f
  9852  1F59  2F56               	goto	u5467
  9853  1F5A                     l3095:
  9854                           
  9855                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  9856  1F5A  3003               	movlw	3
  9857  1F5B  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9858  1F60                     l3097:
  9859                           
  9860                           ;./lcd.h: 67:  _delay((unsigned long)((11)*(4000000/4000.0)));
  9861  1F60  300F               	movlw	15
  9862  1F61  00F5               	movwf	??_Lcd_Init+1
  9863  1F62  3047               	movlw	71
  9864  1F63  00F4               	movwf	??_Lcd_Init
  9865  1F64                     u5477:
  9866  1F64  0BF4               	decfsz	??_Lcd_Init,f
  9867  1F65  2F64               	goto	u5477
  9868  1F66  0BF5               	decfsz	??_Lcd_Init+1,f
  9869  1F67  2F64               	goto	u5477
  9870  1F68  2F69               	nop2
  9871                           
  9872                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  9873  1F69  3003               	movlw	3
  9874  1F6A  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9875                           
  9876                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  9877  1F6F  3002               	movlw	2
  9878  1F70  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9879                           
  9880                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  9881  1F75  3002               	movlw	2
  9882  1F76  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9883                           
  9884                           ;./lcd.h: 72:   Lcd_Cmd(0x08);
  9885  1F7B  3008               	movlw	8
  9886  1F7C  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9887                           
  9888                           ;./lcd.h: 73:   Lcd_Cmd(0x00);
  9889  1F81  3000               	movlw	0
  9890  1F82  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9891                           
  9892                           ;./lcd.h: 74:   Lcd_Cmd(0x0C);
  9893  1F87  300C               	movlw	12
  9894  1F88  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9895                           
  9896                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  9897  1F8D  3000               	movlw	0
  9898  1F8E  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9899                           
  9900                           ;./lcd.h: 76:   Lcd_Cmd(0x06);
  9901  1F93  3006               	movlw	6
  9902  1F94  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9903  1F99                     l137:
  9904  1F99  0008               	return
  9905  1F9A                     __end_of_Lcd_Init:
  9906                           
  9907                           	psect	text30
  9908  1C0D                     __ptext30:	
  9909 ;; *************** function _Lcd_Clear *****************
  9910 ;; Defined at:
  9911 ;;		line 33 in file "./lcd.h"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;		None
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  2  127[None  ] int 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0, pclath, cstack
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9925 ;;      Params:         0       0       0       0       0
  9926 ;;      Locals:         0       0       0       0       0
  9927 ;;      Temps:          0       0       0       0       0
  9928 ;;      Totals:         0       0       0       0       0
  9929 ;;Total ram usage:        0 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    2
  9932 ;; This function calls:
  9933 ;;		_Lcd_Cmd
  9934 ;; This function is called by:
  9935 ;;		_main
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           
  9940                           ;psect for function _Lcd_Clear
  9941  1C0D                     _Lcd_Clear:
  9942  1C0D                     l3067:	
  9943                           ;incstack = 0
  9944                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9945                           
  9946                           
  9947                           ;./lcd.h: 35:  Lcd_Cmd(0);
  9948  1C0D  3000               	movlw	0
  9949  1C0E  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9950                           
  9951                           ;./lcd.h: 36:  Lcd_Cmd(1);
  9952  1C13  3001               	movlw	1
  9953  1C14  160A  158A  2458  160A  158A  	fcall	_Lcd_Cmd
  9954  1C19                     l128:
  9955  1C19  0008               	return
  9956  1C1A                     __end_of_Lcd_Clear:
  9957                           
  9958                           	psect	text31
  9959  1C58                     __ptext31:	
  9960 ;; *************** function _Lcd_Cmd *****************
  9961 ;; Defined at:
  9962 ;;		line 24 in file "./lcd.h"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  a               1    wreg     unsigned char 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  a               1    3[COMMON] unsigned char 
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      void 
  9969 ;; Registers used:
  9970 ;;		wreg, status,2, status,0, pclath, cstack
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9976 ;;      Params:         0       0       0       0       0
  9977 ;;      Locals:         1       0       0       0       0
  9978 ;;      Temps:          2       0       0       0       0
  9979 ;;      Totals:         3       0       0       0       0
  9980 ;;Total ram usage:        3 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; Hardware stack levels required when called:    1
  9983 ;; This function calls:
  9984 ;;		_Lcd_Port
  9985 ;; This function is called by:
  9986 ;;		_Lcd_Clear
  9987 ;;		_Lcd_Set_Cursor
  9988 ;;		_Lcd_Init
  9989 ;;		_Lcd_Shift_Right
  9990 ;;		_Lcd_Shift_Left
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994                           
  9995                           ;psect for function _Lcd_Cmd
  9996  1C58                     _Lcd_Cmd:
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10000                           ;Lcd_Cmd@a stored from wreg
 10001  1C58  00F3               	movwf	Lcd_Cmd@a
 10002  1C59                     l2661:
 10003                           
 10004                           ;./lcd.h: 24: void Lcd_Cmd(char a);./lcd.h: 25: {;./lcd.h: 26:  RD2 = 0;
 10005  1C59  1283               	bcf	3,5	;RP0=0, select bank0
 10006  1C5A  1303               	bcf	3,6	;RP1=0, select bank0
 10007  1C5B  1108               	bcf	8,2	;volatile
 10008  1C5C                     l2663:
 10009                           
 10010                           ;./lcd.h: 27:  Lcd_Port(a);
 10011  1C5C  0873               	movf	Lcd_Cmd@a,w
 10012  1C5D  160A  158A  2472  160A  158A  	fcall	_Lcd_Port
 10013  1C62                     l2665:
 10014                           
 10015                           ;./lcd.h: 28:  RD3 = 1;
 10016  1C62  1283               	bcf	3,5	;RP0=0, select bank0
 10017  1C63  1303               	bcf	3,6	;RP1=0, select bank0
 10018  1C64  1588               	bsf	8,3	;volatile
 10019  1C65                     l2667:
 10020                           
 10021                           ;./lcd.h: 29:         _delay((unsigned long)((4)*(4000000/4000.0)));
 10022  1C65  3006               	movlw	6
 10023  1C66  00F2               	movwf	??_Lcd_Cmd+1
 10024  1C67  3030               	movlw	48
 10025  1C68  00F1               	movwf	??_Lcd_Cmd
 10026  1C69                     u5487:
 10027  1C69  0BF1               	decfsz	??_Lcd_Cmd,f
 10028  1C6A  2C69               	goto	u5487
 10029  1C6B  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10030  1C6C  2C69               	goto	u5487
 10031  1C6D  0000               	nop
 10032  1C6E                     l2669:
 10033                           
 10034                           ;./lcd.h: 30:         RD3 = 0;
 10035  1C6E  1283               	bcf	3,5	;RP0=0, select bank0
 10036  1C6F  1303               	bcf	3,6	;RP1=0, select bank0
 10037  1C70  1188               	bcf	8,3	;volatile
 10038  1C71                     l125:
 10039  1C71  0008               	return
 10040  1C72                     __end_of_Lcd_Cmd:
 10041                           
 10042                           	psect	text32
 10043  1C72                     __ptext32:	
 10044 ;; *************** function _Lcd_Port *****************
 10045 ;; Defined at:
 10046 ;;		line 2 in file "./lcd.h"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;  a               1    wreg     unsigned char 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;  a               1    0[COMMON] unsigned char 
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      void 
 10053 ;; Registers used:
 10054 ;;		wreg
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10060 ;;      Params:         0       0       0       0       0
 10061 ;;      Locals:         1       0       0       0       0
 10062 ;;      Temps:          0       0       0       0       0
 10063 ;;      Totals:         1       0       0       0       0
 10064 ;;Total ram usage:        1 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; This function calls:
 10067 ;;		Nothing
 10068 ;; This function is called by:
 10069 ;;		_Lcd_Cmd
 10070 ;;		_Lcd_Init
 10071 ;;		_Lcd_Write_Char
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           
 10076                           ;psect for function _Lcd_Port
 10077  1C72                     _Lcd_Port:
 10078                           
 10079                           ;incstack = 0
 10080                           ; Regs used in _Lcd_Port: [wreg]
 10081                           ;Lcd_Port@a stored from wreg
 10082  1C72  00F0               	movwf	Lcd_Port@a
 10083  1C73                     l2183:
 10084                           
 10085                           ;./lcd.h: 2: void Lcd_Port(char a);./lcd.h: 3: {;./lcd.h: 4:  if(a & 1)
 10086  1C73  1C70               	btfss	Lcd_Port@a,0
 10087  1C74  2C76               	goto	u2741
 10088  1C75  2C77               	goto	u2740
 10089  1C76                     u2741:
 10090  1C76  2C7B               	goto	l114
 10091  1C77                     u2740:
 10092  1C77                     l2185:
 10093                           
 10094                           ;./lcd.h: 5:   RD4 = 1;
 10095  1C77  1283               	bcf	3,5	;RP0=0, select bank0
 10096  1C78  1303               	bcf	3,6	;RP1=0, select bank0
 10097  1C79  1608               	bsf	8,4	;volatile
 10098  1C7A  2C7E               	goto	l115
 10099  1C7B                     l114:	
 10100                           ;./lcd.h: 6:  else
 10101                           
 10102                           
 10103                           ;./lcd.h: 7:   RD4 = 0;
 10104  1C7B  1283               	bcf	3,5	;RP0=0, select bank0
 10105  1C7C  1303               	bcf	3,6	;RP1=0, select bank0
 10106  1C7D  1208               	bcf	8,4	;volatile
 10107  1C7E                     l115:
 10108                           
 10109                           ;./lcd.h: 9:  if(a & 2)
 10110  1C7E  1CF0               	btfss	Lcd_Port@a,1
 10111  1C7F  2C81               	goto	u2751
 10112  1C80  2C82               	goto	u2750
 10113  1C81                     u2751:
 10114  1C81  2C84               	goto	l116
 10115  1C82                     u2750:
 10116  1C82                     l2187:
 10117                           
 10118                           ;./lcd.h: 10:   RD5 = 1;
 10119  1C82  1688               	bsf	8,5	;volatile
 10120  1C83  2C85               	goto	l117
 10121  1C84                     l116:	
 10122                           ;./lcd.h: 11:  else
 10123                           
 10124                           
 10125                           ;./lcd.h: 12:   RD5 = 0;
 10126  1C84  1288               	bcf	8,5	;volatile
 10127  1C85                     l117:
 10128                           
 10129                           ;./lcd.h: 14:  if(a & 4)
 10130  1C85  1D70               	btfss	Lcd_Port@a,2
 10131  1C86  2C88               	goto	u2761
 10132  1C87  2C89               	goto	u2760
 10133  1C88                     u2761:
 10134  1C88  2C8B               	goto	l118
 10135  1C89                     u2760:
 10136  1C89                     l2189:
 10137                           
 10138                           ;./lcd.h: 15:   RD6 = 1;
 10139  1C89  1708               	bsf	8,6	;volatile
 10140  1C8A  2C8C               	goto	l119
 10141  1C8B                     l118:	
 10142                           ;./lcd.h: 16:  else
 10143                           
 10144                           
 10145                           ;./lcd.h: 17:   RD6 = 0;
 10146  1C8B  1308               	bcf	8,6	;volatile
 10147  1C8C                     l119:
 10148                           
 10149                           ;./lcd.h: 19:  if(a & 8)
 10150  1C8C  1DF0               	btfss	Lcd_Port@a,3
 10151  1C8D  2C8F               	goto	u2771
 10152  1C8E  2C90               	goto	u2770
 10153  1C8F                     u2771:
 10154  1C8F  2C92               	goto	l120
 10155  1C90                     u2770:
 10156  1C90                     l2191:
 10157                           
 10158                           ;./lcd.h: 20:   RD7 = 1;
 10159  1C90  1788               	bsf	8,7	;volatile
 10160  1C91  2C93               	goto	l122
 10161  1C92                     l120:	
 10162                           ;./lcd.h: 21:  else
 10163                           
 10164                           
 10165                           ;./lcd.h: 22:   RD7 = 0;
 10166  1C92  1388               	bcf	8,7	;volatile
 10167  1C93                     l122:
 10168  1C93  0008               	return
 10169  1C94                     __end_of_Lcd_Port:
 10170                           
 10171                           	psect	text33
 10172  1C2C                     __ptext33:	
 10173 ;; *************** function _ADCinit *****************
 10174 ;; Defined at:
 10175 ;;		line 84 in file "newmain.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;		None
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		None
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10189 ;;      Params:         0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0
 10191 ;;      Temps:          0       0       0       0       0
 10192 ;;      Totals:         0       0       0       0       0
 10193 ;;Total ram usage:        0 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; This function calls:
 10196 ;;		Nothing
 10197 ;; This function is called by:
 10198 ;;		_main
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           
 10203                           ;psect for function _ADCinit
 10204  1C2C                     _ADCinit:
 10205  1C2C                     l3107:	
 10206                           ;incstack = 0
 10207                           ; Regs used in _ADCinit: []
 10208                           
 10209  1C2C  1683               	bsf	3,5	;RP0=1, select bank1
 10210  1C2D  1303               	bcf	3,6	;RP1=0, select bank1
 10211  1C2E  131F               	bcf	31,6	;volatile
 10212  1C2F  1283               	bcf	3,5	;RP0=0, select bank0
 10213  1C30  1303               	bcf	3,6	;RP1=0, select bank0
 10214  1C31  139F               	bcf	31,7	;volatile
 10215  1C32  171F               	bsf	31,6	;volatile
 10216  1C33  129F               	bcf	31,5	;volatile
 10217  1C34  121F               	bcf	31,4	;volatile
 10218  1C35  119F               	bcf	31,3	;volatile
 10219  1C36  1683               	bsf	3,5	;RP0=1, select bank1
 10220  1C37  1303               	bcf	3,6	;RP1=0, select bank1
 10221  1C38  179F               	bsf	31,7	;volatile
 10222  1C39  159F               	bsf	31,3	;volatile
 10223  1C3A  151F               	bsf	31,2	;volatile
 10224  1C3B  149F               	bsf	31,1	;volatile
 10225  1C3C  101F               	bcf	31,0	;volatile
 10226  1C3D  1283               	bcf	3,5	;RP0=0, select bank0
 10227  1C3E  1303               	bcf	3,6	;RP1=0, select bank0
 10228  1C3F  141F               	bsf	31,0	;volatile
 10229  1C40                     l176:
 10230  1C40  0008               	return
 10231  1C41                     __end_of_ADCinit:
 10232  007E                     btemp	set	126	;btemp
 10233  007E                     wtemp0	set	126
 10234                           
 10235                           	psect	config
 10236                           
 10237                           ;Config register CONFIG @ 0x2007
 10238                           ;	Oscillator Selection bits
 10239                           ;	FOSC = HS, HS oscillator
 10240                           ;	Watchdog Timer Enable bit
 10241                           ;	WDTE = OFF, WDT disabled
 10242                           ;	Power-up Timer Enable bit
 10243                           ;	PWRTE = OFF, PWRT disabled
 10244                           ;	Brown-out Reset Enable bit
 10245                           ;	BOREN = ON, BOR enabled
 10246                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10247                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10248                           ;	Data EEPROM Memory Code Protection bit
 10249                           ;	CPD = OFF, Data EEPROM code protection off
 10250                           ;	Flash Program Memory Write Enable bits
 10251                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10252                           ;	In-Circuit Debugger Mode bit
 10253                           ;	DEBUG = 0x1, unprogrammed default
 10254                           ;	Flash Program Memory Code Protection bit
 10255                           ;	CP = OFF, Code protection off
 10256  2007                     	org	8199
 10257  2007  3F7A               	dw	16250

Data Sizes:
    Strings     77
    Constant    144
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     47      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[17]), STR_4(CODE[14]), s(BANK1[20]), STR_1(CODE[14]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), s(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _sprintf->___lldiv
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->___lwdiv
    _UART_Write_Text->_UART_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40859
                                             43 BANK1      4     4      0
                            _ADCinit
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _ReadADC
                          _UART_Init
                    _UART_Write_Text
                             ___fleq
                             ___flge
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31045
                                              8 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             40 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             40 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             14 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             59 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             60 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     942
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     546
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     264
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4      76
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2      24
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     684
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _ReadADC
   _UART_Init
   _UART_Write_Text
     _UART_Write
   ___fleq
   ___flge
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
   ___lwdiv
     ___lwmod (ARG)
   ___xxtofl
     ___lwdiv (ARG)
       ___lwmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
         ___lwmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AB       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2F      4D       7       96.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AB      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Jun 20 12:41:30 2022

                        _f 00CF                          _q 00D3                          _s 00D7  
                        pc 0002                         l81 1C57               ___awdiv@sign 0021  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l102 1C02                        l111 1DAD                        l120 1C92  
                      l105 1C0C                        l122 1C93                        l114 1C7B  
                      l115 1C7E                        l116 1C84                        l140 1CEF  
                      l117 1C85                        l125 1C71                        l118 1C8B  
                      l134 093F                        l119 1C8C                        l303 0258  
                      l128 1C19                        l137 1F99                        l146 1D6B  
                      l182 1C2B                        l502 1071                        l351 1CB8  
                      l335 0675                        l176 1C40                        l520 132B  
                      l328 0631                        l345 07F2                        l530 13B9  
                      l282 023A                        l179 1C1D                        l523 1389  
                      l515 1F3C                        l540 110A                        l701 1771  
                      l605 1EE3                        l349 1CA0                        l710 17D1  
                      l535 1E0E                        l543 1176                        l519 13C6  
                      l536 1E2A                        l544 118F                        l552 10ED  
                      l537 1E3F                        l385 1FFF                        l289 0C9E  
                      l722 1E8F                        l562 10ED                        l570 12CB  
                      l707 1793                        l548 1C00                        l718 17F3  
                      l830 1221                        l822 11F9                        l566 1308  
                      l719 17FF                        l559 10D8                        l567 127A  
                      l655 1DF1                        l680 1682                        l816 11B4  
                      l577 12FB                        l665 1D29                        l682 1659  
                      l818 124B                        l676 15DB                        l772 0FFF  
                      l829 1215                        l791 001D                        l784 0FF3  
                      l697 174D                        l689 17FF                        l793 002F  
                      l778 0F6B                        _GIE 005F                        _RA0 0028  
                      _RB1 0031                        _RB2 0032                        _RB3 0033  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
          __end_of_ADCinit 1C41               ___flmul@aexp 0040               ___flmul@bexp 0041  
              _sprintf$938 00B2               ___flmul@sign 003B               ___flmul@temp 0046  
             ___flmul@prod 0042               ___fltol@exp1 0065                       l3001 11BC  
                     l2201 1017                       l3011 11DE                       l2211 102C  
                     l2203 101B                       l3101 1D2D                       l3021 120F  
                     l3013 11E2                       l3005 11C5                       l2301 1CF0  
                     l2221 104F                       l2213 102F                       l2205 1020  
                     l3103 1D49                       l3111 1C1A                       l3031 1242  
                     l3023 1219                       l3015 11F0                       l3007 11CA  
                     l2311 1D08                       l2303 1CF6                       l2231 1068  
                     l2223 1055                       l2215 1036                       l2207 1024  
                     l3105 1D4F                       l3113 1C21                       l3041 1C46  
                     l2401 1625                       l3033 1243                       l3025 1223  
                     l3017 1200                       l3009 11D7                       l2313 1D12  
                     l2305 1CF9                       l2233 106D                       l2225 1056  
                     l2217 103A                       l2209 1026                       l2241 1EE9  
                     l3201 0523                       l3121 0249                       l3107 1C2C  
                     l3051 1C4F                       l3043 1C47                       l2411 1668  
                     l2403 1626                       l2331 158A                       l2323 1578  
                     l3027 1239                       l3019 120B                       l2171 000C  
                     l2315 1D18                       l2307 1D00                       l2227 105D  
                     l2219 103E                       l2251 1EFF                       l2243 1EEE  
                     l3211 0572                       l3203 056E                       l3131 0274  
                     l3123 0250                       l3109 1C1A                       l3053 1C52  
                     l3045 1C4A                       l3037 1C41                       l3061 1D6F  
                     l2501 17DB                       l2421 1686                       l2413 166C  
                     l2405 163D                       l2333 158F                       l2341 159F  
                     l2325 157F                       l3029 123E                       l2173 0013  
                     l2317 1D1F                       l2309 1D04                       l2229 1063  
                     l2261 1F1B                       l2253 1F02                       l2245 1EF0  
                     l2237 1EE4                       l3221 05C6                       l3205 0570  
                     l3141 02AF                       l3133 0280                       l3125 0255  
                     l3117 023E                       l3301 13DF                       l2191 1C90  
                     l2183 1C73                       l3071 08F4                       l3055 1C55  
                     l3047 1C4D                       l3039 1C44                       l3063 1D8B  
                     l2511 17EF                       l2503 17E3                       l2431 16AF  
                     l2423 168B                       l2415 166D                       l2407 165D  
                     l2351 15B9                       l2343 15A7                       l2335 1594  
                     l2327 1585                       l2175 0017                       l2319 1D25  
                     l2271 1F38                       l2263 1F21                       l2255 1F09  
                     l2247 1EF4                       l2239 1EE5                       l3231 0642  
                     l3223 05CB                       l3215 05A9                       l3151 02F4  
                     l3143 02C8                       l3135 0284                       l3119 0243  
                     l3311 13E4                       l3303 13E0                       l2185 1C77  
                     l3081 091D                       l3073 0905                       l3057 1C56  
                     l3049 1C4E                       l3065 1D91                       l2513 17FA  
                     l2505 17E8                       l2441 16C3                       l2433 16B3  
                     l2417 1676                       l2409 1666                       l2361 15D0  
                     l2353 15BD                       l2345 15AC                       l2337 159C  
                     l2329 1589                       l2177 0026                       l2169 000A  
                     l2601 0F20                       l2521 0CAC                       l2281 1DB9  
                     l2193 1009                       l2265 1F28                       l2257 1F0D  
                     l2249 1EF9                       l3241 066F                       l3233 0646  
                     l3225 0606                       l3217 05B3                       l3161 032A  
                     l3153 02FA                       l3145 02CC                       l3137 0292  
                     l3129 025A                       l3321 140D                       l3313 13E9  
                     l3305 13E1                       l2187 1C82                       l3067 1C0D  
                     l3091 1F43                       l3083 092E                       l3075 090A  
                     l3059 1D6C                       l2515 17FE                       l2507 17E9  
                     l2451 172B                       l2443 16CC                       l2435 16BC  
                     l2427 1694                       l2419 167A                       l2371 15E9  
                     l2363 15D1                       l2355 15BE                       l2347 15B2  
                     l2339 159D                       l2179 002B                       l2611 0F45  
                     l2603 0F2E                       l2531 0CC3                       l2523 0CB0  
                     l2291 1DDF                       l2283 1DC0                       l2275 1DAE  
                     l2195 100C                       l2259 1F11                       l2267 1F2E  
                     l3251 06AC                       l3243 067E                       l3235 064C  
                     l3227 0625                       l3219 05BF                       l3171 03D1  
                     l3163 0349                       l3155 030D                       l3147 02D0  
                     l3139 0296                       l3331 1461                       l3323 1410  
                     l3315 13F1                       l3307 13E2                       l2189 1C89  
                     l3093 1F4C                       l3085 0933                       l3077 0910  
                     l3069 08EF                       l2509 17ED                       l2453 1730  
                     l2437 16BE                       l2429 16AB                       l2445 16D1  
                     l2381 15FD                       l2373 15ED                       l2357 15C3  
                     l2365 15D3                       l2349 15B3                       l2621 0F68  
                     l2605 0F37                       l2613 0F4B                       l2541 0CDC  
                     l2533 0CC5                       l2525 0CB1                       l2517 0C9F  
                     l2293 1DE0                       l2285 1DC4                       l2277 1DB0  
                     l2701 014C                       l2197 1010                       l2269 1F33  
                     l3253 0707                       l3261 07A8                       l3245 0683  
                     l3237 0659                       l3229 0639                       l3181 0446  
                     l3165 0394                       l3157 0320                       l3149 02E9  
                     l3173 03D9                       l3341 14E8                       l3333 14AA  
                     l3325 1411                       l3317 13FA                       l3309 13E3  
                     l3095 1F5A                       l3087 0939                       l3079 0917  
                     l2471 1778                       l2463 1763                       l2447 16E7  
                     l2455 173F                       l2439 16C2                       l2391 1611  
                     l2383 1601                       l2375 15F1                       l2367 15E1  
                     l2359 15C8                       l2631 0F87                       l2615 0F4F  
                     l2607 0F3B                       l2551 0CF1                       l2543 0CDD  
                     l2535 0CCD                       l2527 0CB6                       l2519 0CA6  
                     l2295 1DE7                       l2287 1DC8                       l2279 1DB6  
                     l2199 1015                       l2711 0947                       l3263 07B0  
                     l3255 0742                       l3247 068A                       l3239 0668  
                     l3191 04A8                       l3183 046D                       l3175 03D9  
                     l3167 03AD                       l3159 0324                       l3271 07C8  
                     l3351 1537                       l3343 14F1                       l3335 14BC  
                     l3327 1412                       l3319 1408                       l3097 1F60  
                     l3089 1F3D                       l2481 1786                       l2473 177A  
                     l2465 176C                       l2457 1755                       l2449 1725  
                     l2393 1615                       l2385 1605                       l2377 15F5  
                     l2369 15E5                       l2801 1309                       l2641 0FCD  
                     l2633 0FA0                       l2625 0F70                       l2617 0F50  
                     l2609 0F3C                       l2561 0D0C                       l2553 0CF9  
                     l2545 0CE2                       l2537 0CD2                       l2529 0CBB  
                     l2289 1DD9                       l2297 1DED                       l2705 01F7  
                     l2721 0A38                       l2713 0949                       l3273 07D4  
                     l3265 07B7                       l3257 0761                       l3249 068E  
                     l3193 04C6                       l3185 047C                       l3177 041E  
                     l3169 03B6                       l3361 1563                       l3353 153B  
                     l3345 14FF                       l3337 14D7                       l3329 141D  
                     l3099 1D2A                       l2491 179D                       l2483 178A  
                     l2475 177F                       l2467 1770                       l2459 175A  
                     l2395 1619                       l2387 1609                       l2379 15F9  
                     l2803 1316                       l2651 0FEC                       l2643 0FD7  
                     l2627 0F75                       l2635 0FA6                       l2619 0F54  
                     l2571 0D8E                       l2563 0D1C                       l2555 0CFE  
                     l2547 0CE7                       l2539 0CD8                       l2723 0A3F  
                     l2715 0950                       l2731 0AF4                       l3267 07BB  
                     l3259 076D                       l3187 0497                       l3179 042B  
                     l3363 156B                       l3355 1544                       l3347 1507  
                     l3339 14E0                       l2661 1C59                       l2493 17AB  
                     l2485 1790                       l2469 1775                       l2477 1781  
                     l2397 161D                       l2389 160D                       l2821 1350  
                     l2813 132C                       l2653 0FF7                       l2645 0FD9  
                     l2637 0FB3                       l2629 0F83                       l2581 0DFC  
                     l2573 0DAA                       l2565 0D29                       l2557 0D03  
                     l2549 0CEF                       l2741 0BEA                       l2733 0AFB  
                     l2709 0943                       l3269 07C1                       l3197 04E5  
                     l3189 04A0                       l3277 07DC                       l3357 154C  
                     l3349 151E                       l3293 13C7                       l2663 1C5C  
                     l2671 1CBA                       l2911 112A                       l2903 10EE  
                     l2495 17AF                       l2479 1785                       l2399 1621  
                     l2831 1383                       l2823 1359                       l2815 1334  
                     l2807 131F                       l2751 125F                       l2647 0FE7  
                     l2639 0FBE                       l2591 0E8C                       l2583 0E0C  
                     l2575 0DC6                       l2567 0D46                       l2727 0AC7  
                     l3199 04EE                       l3279 07EE                       l3359 1555  
                     l3295 13CC                       l2665 1C62                       l2681 1CDC  
                     l2673 1CC4                       l2657 1C02                       l2913 114E  
                     l2905 1102                       l2497 17CD                       l2489 1798  
                     l2833 138D                       l2841 13A7                       l2825 136B  
                     l2817 1345                       l2761 127B                       l2649 0FEB  
                     l2593 0E9C                       l2585 0E29                       l2577 0DCF  
                     l2569 0D62                       l2745 0C72                       l3297 13D9  
                     l2667 1C65                       l2683 1CDF                       l2675 1CC7  
                     l2659 1C08                       l2915 1152                       l2907 111E  
                     l2923 1BF6                       l2499 17D6                       l2931 1072  
                     l2827 1379                       l2819 1347                       l2771 12A4  
                     l2763 1281                       l2755 1268                       l2595 0EC9  
                     l2587 0E42                       l2579 0DDF                       l2691 0033  
                     l2739 0BE3                       l3395 026C                       l3299 13DC  
                     l2669 1C6E                       l2685 1CE5                       l2677 1CD5  
                     l2917 118C                       l2909 1126                       l2925 1BFE  
                     l2941 109E                       l2933 107F                       l2861 1CAE  
                     l2853 1C94                       l2829 137A                       l2781 12CF  
                     l2773 12B2                       l2765 1290                       l2749 124C  
                     l2597 0EEF                       l2589 0E5F                       l2693 0039  
                     l2687 1CE8                       l2679 1CD8                       l2919 118E  
                     l2927 1C00                       l2943 10A6                       l2871 1FAD  
                     l2863 1CB4                       l2855 1C96                       l2847 13AE  
                     l2839 1395                       l2775 12BC                       l2767 1292  
                     l2599 0F17                       l2689 1CEC                       l2961 10CD  
                     l2953 10B4                       l2945 10A8                       l2937 1088  
                     l2881 1FE7                       l2873 1FBA                       l2857 1C9A  
                     l2849 13BE                       l2777 12BD                       l2769 129B  
                     l2891 1DF2                       l2963 10DD                       l2947 10AC  
                     l2955 10C6                       l2939 109D                       l2883 1FE8  
                     l2875 1FBE                       l2867 1F9A                       l2971 1E9B  
                     l2859 1CA7                       l2795 12F0                       l2787 12D7  
                     l2779 12C5                       l2699 0146                       l2893 1E06  
                     l2965 10E2                       l2885 1FF1                       l2877 1FC7  
                     l2869 1FAA                       l2981 1ED5                       l2973 1EA8  
                     l2797 1300                       l2789 12E9                       l2895 1E22  
                     l2879 1FD9                       l2887 1FF7                       l2975 1EAC  
                     l2983 1EDB                       l2967 1E90                       l2897 1E3C  
                     l2977 1EBE                       l2969 1E98                       l2993 1193  
                     l2899 1E3E                       l2987 1E40                       l2979 1ECC  
                     l2995 1198                       l2989 1E44                       l2997 119C  
                     l2999 11AC                       STR_1 08DF                       STR_2 08C1  
                     STR_3 08B1                       STR_4 08D1                       STR_5 08A0  
                     _BRGH 04C2                       _CREN 00C4                       u3010 1DD9  
                     u3011 1DD8                       u3100 1589                       u3101 1588  
                     u3005 1DC9                       u3110 158F                       u3030 1DED  
                     u3111 158E                       u3031 1DEC                       u3015 1DD5  
                     u3200 1648                       u3120 1594                       u3040 1CF6  
                     u3201 1646                       u3121 1593                       u3025 1DE1  
                     u3041 1CF5                       u3210 1649                       u3130 15B2  
                     u3131 15B1                       u3300 16B3                       u3220 165D  
                     u3140 15BD                       u3060 1D08                       u3301 16B2  
                     u3221 165C                       u3141 15BC                       u3061 1D07  
                     u4005 0169                       u3310 16C2                       u3230 166C  
                     u3150 15C3                       u3070 1D12                       u4030 0947  
                     u3311 16C1                       u3231 166B                       u3151 15C2  
                     u3071 1D11                       u3055 1CFA                       u4015 01B6  
                     u4031 0946                       u5000 1DAD                       u3400 1770  
                     u3160 15C8                       u4200 125F                       u4120 0AFB  
                     u4040 0950                       u5001 1DAC                       u3401 176F  
                     u3161 15C7                       u4201 125E                       u4025 0202  
                     u4121 0AFA                       u4105 0A8E                       u4041 094F  
                     u5010 08F4                       u3410 1775                       u3330 16E7  
                     u3250 1682                       u3170 15E1                       u4210 1279  
                     u3090 1D25                       u5011 08F3                       u3411 1774  
                     u3331 16E6                       u3251 1681                       u3171 15E0  
                     u4211 1278                       u3091 1D24                       u3075 1D0E  
                     u4115 0ACA                       u3500 17CD                       u3420 177F  
                     u3260 1686                       u3180 15E5                       u4300 12EF  
                     u5100 0280                       u3501 17CC                       u3421 177E  
                     u3341 16FE                       u3333 16E3                       u3325 16C5  
                     u3261 1685                       u3245 166F                       u3181 15E4  
                     u4301 12EE                       u3085 1D19                       u5101 027F  
                     u5030 091D                       u3510 17D6                       u3430 1785  
                     u3350 1712                       u3342 16FF                       u3270 168B  
                     u3190 163D                       u4230 12B2                       u2710 0017  
                     u5110 02AF                       u5031 091C                       u3511 17D5  
                     u3431 1784                       u3351 1713                       u3343 1704  
                     u3271 168A                       u3191 163C                       u4231 12B1  
                     u2711 0016                       u4135 0B1B                       u4055 0970  
                     u5111 02AE                       u3520 17DB                       u3440 178A  
                     u3360 1730                       u3352 1718                       u3344 1705  
                     u4400 1394                       u4320 1300                       u3600 0CE2  
                     u2800 102C                       u4160 0BEA                       u4080 0A3F  
                     u5200 0497                       u5120 02E9                       u5025 08FC  
                     u3521 17DA                       u3441 1789                       u3361 172F  
                     u3353 1719                       u3345 170A                       u3281 169D  
                     u4401 1393                       u4321 12FF                       u4225 129D  
                     u3601 0CE1                       u2801 102B                       u4161 0BE9  
                     u4145 0B57                       u4081 0A3E                       u4065 09AC  
                     u5201 0496                       u5121 02E8                       u5050 1D37  
                     u3530 17E8                       u3450 1790                       u3370 1755  
                     u3346 170B                       u3290 16AF                       u3282 16A4  
                     u4330 1316                       u4250 12CB                       u2730 002B  
                     u3610 0CE7                       u5130 0324                       u3531 17E7  
                     u3451 178F                       u3371 1754                       u3291 16AE  
                     u3283 16AB                       u3195 1639                       u4331 1315  
                     u4315 12F2                       u4251 12CA                       u4235 12AE  
                     u2731 002A                       u3611 0CE6                       u4155 0BA2  
                     u4075 09F7                       u5131 0323                       u2740 1C77  
                     u5060 1D59                       u3540 17ED                       u3460 1797  
                     u3380 175A                       u4500 1FAA                       u4420 13A6  
                     u4340 132A                       u4260 12CF                       u3620 0CFE  
                     u2820 103E                       u2900 1EFF                       u5220 05A8  
                     u5140 03AD                       u2741 1C76                       u5045 0925  
                     u3541 17EC                       u3461 1796                       u3381 1759  
                     u4501 1FA9                       u4421 13A5                       u4341 1329  
                     u4261 12CE                       u4245 12BE                       u2725 001E  
                     u3701 0E1B                       u3621 0CFD                       u2821 103D  
                     u2901 1EFE                       u5221 05A7                       u5141 03AC  
                     u2750 1C82                       u5070 1D6B                       u3550 17FE  
                     u3470 179D                       u4430 13AD                       u4270 12D6  
                     u3702 0E22                       u3630 0D03                       u5230 05B3  
                     u5150 03D1                       u2751 1C81                       u5071 1D6A  
                     u3551 17FD                       u3471 179C                       u4431 13AC  
                     u4415 1396                       u4271 12D5                       u3703 0E29  
                     u3631 0D02                       u2815 1030                       u4175 0BFD  
                     u4095 0A52                       u5231 05B2                       u5215 0575  
                     u5151 03D0                       u2760 1C89                       u5080 1C21  
                     u4600 1102                       u3480 17AF                       u4520 1FBE  
                     u4360 136B                       u3560 0CB0                       u2840 104F  
                     u2920 1F11                       u5320 07AF                       u5240 05BF  
                     u5160 042B                       u2761 1C88                       u5081 1C20  
                     u4601 1101                       u3481 17AE                       u4521 1FBD  
                     u4361 136A                       u3721 0E51                       u3641 0D54  
                     u3561 0CAF                       u2841 104E                       u2921 1F10  
                     u4185 0C39                       u5321 07AE                       u5305 070A  
                     u5241 05BE                       u5225 05A4                       u5161 042A  
                     u2770 1C90                       u4610 111E                       u3490 17BE  
                     u4450 13BE                       u4290 12E8                       u3810 0F3B  
                     u3722 0E58                       u3642 0D5B                       u3570 0CB6  
                     u2930 1F1B                       u5330 07C7                       u5170 0446  
                     u5090 0249                       u2771 1C8F                       u4611 111D  
                     u3395 1765                       u4515 1FAF                       u4451 13BD  
                     u4355 1352                       u4291 12E7                       u3811 0F3A  
                     u3731 0E7E                       u3723 0E5F                       u3715 0E2B  
                     u3651 0D70                       u3643 0D62                       u3571 0CB5  
                     u2835 103F                       u2931 1F1A                       u2915 1F03  
                     u4195 0C75                       u5331 07C6                       u5315 0770  
                     u5171 0445                       u5091 0248                       _PEIE 005E  
                     u4620 112A                       u4700 10AC                       u4540 1FD9  
                     u4460 1C9A                       u4380 1389                       u3900 0FB3  
                     u3732 0E85                       u3652 0D77                       u3580 0CBB  
                     u2860 1063                       u2780 1010                       u5340 07D4  
                     u5260 0638                       u5180 046D                       u4621 1129  
                     u4701 10AB                       u4541 1FD8                       u4461 1C99  
                     u4445 13B0                       u4381 1388                       u4365 1367  
                     u4285 12D8                       u3901 0FB2                       u3805 0F30  
                     u3741 0EAB                       u3733 0E8C                       u3661 0D9C  
                     u3653 0D7E                       u3581 0CBA                       u2861 1062  
                     u2845 104B                       u2781 100F                       u5341 07D3  
                     u5261 0637                       u5181 046C                       u5165 0427  
                     u4710 10B3                       u4390 138D                       u3910 0FCD  
                     u3830 0F4F                       u3750 0ED5                       u3742 0EB2  
                     u3662 0DA3                       u3590 0CDC                       u2870 1068  
                     u2790 101B                       u2950 1F2E                       u5350 07EE  
                     u5270 0659                       u5190 047C                       u4631 1139  
                     u3495 17B9                       u4711 10B2                       u4535 1FC0  
                     u4391 138C                       u4375 137C                       u3911 0FCC  
                     u3831 0F4E                       u3743 0EB9                       u3671 0DB8  
                     u3663 0DAA                       u3591 0CDB                       u2871 1067  
                     u2855 1057                       u2791 101A                       u2951 1F2D  
                     u2935 1F17                       u5351 07ED                       u5271 0658  
                     u5255 05CE                       u5191 047B                       u5407 14F9  
                     u4640 1152                       u4632 113A                       u4560 1FF7  
                     u4800 1EAC                       u3920 0FEB                       u3840 0F54  
                     u3672 0DBF                       u2960 1F33                       u2880 1EE9  
                     u5280 0668                       u5360 14D7                       u4641 1151  
                     u4633 113F                       u4561 1FF6                       u4545 1FD5  
                     u4801 1EAB                       u3921 0FEA                       u3905 0FAF  
                     u3841 0F53                       u3825 0F3E                       u3761 0EE1  
                     u3673 0DC6                       u2961 1F32                       u2945 1F22  
                     u2881 1EE8                       u5281 0667                       u5417 150F  
                     u5361 14D6                       u3930 1C08                       u4570 1E06  
                     u4634 1140                       u4730 10C5                       u4810 1EBE  
                     u4490 1CB4                       u3850 0F68                       u3770 0EFD  
                     u3762 0EE8                       u2970 1DB6                       u2890 1EF4  
                     u5290 0683                       u5370 1507                       u3931 1C07  
                     u4571 1E05                       u4651 1161                       u4635 1145  
                     u4731 10C4                       u4555 1FE9                       u4811 1EBD  
                     u4491 1CB3                       u4475 1CA1                       u3915 0FC9  
                     u3851 0F67                       u3763 0EEF                       u3755 0ED0  
                     u3691 0DEE                       u2971 1DB5                       u2891 1EF3  
                     u5291 0682                       u5275 0655                       u5195 0478  
                     u5427 155D                       u5371 1506                       _RCIE 0465  
                     u4580 1E22                       u4660 118C                       u4652 1162  
                     u4636 1146                       u4740 10CC                       u4900 11FF  
                     u3860 0F6F                       u3692 0DF5                       u5380 1537  
                     _RCIF 0065                       u5437 1CDA                       u4581 1E21  
                     u4661 118B                       u4653 1167                       u4741 10CB  
                     u4725 10B5                       u4485 1CA8                       u4901 11FE  
                     u3861 0F6E                       u3781 0F09                       u3693 0DFC  
                     u3685 0DC8                       u5285 0664                       u5381 1536  
                     u4590 1E3C                       u4654 1168                       u4670 1BFE  
                     u4830 1EDB                       u3870 0F75                       u3782 0F10  
                     u2990 1DC8                       u3950 0039                       u5447 1CEA  
                     u4591 1E3B                       u4655 116D                       u4671 1BFD  
                     u4831 1EDA                       u4815 1EBA                       u3871 0F74  
                     u3783 0F17                       u3775 0EF8                       u2991 1DC7  
                     u3951 0038                       u4656 116E                       u4760 10DD  
                     u4680 107F                       u4920 120F                       u4840 1198  
                     u3880 0F87                       u5457 1F47                       u3945 1CCA  
                     u4665 1188                       u4761 10DC                       u4681 107E  
                     u4825 1ECD                       u4921 120E                       u4841 1197  
                     u3881 0F86                       u2985 1DBA                       u4770 10E2  
                     u4690 1096                       u4930 1215                       u4850 119C  
                     u3890 0F96                       u5467 1F56                       u4595 1E38  
                     u4771 10E1                       u4755 10CF                       u4931 1214  
                     u4915 1204                       u4851 119B                       u3795 0F19  
                     u4780 1E98                       u4940 1219                       u4860 11BC  
                     u5477 1F64                       u4781 1E97                       u4941 1218  
                     u4861 11BB                       u3965 0056                       u5397 1402  
                     u4950 122E                       u3990 014C                       u5487 1C69  
                     u4695 1091                       u3895 0F91                       u3991 014B  
                     u3975 00B0                       u4960 123E                       u4880 11DD  
                     u4961 123D                       u4881 11DC                       u3985 0105  
                     u4970 1242                       u4795 1E9D                       u4971 1241  
                     u4955 1229                       u4875 11CF                       u4980 1D79  
                     u4990 1D9B                       u4895 11F1                       _SPEN 00C7  
                     _TRMT 04C1                       _TXEN 04C5                       _SYNC 04C4  
        ?_Lcd_Write_String 0075                       _main 13C7                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 1C72  
          __end_of_ReadADC 1C2C    __end_of_UART_Write_Text 1DAE              ___fltol@sign1 0064  
          __end_of___fladd 1800                      ?_main 0070            __end_of___awdiv 1072  
          __end_of___flneg 1C01            __end_of___awmod 1F3D            __end_of___flmul 1000  
          __end_of___flsub 1E90            __end_of___fltol 10EE            __end_of___lldiv 2000  
          ___awdiv@divisor 0077            __end_of___llmod 1EE4            __end_of___lwdiv 1DF2  
          __end_of___lwmod 1D2A            ___awdiv@counter 0020                      _RCREG 001A  
                    _SPBRG 0099    __size_of_Lcd_Set_Cursor 0052                      _TRISD 0088  
                    _TXREG 0019                ?_UART_Write 0070         __size_of_UART_Init 0017  
          __end_of_dpowers 08A0                      _scale 0940                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07F3  
         __end_of_Lcd_Init 1F9A           __end_of_Lcd_Port 1C94            __initialization 07F3  
             __end_of_main 1578                  ??_ADCinit 0070                     ??_main 00CB  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0074  
                   ?_scale 0048                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0079                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0037  
                   _TRISA0 0428                     _TRISB0 0430                     _TRISB1 0431  
                   _TRISB2 0432                     _TRISB3 0433                     _TRISC6 043E  
                   _TRISC7 043F           __end_of___xxtofl 124C                  ??_ReadADC 0072  
         __end_of__powers_ 0844          __end_of_UART_Init 1C58                     ___flge 10EE  
                   ___fleq 1DF2        __size_of_UART_Write 000C                  ??___fladd 0064  
                   ___wmul 1C94                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 0036           ?_UART_Write_Text 0071  
                ??___flsub 007E                  ??___fltol 005F                  ??___lldiv 0078  
                ??___llmod 0078                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _fround 0030           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075         __size_of__Umul8_16 0027                  ??_sprintf 00AD  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 002A               ___xxtofl@exp 0029               ___xxtofl@val 0020  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070          __end_of_Lcd_Clear 1C1A                 ___fltol@f1 005B  
           __pcstackCOMMON 0070              __end_of_scale 0C9F             _Lcd_Set_Cursor 08EE  
               __div_to_l_ 1309                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 004C  
          __div_to_l_@quot 0020                 __pbssBANK1 00CF              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 0030                 __pmaintext 13C7  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
                  ?_fround 0048  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 0940  
                  _ADCinit 1C2C                  ?___xxtofl 0020               ??_UART_Write 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0800  
           _Lcd_Write_Char 1CB9                    _Lcd_Cmd 1C58                    _ReadADC 1C1A  
        __end_of__npowers_ 0878            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1578                    ___awdiv 1009                    ___flneg 1BF6  
                  ___awmod 1EE4                    ___flmul 0C9F                    ___flsub 1E40  
                  ___fltol 1072                    ___lldiv 1F9A            __size_of___wmul 0025  
       __end_of_UART_Write 1C0D                    ___llmod 1E90                    ___lwdiv 1DAE  
               _fround$935 0057                 _fround$936 0053                    ___lwmod 1CF0  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0074                    __ptext1 023B  
                  __ptext2 0940                    __ptext3 1EE4                    __ptext4 1009  
                  __ptext5 0030                    __ptext6 1CF0                    __ptext7 1DAE  
                  __ptext8 0C9F                    __ptext9 0009                ?__div_to_l_ 0070  
                  _dpowers 0878                 ??___xxtofl 0024           ___awmod@dividend 0072  
                  _sprintf 023B                    clrloop0 1002                    _voltage 00D5  
   __end_of_Lcd_Write_Char 1CF0       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  Lcd_Port@a 0070             __tdiv_to_l_@f1 0070  
           __tdiv_to_l_@f2 0074                  _UART_Init 1C41              ??__tdiv_to_l_ 0078  
           UART_Write@data 0070                ___fladd@grs 006F              ___xxtofl@sign 0028  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075          Lcd_Write_String@i 007A  
              ___flmul@grs 003C        __size_of__div_to_l_ 00BE           ReadADC@TempValue 0072  
                _Lcd_Clear 1C0D             __end_of___flge 1190             __end_of___fleq 1E40  
           __end_of___wmul 1CB9           _Lcd_Write_String 1D2A                 ?_UART_Init 0070  
           __end_of_fround 023B   __size_of_UART_Write_Text 0042        start_initialization 07F3  
      __end_of__tdiv_to_l_ 1309          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022  
          ___llmod@divisor 0070            ___llmod@counter 0079                 ?_Lcd_Clear 0070  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 0009            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                 ??_fround 004C                   ?_ADCinit 0070              sprintf@tmpval 00C1  
                ___fladd@a 0060                  ___fladd@b 005C                 fround@prec 005B  
                ___flmul@a 0032                  ___flmul@b 002E                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B7                sprintf@eexp 00BF                sprintf@fval 00C6  
              sprintf@prec 00B9                   ?_ReadADC 0070           ___lwdiv@dividend 0078  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 005C                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 002E  
                 ?___flsub 00A0                   ?___fltol 005B                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 0844                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                ??_UART_Init 0074  
                __pstrings 0800                __tdiv_to_l_ 124C               ??__div_to_l_ 0078  
                _scale$937 0056           ___lwdiv@quotient 007B                   _ADCvalue 00EB  
                 ?_sprintf 00A8             __size_of_scale 035F          ??_UART_Write_Text 0073  
           ___wmul@product 0074                  clear_ram0 1001                   Lcd_Cmd@a 0073  
       __end_of__div_to_l_ 13C7                ??_Lcd_Clear 0074          UART_Init@baudrate 0070  
               _ADCON0bits 001F                __stringbase 080F                 _ADCON1bits 009F  
        ___wmul@multiplier 0070           __size_of_ADCinit 0015           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 1F3D                   _Lcd_Port 1C72   __end_of_Lcd_Write_String 1D6C  
         __size_of_Lcd_Cmd 001A           __size_of_ReadADC 0012                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___llmod 0054  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0810  
               sprintf@val 00BB                   ___xxtofl 1190            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 124C                   __ptext11 1309  
                 __ptext20 10EE                   __ptext12 1190                   __ptext21 1DF2  
                 __ptext13 1C94                   __ptext30 1C0D                   __ptext22 1D6C  
                 __ptext14 1E90                   __ptext31 1C58                   __ptext23 1C01  
                 __ptext15 1F9A                   __ptext32 1C72                   __ptext24 1C41  
                 __ptext16 1072                   __ptext33 1C2C                   __ptext25 1C1A  
                 __ptext17 1E40                   __ptext26 1D2A                   __ptext18 1578  
                 __ptext27 1CB9                   __ptext19 1BF6                   __ptext28 08EE  
                 __ptext29 1F3D                   __powers_ 0810           __size_of_sprintf 05B8  
      UART_Write_Text@text 0071              __size_of_main 01B1                   scale@scl 005A  
       Lcd_Write_Char@temp 0072                  sprintf@ap 00B6           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00C5           __tdiv_to_l_@quot 0020  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 080A  
       Lcd_Set_Cursor@temp 007A               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
          _UART_Write_Text 1D6C                   sprintf@c 00CA                   sprintf@f 00A8  
         ___lldiv@quotient 0079            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 080A                   stringtab 0800                 _UART_Write 1C01  
            ___fladd@signs 006C           UART_Write_Text@i 0076               ___fladd@aexp 006D  
             ___fladd@bexp 006E       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
